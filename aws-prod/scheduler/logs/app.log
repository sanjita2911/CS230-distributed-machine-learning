2025-06-10 05:02:56,524 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 05:02:56,525 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 05:02:56,534 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 05:02:56,557 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 05:02:56,561 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 05:02:56,591 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 05:05:01,872 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 05:09:12,815 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 05:09:12,816 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 05:09:12,826 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 05:09:13,772 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 05:09:13,774 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 05:09:13,775 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 05:09:17,821 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 05:09:18,826 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.10
2025-06-10 05:09:19,836 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 05:09:19,949 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.12
2025-06-10 05:09:20,055 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 05:09:20,063 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.11
2025-06-10 05:09:20,448 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 05:09:20,555 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.13
2025-06-10 05:09:20,571 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:20,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:20,600 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:20,660 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:26,068 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:27,101 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:27,292 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:28,798 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:32,118 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:32,318 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:33,828 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:34,830 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:37,339 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:38,247 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:39,919 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:40,847 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:44,657 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:45,391 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:45,892 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:46,163 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:49,667 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=58, timestamp=1749532189660, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-1", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1)]}
2025-06-10 05:09:49,953 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-1
2025-06-10 05:09:50,071 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:09:50,074 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:09:50,107 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:50,122 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:50,167 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:50,555 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:50,971 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:51,560 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:51,979 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:09:52,061 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:52,573 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:09:53,021 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:53,579 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=59, timestamp=1749532189661, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-2", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=60, timestamp=1749532189662, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-3", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=61, timestamp=1749532189663, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-4", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=62, timestamp=1749532189664, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-5", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=63, timestamp=1749532189664, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-6", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=64, timestamp=1749532189665, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-7", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 20, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=732, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=65, timestamp=1749532189667, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-8", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 20, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=728, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=66, timestamp=1749532189667, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-9", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 35, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=732, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=67, timestamp=1749532189668, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-10", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 35, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=68, timestamp=1749532189669, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-11", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=69, timestamp=1749532189670, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-12", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=70, timestamp=1749532189670, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-13", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=71, timestamp=1749532189671, timestamp_type=0, key=None, value='{"subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-14", "job_id": "fd58f6a2-2858-481a-b691-6d66eb18e569", "session_id": "e040b87a-4ea5-43b4-91e5-9f60ad3fdf14", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1)]}
2025-06-10 05:09:53,858 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-2
2025-06-10 05:09:53,910 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:09:53,932 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:09:53,933 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:53,944 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:53,957 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:53,986 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:53,997 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:09:54,106 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:09:54,130 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-3
2025-06-10 05:09:54,176 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:09:54,581 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:09:54,636 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:55,122 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:55,583 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:55,584 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:56,084 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:09:56,350 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:09:56,586 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:09:56,586 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-4
2025-06-10 05:09:57,591 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:09:57,961 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:09:57,987 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:09:58,003 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:58,016 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:58,595 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:09:58,595 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:09:58,596 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:09:58,596 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:09:58,870 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:09:59,096 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:09:59,194 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-5
2025-06-10 05:09:59,597 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:00,600 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:01,102 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:01,601 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:01,603 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:01,985 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:02,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:02,607 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:10:04,111 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:04,614 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:10:04,801 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:04,807 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-6
2025-06-10 05:10:05,028 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:05,034 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:05,044 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:05,116 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:06,118 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:07,598 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:07,619 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:08,120 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:10:08,621 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:08,947 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:10:09,625 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-7
2025-06-10 05:10:09,981 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:10,127 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:10,197 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:10,901 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:10,902 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:11,131 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:11,495 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:11,634 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:11,933 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:12,595 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:10:13,639 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:10:14,140 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-8
2025-06-10 05:10:14,176 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:14,176 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:14,177 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:15,533 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:15,645 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:15,645 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:15,671 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:15,694 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:10:15,698 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:10:15,733 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:10:15,736 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-9
2025-06-10 05:10:15,786 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:15,796 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:15,837 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:15,908 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:16,147 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:16,239 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:16,907 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:17,279 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:17,301 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:10:17,302 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:10:17,322 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-10
2025-06-10 05:10:17,434 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:17,578 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:17,655 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:18,156 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:19,158 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:19,659 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:19,924 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:10:19,944 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:10:19,971 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-11
2025-06-10 05:10:20,253 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:20,662 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:20,663 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:20,663 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:20,822 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:20,823 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:20,823 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:21,291 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:22,170 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:22,673 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:10:23,677 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:23,677 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:10:24,681 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-12
2025-06-10 05:10:25,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:25,684 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:26,402 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:26,404 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:26,528 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:26,583 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:26,623 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:26,639 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:10:26,672 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:10:26,714 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:10:26,722 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-13
2025-06-10 05:10:26,742 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:26,792 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:26,795 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:26,816 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:26,982 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:27,694 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:28,118 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:10:28,695 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:10:28,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:28,887 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-14
2025-06-10 05:10:29,699 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:29,748 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:10:29,985 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:10:30,314 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:10:30,702 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:31,203 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:31,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:32,000 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:10:32,384 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:33,078 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:10:34,716 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:10:34,717 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:36,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:37,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:39,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:41,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:41,816 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:43,683 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:45,730 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:47,039 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:48,169 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:49,110 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:50,953 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:53,285 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:53,464 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:10:54,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:10:56,817 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:10:58,944 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:10:59,112 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:00,113 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:02,453 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:04,563 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:05,029 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:05,735 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:07,537 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:10,134 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:10,405 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:11,121 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:13,384 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:15,489 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:15,750 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:16,815 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:18,822 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:20,535 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:21,038 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:24,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:25,398 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:25,787 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:26,905 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:30,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:31,007 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:31,911 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:33,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:36,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:36,987 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:37,627 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:38,901 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:41,414 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:42,732 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:42,917 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:45,091 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:47,478 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:49,111 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:49,112 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:50,688 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:53,513 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:11:55,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:11:56,520 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:11:57,973 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:11:58,989 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:01,382 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:02,879 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:03,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:04,384 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:08,787 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:09,976 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:10,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:11,018 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:15,292 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:15,502 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:16,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:16,894 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:20,767 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:21,454 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:21,954 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:22,468 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:26,482 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:26,984 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:27,486 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:28,073 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:32,343 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:33,346 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:34,348 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:34,349 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:39,466 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:40,845 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:40,847 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:41,024 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:45,921 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:46,527 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:47,031 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:47,313 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:52,385 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:53,894 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:54,395 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:12:54,898 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:12:58,411 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:12:59,458 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:12:59,961 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:00,966 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:03,978 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:05,902 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:05,927 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:07,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:09,006 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:11,001 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:11,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:13,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:14,744 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:16,755 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:17,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:18,257 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:20,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:22,320 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:23,459 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:24,798 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:26,164 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:27,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:29,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:30,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:31,832 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:34,807 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:35,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:36,254 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:38,313 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:41,108 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:41,545 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:42,556 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:44,123 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:46,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:47,607 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:48,141 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:49,366 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:49,809 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=72, timestamp=1749532429804, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-1", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1)]}
2025-06-10 05:13:49,821 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-1
2025-06-10 05:13:49,826 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:13:49,832 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:13:49,836 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:50,033 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:50,042 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:13:50,582 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:13:51,007 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:13:51,137 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:13:51,205 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=73, timestamp=1749532429805, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-2", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=74, timestamp=1749532429807, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-3", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=75, timestamp=1749532429808, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-4", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=76, timestamp=1749532429809, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-5", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=77, timestamp=1749532429811, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-6", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=78, timestamp=1749532429812, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-7", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=79, timestamp=1749532429813, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-8", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=80, timestamp=1749532429813, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-9", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 3.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=81, timestamp=1749532429814, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-10", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 3.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=82, timestamp=1749532429815, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-11", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=83, timestamp=1749532429816, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-12", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=84, timestamp=1749532429816, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-13", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 6.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=85, timestamp=1749532429817, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-14", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 6.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=86, timestamp=1749532429818, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-15", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 6.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=87, timestamp=1749532429819, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-16", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 6.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=88, timestamp=1749532429819, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-17", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=735, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=89, timestamp=1749532429821, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-18", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=731, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=90, timestamp=1749532429822, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-19", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 20, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=91, timestamp=1749532429822, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-20", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 20, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=92, timestamp=1749532429823, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-21", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 35, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=93, timestamp=1749532429824, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-22", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 35, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=94, timestamp=1749532429825, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-23", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=733, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=95, timestamp=1749532429826, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-24", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=729, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=96, timestamp=1749532429826, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-25", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=734, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=97, timestamp=1749532429827, timestamp_type=0, key=None, value='{"subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-26", "job_id": "e047b2cf-a735-4e20-a639-d324b5674b61", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "breast-cancer", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["radius_mean", "texture_mean", "perimeter_mean", "area_mean", "symmetry_mean"], "target_column": "diagnosis"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=730, serialized_header_size=-1)]}
2025-06-10 05:13:51,254 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-2
2025-06-10 05:13:51,492 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:13:52,063 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:13:52,088 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:13:53,161 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:53,592 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:53,794 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:53,802 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:53,854 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:13:53,855 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:13:53,861 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:13:53,878 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-3
2025-06-10 05:13:53,889 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:13:53,916 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:13:54,004 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:54,030 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:54,040 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:54,092 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:54,576 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:55,092 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:13:56,170 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:13:56,599 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-4
2025-06-10 05:13:56,599 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:13:57,985 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:13:58,003 - scheduler - INFO - release_worker_id() - Released worker ID: 3
2025-06-10 05:13:58,011 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:13:58,014 - scheduler - INFO - unsubscribe_worker() - Worker 3 unsubscribed leaving pool. 3 now free for assignment
2025-06-10 05:13:58,021 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:13:58,102 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:59,061 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:59,061 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:13:59,489 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:13:59,494 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:13:59,507 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:13:59,888 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:00,015 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-5
2025-06-10 05:14:00,111 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:01,053 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:01,175 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,186 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,248 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:14:01,255 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:14:01,263 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:14:01,270 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-6
2025-06-10 05:14:01,282 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:01,304 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:01,318 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,332 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,334 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,348 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:14:01,353 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:14:01,368 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-7
2025-06-10 05:14:01,371 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:01,374 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:01,378 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:01,392 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,401 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:01,440 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:01,459 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:01,462 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-8
2025-06-10 05:14:01,466 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:01,470 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:01,484 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:01,784 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:02,066 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:14:02,646 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:14:03,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:03,627 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:14:04,131 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-9
2025-06-10 05:14:04,751 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:04,582 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:04,853 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:04,889 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:04,883 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:04,969 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:05,972 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:06,254 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:14:06,336 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:14:07,140 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-10
2025-06-10 05:14:07,212 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:07,640 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:08,430 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:09,145 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:09,145 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:09,989 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:10,033 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:10,052 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:10,426 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:10,502 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:10,502 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:10,503 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=58, timestamp=1749532450501, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-2", "status": "DONE", "received_at": "2025-06-10T05:14:09.993253+00:00Z", "started_at": "2025-06-10T05:14:09.993276+00:00Z", "finished_at": "2025-06-10T05:14:10.498311+00:00Z", "cpu_percent_avg": 0.0, "mem_percent_avg": 34.7, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=367, serialized_header_size=-1)]}
2025-06-10 05:14:10,504 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-11
2025-06-10 05:14:10,504 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:10,505 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:10,505 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}]
2025-06-10 05:14:10,505 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:10,506 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=6.5s | Mem=1616MB | Speed=1.20 | Score=5.43
2025-06-10 05:14:10,506 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:10,560 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:10,574 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:14:10,578 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:14:10,590 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:14:10,598 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-12
2025-06-10 05:14:10,619 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:10,634 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:10,644 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:10,648 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.27 | Load: 6.5s | Mem Used: 1616MB | Speed: 1.20
2025-06-10 05:14:10,658 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:10,680 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:10,730 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:10,811 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-13
2025-06-10 05:14:11,014 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:11,033 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:11,085 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,115 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:11,116 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=59, timestamp=1749532451113, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-6", "status": "DONE", "received_at": "2025-06-10T05:14:10.610843+00:00Z", "started_at": "2025-06-10T05:14:10.610847+00:00Z", "finished_at": "2025-06-10T05:14:11.112871+00:00Z", "cpu_percent_avg": 17.1, "mem_percent_avg": 34.8, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:14:11,117 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:11,115 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.10 | Load: 7.5s | Mem Used: 2640MB | Speed: 1.20
2025-06-10 05:14:11,118 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,118 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}]
2025-06-10 05:14:11,120 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=8.0s | Mem=0MB | Speed=1.36 | Score=5.90
2025-06-10 05:14:11,119 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:11,132 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:11,149 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-14
2025-06-10 05:14:11,155 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:11,201 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:11,212 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,212 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.64 | Load: 8.0s | Mem Used: 0MB | Speed: 1.36
2025-06-10 05:14:11,237 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,241 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:11,258 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:11,264 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-15
2025-06-10 05:14:11,289 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:11,623 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:11,623 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=60, timestamp=1749532451621, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-10", "status": "DONE", "received_at": "2025-06-10T05:14:11.120399+00:00Z", "started_at": "2025-06-10T05:14:11.120402+00:00Z", "finished_at": "2025-06-10T05:14:11.621793+00:00Z", "cpu_percent_avg": 16.5, "mem_percent_avg": 34.7, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:11,623 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:11,624 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,623 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:11,625 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.37 | Load: 9.0s | Mem Used: 1024MB | Speed: 1.36
2025-06-10 05:14:11,625 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}]
2025-06-10 05:14:11,625 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=9.5s | Mem=0MB | Speed=1.48 | Score=6.40
2025-06-10 05:14:11,625 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:11,693 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:11,707 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:12,031 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-16
2025-06-10 05:14:12,077 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:12,129 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:12,129 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:12,130 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=61, timestamp=1749532452128, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-14", "status": "DONE", "received_at": "2025-06-10T05:14:11.626735+00:00Z", "started_at": "2025-06-10T05:14:11.626737+00:00Z", "finished_at": "2025-06-10T05:14:12.128097+00:00Z", "cpu_percent_avg": 16.7, "mem_percent_avg": 34.4, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:12,130 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:12,130 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:12,131 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}]
2025-06-10 05:14:12,131 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=10.0s | Mem=0MB | Speed=1.59 | Score=6.30
2025-06-10 05:14:12,131 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.07 | Load: 9.5s | Mem Used: 0MB | Speed: 1.48
2025-06-10 05:14:12,135 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:12,634 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:12,635 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:12,635 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:12,637 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=62, timestamp=1749532452633, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-4", "status": "DONE", "received_at": "2025-06-10T05:14:12.132281+00:00Z", "started_at": "2025-06-10T05:14:12.132284+00:00Z", "finished_at": "2025-06-10T05:14:12.633783+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:14:12,637 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:12,638 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}]
2025-06-10 05:14:12,636 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-17
2025-06-10 05:14:12,638 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=10.5s | Mem=0MB | Speed=1.67 | Score=6.29
2025-06-10 05:14:12,638 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:13,140 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:13,141 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:13,142 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=63, timestamp=1749532453140, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-7", "status": "DONE", "received_at": "2025-06-10T05:14:12.638327+00:00Z", "started_at": "2025-06-10T05:14:12.638329+00:00Z", "finished_at": "2025-06-10T05:14:13.140456+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:14:13,142 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:13,142 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.93 | Load: 10.0s | Mem Used: 0MB | Speed: 1.59
2025-06-10 05:14:13,143 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:13,142 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:13,143 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:13,143 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:13,143 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.502127}]
2025-06-10 05:14:13,145 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.0s | Mem=1024MB | Speed=1.73 | Score=6.34
2025-06-10 05:14:13,144 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-18
2025-06-10 05:14:13,647 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:13,647 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:13,648 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:13,648 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=64, timestamp=1749532453645, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-10", "status": "DONE", "received_at": "2025-06-10T05:14:13.144427+00:00Z", "started_at": "2025-06-10T05:14:13.144430+00:00Z", "finished_at": "2025-06-10T05:14:13.645778+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:13,649 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:13,649 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:13,650 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.502127}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501348}]
2025-06-10 05:14:13,650 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=10.5s | Mem=0MB | Speed=1.78 | Score=5.88
2025-06-10 05:14:13,650 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.34 | Load: 10.0s | Mem Used: 0MB | Speed: 1.73
2025-06-10 05:14:14,154 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:14,154 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:14,155 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:14,155 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:14,155 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=65, timestamp=1749532454153, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-12", "status": "DONE", "received_at": "2025-06-10T05:14:13.651964+00:00Z", "started_at": "2025-06-10T05:14:13.651966+00:00Z", "finished_at": "2025-06-10T05:14:14.152952+00:00Z", "cpu_percent_avg": 16.3, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:14,156 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-19
2025-06-10 05:14:14,157 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:14,157 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:14,157 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:14,158 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.502127}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501348}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500986}]
2025-06-10 05:14:14,158 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.0s | Mem=0MB | Speed=1.83 | Score=6.01
2025-06-10 05:14:14,158 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:14,660 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:14,662 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=66, timestamp=1749532454659, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-13", "status": "DONE", "received_at": "2025-06-10T05:14:14.157406+00:00Z", "started_at": "2025-06-10T05:14:14.157410+00:00Z", "finished_at": "2025-06-10T05:14:14.658989+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:14,661 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:14,661 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.44 | Load: 10.5s | Mem Used: 0MB | Speed: 1.78
2025-06-10 05:14:14,662 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:14,663 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:14,664 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:14,663 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.502127}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501348}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500986}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501579}]
2025-06-10 05:14:14,665 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=10.5s | Mem=0MB | Speed=1.86 | Score=5.64
2025-06-10 05:14:14,664 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:14,668 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-20
2025-06-10 05:14:14,672 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:15,166 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:15,167 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:15,168 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,168 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=67, timestamp=1749532455165, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-14", "status": "DONE", "received_at": "2025-06-10T05:14:14.663088+00:00Z", "started_at": "2025-06-10T05:14:14.663090+00:00Z", "finished_at": "2025-06-10T05:14:15.165026+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:15,168 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.17 | Load: 10.5s | Mem Used: 0MB | Speed: 1.86
2025-06-10 05:14:15,168 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:15,168 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,169 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.505035}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.502024}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501391}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50136}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501499}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.502127}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501348}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500986}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501579}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501936}]
2025-06-10 05:14:15,169 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:15,177 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:15,177 - scheduler - ERROR - _ingress_loop() - Failed to schedule task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 265, in _ingress_loop
    est = self.predictor.predict(task)
  File "/app/scheduler_service.py", line 69, in predict
    est = float(self._model.predict([self._features(task)])[0])
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 2124, in predict
    return self._raw_predict(X).ravel()
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 961, in _raw_predict
    raw_predictions = self._raw_predict_init(X)
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 947, in _raw_predict_init
    X = self.estimators_[0, 0]._validate_X_predict(X, check_input=True)
IndexError: index 0 is out of bounds for axis 0 with size 0
2025-06-10 05:14:15,182 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:14:15,183 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-22
2025-06-10 05:14:15,183 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=12.0s | Mem=1024MB | Speed=1.89 | Score=6.35
2025-06-10 05:14:15,184 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:15,242 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:15,448 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,449 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:15,500 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.35 | Load: 11.0s | Mem Used: 0MB | Speed: 1.89
2025-06-10 05:14:15,657 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,645 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:15,671 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:15,673 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:15,672 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:15,674 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-23
2025-06-10 05:14:15,676 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:15,676 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:15,675 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=68, timestamp=1749532455669, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-15", "status": "DONE", "received_at": "2025-06-10T05:14:15.169146+00:00Z", "started_at": "2025-06-10T05:14:15.169148+00:00Z", "finished_at": "2025-06-10T05:14:15.669824+00:00Z", "cpu_percent_avg": 16.9, "mem_percent_avg": 34.5, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:15,677 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:15,676 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,677 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.88 | Load: 12.0s | Mem Used: 1024MB | Speed: 1.89
2025-06-10 05:14:15,678 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,677 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}]
2025-06-10 05:14:15,678 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=12.5s | Mem=0MB | Speed=1.91 | Score=6.54
2025-06-10 05:14:15,678 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:15,701 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:15,711 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-24
2025-06-10 05:14:15,720 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:15,733 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:15,759 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,766 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.06 | Load: 12.5s | Mem Used: 0MB | Speed: 1.91
2025-06-10 05:14:15,859 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:15,864 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:15,995 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:16,005 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-25
2025-06-10 05:14:16,177 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:16,178 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:16,177 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:16,178 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:16,179 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=69, timestamp=1749532456175, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-16", "status": "DONE", "received_at": "2025-06-10T05:14:15.674647+00:00Z", "started_at": "2025-06-10T05:14:15.674657+00:00Z", "finished_at": "2025-06-10T05:14:16.175810+00:00Z", "cpu_percent_avg": 21.8, "mem_percent_avg": 35.0, "metric_name": "accuracy", "metric_value": 0.9473684210526315}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:16,179 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.59 | Load: 13.5s | Mem Used: 1024MB | Speed: 1.91
2025-06-10 05:14:16,179 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:16,180 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}]
2025-06-10 05:14:16,179 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:16,180 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=14.0s | Mem=0MB | Speed=1.93 | Score=7.26
2025-06-10 05:14:16,180 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:16,254 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:16,385 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: e047b2cf-a735-4e20-a639-d324b5674b61-subtask-26
2025-06-10 05:14:16,682 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:14:16,683 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:16,683 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:14:16,684 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:16,684 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.78 | Load: 14.0s | Mem Used: 0MB | Speed: 1.93
2025-06-10 05:14:16,684 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=70, timestamp=1749532456680, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-17", "status": "DONE", "received_at": "2025-06-10T05:14:16.179540+00:00Z", "started_at": "2025-06-10T05:14:16.179544+00:00Z", "finished_at": "2025-06-10T05:14:16.680794+00:00Z", "cpu_percent_avg": 30.3, "mem_percent_avg": 35.4, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:16,685 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:14:16,685 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:16,685 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}]
2025-06-10 05:14:16,685 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:14:16,686 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=14.5s | Mem=0MB | Speed=1.94 | Score=7.46
2025-06-10 05:14:16,686 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:14:17,234 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:17,696 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=71, timestamp=1749532457186, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-18", "status": "DONE", "received_at": "2025-06-10T05:14:16.684515+00:00Z", "started_at": "2025-06-10T05:14:16.684518+00:00Z", "finished_at": "2025-06-10T05:14:17.186280+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 34.6, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:17,697 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:18,236 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}]
2025-06-10 05:14:18,582 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=14.0s | Mem=0MB | Speed=1.95 | Score=7.17
2025-06-10 05:14:18,738 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:19,519 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=72, timestamp=1749532457692, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-19", "status": "DONE", "received_at": "2025-06-10T05:14:17.191366+00:00Z", "started_at": "2025-06-10T05:14:17.191368+00:00Z", "finished_at": "2025-06-10T05:14:17.692252+00:00Z", "cpu_percent_avg": 15.9, "mem_percent_avg": 34.6, "metric_name": "accuracy", "metric_value": 0.9473684210526315}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=73, timestamp=1749532458197, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-20", "status": "DONE", "received_at": "2025-06-10T05:14:17.695418+00:00Z", "started_at": "2025-06-10T05:14:17.695420+00:00Z", "finished_at": "2025-06-10T05:14:18.197237+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 34.6, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=74, timestamp=1749532458702, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-22", "status": "DONE", "received_at": "2025-06-10T05:14:18.200748+00:00Z", "started_at": "2025-06-10T05:14:18.200750+00:00Z", "finished_at": "2025-06-10T05:14:18.701912+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 34.6, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:19,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:20,051 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:20,259 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}]
2025-06-10 05:14:20,724 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:20,724 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=13.5s | Mem=0MB | Speed=1.96 | Score=6.88
2025-06-10 05:14:21,104 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:21,259 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:22,069 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501817}]
2025-06-10 05:14:22,074 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=13.0s | Mem=0MB | Speed=1.97 | Score=6.60
2025-06-10 05:14:22,229 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:22,750 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501817}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501162}]
2025-06-10 05:14:23,252 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=12.5s | Mem=0MB | Speed=1.97 | Score=6.32
2025-06-10 05:14:24,096 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:14:24,754 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=75, timestamp=1749532459206, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-23", "status": "DONE", "received_at": "2025-06-10T05:14:18.705238+00:00Z", "started_at": "2025-06-10T05:14:18.705240+00:00Z", "finished_at": "2025-06-10T05:14:19.206850+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 34.7, "metric_name": "accuracy", "metric_value": 0.9473684210526315}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=76, timestamp=1749532459711, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-24", "status": "DONE", "received_at": "2025-06-10T05:14:19.210561+00:00Z", "started_at": "2025-06-10T05:14:19.210563+00:00Z", "finished_at": "2025-06-10T05:14:19.711806+00:00Z", "cpu_percent_avg": 20.9, "mem_percent_avg": 34.8, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=77, timestamp=1749532460216, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-25", "status": "DONE", "received_at": "2025-06-10T05:14:19.715381+00:00Z", "started_at": "2025-06-10T05:14:19.715384+00:00Z", "finished_at": "2025-06-10T05:14:20.216835+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 34.8, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=78, timestamp=1749532460722, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-26", "status": "DONE", "received_at": "2025-06-10T05:14:20.220553+00:00Z", "started_at": "2025-06-10T05:14:20.220556+00:00Z", "finished_at": "2025-06-10T05:14:20.721918+00:00Z", "cpu_percent_avg": 16.4, "mem_percent_avg": 34.8, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:14:25,245 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:25,246 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:25,246 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501817}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501162}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.50161}]
2025-06-10 05:14:26,259 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:26,481 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=12.0s | Mem=0MB | Speed=1.98 | Score=6.06
2025-06-10 05:14:26,507 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:26,517 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501817}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501162}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.50161}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501243}]
2025-06-10 05:14:26,526 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.5s | Mem=0MB | Speed=1.98 | Score=5.79
2025-06-10 05:14:26,540 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:26,591 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.500676}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.501153}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.50125}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501762}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.500884}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501817}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501162}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9473684210526315], 'y': 0.50161}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501243}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9298245614035088], 'y': 0.501451}]
2025-06-10 05:14:26,709 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:14:26,713 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.0s | Mem=0MB | Speed=1.98 | Score=5.53
2025-06-10 05:14:26,721 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:14:26,760 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}]
2025-06-10 05:14:27,153 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:27,262 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=10.5s | Mem=0MB | Speed=1.99 | Score=5.27
2025-06-10 05:14:30,271 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:31,554 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:32,856 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:36,129 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:37,854 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:38,781 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:42,263 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:44,093 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:45,597 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:48,223 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:51,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:52,080 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:54,088 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:14:57,744 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:14:58,746 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:14:59,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:02,820 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:04,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:05,332 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:08,877 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:09,882 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:11,389 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:15,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:17,189 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:17,780 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:22,646 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:23,653 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:24,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:28,844 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:29,346 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:30,351 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:34,489 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:36,284 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:37,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:39,799 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:42,713 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:42,919 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:46,060 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:47,993 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:48,971 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:51,680 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:54,039 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:15:54,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:15:57,675 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:15:59,742 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:00,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:03,296 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:05,133 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:06,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:08,789 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:11,230 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:13,124 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:14,606 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:17,170 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:19,138 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:20,644 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:23,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:25,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:26,492 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:28,494 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:31,714 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:31,815 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:34,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:37,312 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:37,748 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:40,369 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:42,496 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:43,501 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:46,349 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:48,655 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:49,657 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:51,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:16:54,640 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:16:54,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:16:58,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:00,027 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:01,983 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:03,488 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:05,369 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:07,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:09,847 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:11,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:13,981 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:15,373 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:16,405 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:20,426 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:21,921 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:22,436 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:26,023 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:27,879 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:28,381 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:31,895 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:33,400 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:33,901 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:37,420 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:38,925 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:41,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:43,621 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:45,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:47,030 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:49,158 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:51,147 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:52,206 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:17:55,320 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:17:58,146 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:17:58,421 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:00,625 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:03,576 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:04,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:06,369 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:08,788 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:10,011 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:12,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:14,951 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:15,761 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:18,182 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:20,561 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:21,062 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:25,100 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:26,390 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:26,520 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:31,418 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:31,922 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:32,346 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:37,488 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:37,606 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:38,611 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:43,209 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:43,923 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:44,650 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:49,221 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:50,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:51,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:18:55,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:18:56,198 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:18:57,203 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:00,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:02,513 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:04,516 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:06,018 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:10,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:10,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:12,218 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:15,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:16,084 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:17,558 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:21,093 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:22,342 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:24,186 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:26,360 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:28,213 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:29,374 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:32,373 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:34,212 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:35,216 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:37,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:39,232 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:41,238 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:43,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:44,832 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:47,275 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:48,780 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:49,947 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:52,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:19:54,812 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:19:55,315 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:19:58,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:00,093 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:01,190 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:04,105 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:05,416 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:06,923 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:10,158 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:11,456 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:13,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:15,428 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:17,447 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:19,951 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:21,206 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:23,176 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:26,435 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:27,069 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:28,781 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:32,192 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:32,874 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:34,605 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:38,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:38,687 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:40,198 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:44,203 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:44,950 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:46,005 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:49,527 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:51,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:51,377 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:20:55,318 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:20:56,728 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:20:57,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:01,462 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:02,223 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:03,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:07,383 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:08,246 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:08,890 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:12,506 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:13,561 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:15,091 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:17,732 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:19,060 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:20,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:23,397 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:25,600 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:26,283 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:30,384 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:31,228 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:32,047 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:36,402 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:37,087 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:38,208 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:42,087 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:42,924 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:44,552 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:47,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:48,653 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:50,054 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:53,059 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:21:54,702 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:21:55,466 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:21:58,504 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:00,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:01,119 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:04,403 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:06,233 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:06,450 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:09,772 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:11,562 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:12,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:15,351 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:17,355 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:17,856 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:21,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:23,375 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:24,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:26,785 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:29,663 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:30,230 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:32,215 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:36,212 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:36,719 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:37,733 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:41,783 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:42,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:43,286 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:47,946 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:48,570 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:50,159 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:53,490 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:22:55,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:22:55,280 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:22:59,161 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:00,668 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:01,332 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:04,347 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:06,959 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:08,965 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:09,969 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:12,978 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:14,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:15,776 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:18,579 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:20,585 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:22,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:25,109 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:26,619 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:28,628 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:31,955 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:32,131 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:35,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:38,037 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:38,538 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:41,047 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:43,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:44,638 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:48,643 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:49,356 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:50,776 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:23:54,518 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:23:54,792 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:23:56,796 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:00,180 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:01,276 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:02,371 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:05,327 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:07,336 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:08,721 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:11,772 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:13,780 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:14,782 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:17,756 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:19,262 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:20,756 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:25,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:26,588 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:29,798 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:31,782 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:32,286 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:34,815 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:37,372 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:38,930 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:40,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:42,839 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:45,763 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:46,354 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:48,362 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:51,814 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:52,817 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:53,819 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:24:57,831 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:24:58,333 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:24:59,405 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:03,756 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:05,445 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:05,446 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:10,474 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:12,628 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:13,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:17,966 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:20,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:20,271 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:24,564 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:25,802 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:26,493 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:31,821 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:31,931 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:32,132 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:37,218 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:38,617 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:39,226 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:43,559 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:44,249 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:44,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:49,048 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:50,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:51,559 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:25:54,699 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:25:55,700 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:25:57,110 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:00,228 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:02,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:03,029 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:05,566 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:08,417 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:09,275 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:11,663 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:14,337 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:14,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:17,346 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:20,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:20,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:22,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:25,804 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:28,163 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:28,782 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:32,329 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:34,484 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:36,398 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:38,103 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:39,656 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 5
2025-06-10 05:26:40,276 - scheduler - INFO - subscribe_worker() - Worker 5 registered at 172.18.0.11
2025-06-10 05:26:40,509 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:26:42,273 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:42,804 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:43,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:46,417 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:26:48,051 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:48,298 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:48,365 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:51,818 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:26:53,347 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:53,849 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:26:54,352 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:26:57,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:26:59,159 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:26:59,750 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:00,288 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:03,349 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:27:04,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:05,378 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:06,183 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:09,695 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:27:10,209 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:11,296 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:12,461 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:12,491 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=98, timestamp=1749533232473, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-1", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 05:27:12,510 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-1
2025-06-10 05:27:12,799 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:13,301 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:13,452 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:13,802 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:13,886 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:13,889 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:27:13,889 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 05:27:13,894 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 05:27:13,907 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=99, timestamp=1749533232474, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-2", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=100, timestamp=1749533232476, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-3", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=101, timestamp=1749533232476, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-4", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=102, timestamp=1749533232477, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-5", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=103, timestamp=1749533232477, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-6", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=104, timestamp=1749533232478, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-7", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=105, timestamp=1749533232479, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-8", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=106, timestamp=1749533232480, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-9", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=107, timestamp=1749533232480, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-10", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=108, timestamp=1749533232481, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-11", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=109, timestamp=1749533232482, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-12", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=110, timestamp=1749533232482, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-13", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=111, timestamp=1749533232483, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-14", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=112, timestamp=1749533232484, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-15", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=113, timestamp=1749533232485, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-16", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=114, timestamp=1749533232485, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-17", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=115, timestamp=1749533232485, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-18", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=116, timestamp=1749533232486, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-19", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=117, timestamp=1749533232487, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-20", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=118, timestamp=1749533232488, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-21", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=119, timestamp=1749533232489, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-22", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 05:27:13,917 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-2
2025-06-10 05:27:13,949 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:13,964 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:14,808 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:15,310 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:27:15,489 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:15,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:16,312 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:16,515 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:27:16,813 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 05:27:16,814 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:16,914 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 05:27:17,559 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-3
2025-06-10 05:27:18,319 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:18,452 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:18,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:18,452 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:19,320 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:19,321 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:19,443 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:27:19,487 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 05:27:19,823 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 05:27:19,968 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-4
2025-06-10 05:27:19,979 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:19,986 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:20,001 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:20,303 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:20,337 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:20,871 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 05:27:20,874 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:27:21,000 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 05:27:21,011 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 05:27:21,020 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-5
2025-06-10 05:27:21,045 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:21,072 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:21,073 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:21,079 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:21,250 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:21,344 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:27:21,345 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 05:27:21,396 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 05:27:21,768 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:21,835 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-6
2025-06-10 05:27:22,370 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:22,839 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:22,843 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:22,843 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:22,843 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:22,844 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=79, timestamp=1749533242841, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-6", "status": "DONE", "received_at": "2025-06-10T05:27:22.338945+00:00Z", "started_at": "2025-06-10T05:27:22.338965+00:00Z", "finished_at": "2025-06-10T05:27:22.841223+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 37.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:27:22,844 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.78 | Load: 10.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:22,845 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:22,845 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}]
2025-06-10 05:27:22,845 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.0s | Mem=0MB | Speed=1.99 | Score=5.52
2025-06-10 05:27:22,845 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:24,662 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:27:24,662 - scheduler - INFO - release_worker_id() - Released worker ID: 5
2025-06-10 05:27:24,698 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:25,353 - scheduler - INFO - unsubscribe_worker() - Worker 5 unsubscribed leaving pool. 5 now free for assignment
2025-06-10 05:27:25,510 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:25,855 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:26,056 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-7
2025-06-10 05:27:27,364 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:27,365 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:27,366 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:27,366 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:27,365 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:27,365 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=80, timestamp=1749533247363, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-7", "status": "DONE", "received_at": "2025-06-10T05:27:26.861571+00:00Z", "started_at": "2025-06-10T05:27:26.861573+00:00Z", "finished_at": "2025-06-10T05:27:27.363017+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 37.3, "metric_name": "accuracy", "metric_value": 0.8666666666666667}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:27:27,367 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.02 | Load: 11.0s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:27,368 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:27,368 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:27,369 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}]
2025-06-10 05:27:27,369 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=11.5s | Mem=0MB | Speed=1.99 | Score=5.77
2025-06-10 05:27:27,368 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:27,871 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:28,286 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:28,373 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-8
2025-06-10 05:27:28,594 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:28,615 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:28,661 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:28,957 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.27 | Load: 11.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:28,958 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:28,959 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=81, timestamp=1749533248955, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-8", "status": "DONE", "received_at": "2025-06-10T05:27:28.454157+00:00Z", "started_at": "2025-06-10T05:27:28.454159+00:00Z", "finished_at": "2025-06-10T05:27:28.955349+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 37.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:27:28,958 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:28,959 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:28,959 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:28,960 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:28,960 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}]
2025-06-10 05:27:28,962 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=13.0s | Mem=1024MB | Speed=1.99 | Score=6.52
2025-06-10 05:27:28,961 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-9
2025-06-10 05:27:28,999 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:29,065 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:29,070 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,080 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.52 | Load: 12.0s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:29,081 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,097 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:29,110 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:29,116 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-10
2025-06-10 05:27:29,131 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:29,136 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:29,139 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,144 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.02 | Load: 13.0s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:29,156 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,173 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:29,195 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:29,200 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-11
2025-06-10 05:27:29,223 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:29,232 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:29,264 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,278 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.52 | Load: 14.0s | Mem Used: 2048MB | Speed: 1.99
2025-06-10 05:27:29,291 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,463 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:29,466 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:29,466 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:29,466 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=82, timestamp=1749533249465, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-9", "status": "DONE", "received_at": "2025-06-10T05:27:28.963726+00:00Z", "started_at": "2025-06-10T05:27:28.963729+00:00Z", "finished_at": "2025-06-10T05:27:29.464897+00:00Z", "cpu_percent_avg": 18.0, "mem_percent_avg": 37.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:27:29,467 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-12
2025-06-10 05:27:29,468 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:29,468 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:29,469 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}]
2025-06-10 05:27:29,469 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:29,470 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,470 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.02 | Load: 15.0s | Mem Used: 3072MB | Speed: 1.99
2025-06-10 05:27:29,470 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:29,469 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=14.5s | Mem=0MB | Speed=1.99 | Score=7.26
2025-06-10 05:27:29,470 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:27:29,972 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:29,972 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=83, timestamp=1749533249971, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-10", "status": "DONE", "received_at": "2025-06-10T05:27:29.469798+00:00Z", "started_at": "2025-06-10T05:27:29.469800+00:00Z", "finished_at": "2025-06-10T05:27:29.971005+00:00Z", "cpu_percent_avg": 25.2, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:29,972 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:27:29,973 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:29,974 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-13
2025-06-10 05:27:29,974 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501205}]
2025-06-10 05:27:29,976 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=15.0s | Mem=1024MB | Speed=1.99 | Score=7.51
2025-06-10 05:27:29,976 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:30,477 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:30,477 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.51 | Load: 14.0s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:30,477 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:30,477 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:30,478 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=84, timestamp=1749533250476, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-11", "status": "DONE", "received_at": "2025-06-10T05:27:29.974359+00:00Z", "started_at": "2025-06-10T05:27:29.974362+00:00Z", "finished_at": "2025-06-10T05:27:30.475986+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:30,478 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:30,478 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:30,479 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:30,479 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501205}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501624}]
2025-06-10 05:27:30,480 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-14
2025-06-10 05:27:30,480 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=15.5s | Mem=1024MB | Speed=1.99 | Score=7.76
2025-06-10 05:27:30,481 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:30,526 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:30,984 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:30,985 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=85, timestamp=1749533250983, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-13", "status": "DONE", "received_at": "2025-06-10T05:27:30.480070+00:00Z", "started_at": "2025-06-10T05:27:30.480073+00:00Z", "finished_at": "2025-06-10T05:27:30.983547+00:00Z", "cpu_percent_avg": 16.1, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:30,984 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.76 | Load: 14.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:30,985 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:30,986 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:30,986 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501205}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501624}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.503474}]
2025-06-10 05:27:30,987 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=15.0s | Mem=0MB | Speed=1.99 | Score=7.51
2025-06-10 05:27:30,986 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:31,488 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:31,489 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-15
2025-06-10 05:27:31,490 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:31,491 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=86, timestamp=1749533251489, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-14", "status": "DONE", "received_at": "2025-06-10T05:27:30.987575+00:00Z", "started_at": "2025-06-10T05:27:30.987578+00:00Z", "finished_at": "2025-06-10T05:27:31.488880+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:31,491 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:31,491 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:31,491 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:31,492 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501205}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501624}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.503474}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501302}]
2025-06-10 05:27:31,492 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=14.5s | Mem=0MB | Speed=1.99 | Score=7.26
2025-06-10 05:27:31,492 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.01 | Load: 15.0s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:31,869 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:27:31,929 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:31,934 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:27:32,018 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:27:32,075 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-16
2025-06-10 05:27:32,078 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:32,080 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:32,082 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.76 | Load: 14.5s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:32,172 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:32,182 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:32,359 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-17
2025-06-10 05:27:32,580 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:32,581 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:32,581 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.26 | Load: 15.5s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:32,582 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:32,582 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:32,581 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:32,580 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:32,583 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-18
2025-06-10 05:27:32,585 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=87, timestamp=1749533252579, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-16", "status": "DONE", "received_at": "2025-06-10T05:27:32.077506+00:00Z", "started_at": "2025-06-10T05:27:32.077509+00:00Z", "finished_at": "2025-06-10T05:27:32.578921+00:00Z", "cpu_percent_avg": 22.7, "mem_percent_avg": 36.7, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:32,585 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:32,586 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:32,587 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.9385964912280702], 'y': 0.501362}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502258}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 0.8666666666666667], 'y': 0.501444}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50119}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501168}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501205}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501624}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.503474}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501302}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501412}]
2025-06-10 05:27:32,586 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:32,593 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.76 | Load: 16.5s | Mem Used: 2048MB | Speed: 1.99
2025-06-10 05:27:32,594 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:27:32,594 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=17.0s | Mem=0MB | Speed=1.99 | Score=8.51
2025-06-10 05:27:32,594 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:32,622 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:32,651 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-19
2025-06-10 05:27:33,088 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:33,089 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:33,090 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:33,089 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=88, timestamp=1749533253086, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-17", "status": "DONE", "received_at": "2025-06-10T05:27:32.584415+00:00Z", "started_at": "2025-06-10T05:27:32.584417+00:00Z", "finished_at": "2025-06-10T05:27:33.086749+00:00Z", "cpu_percent_avg": 19.5, "mem_percent_avg": 36.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:33,090 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.01 | Load: 17.0s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:33,091 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:33,091 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:33,091 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:33,091 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}]
2025-06-10 05:27:33,092 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=18.4s | Mem=1024MB | Speed=1.99 | Score=9.26
2025-06-10 05:27:33,092 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-20
2025-06-10 05:27:33,267 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:33,272 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:33,363 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.26 | Load: 17.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:33,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:33,452 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:33,595 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:33,594 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:33,597 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=89, timestamp=1749533253593, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-18", "status": "DONE", "received_at": "2025-06-10T05:27:33.091235+00:00Z", "started_at": "2025-06-10T05:27:33.091237+00:00Z", "finished_at": "2025-06-10T05:27:33.593198+00:00Z", "cpu_percent_avg": 15.5, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:33,597 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:33,596 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-21
2025-06-10 05:27:33,598 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:33,598 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:33,598 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.76 | Load: 18.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:33,598 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}]
2025-06-10 05:27:33,599 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=18.9s | Mem=0MB | Speed=1.99 | Score=9.51
2025-06-10 05:27:33,599 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:34,100 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:34,100 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=90, timestamp=1749533254099, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-19", "status": "DONE", "received_at": "2025-06-10T05:27:33.597255+00:00Z", "started_at": "2025-06-10T05:27:33.597258+00:00Z", "finished_at": "2025-06-10T05:27:34.098883+00:00Z", "cpu_percent_avg": 15.0, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:34,101 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:34,100 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:34,101 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}]
2025-06-10 05:27:34,101 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-22
2025-06-10 05:27:34,102 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=19.4s | Mem=1024MB | Speed=1.99 | Score=9.76
2025-06-10 05:27:34,102 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:34,105 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:34,111 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.76 | Load: 18.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:34,632 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:34,633 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:34,633 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=91, timestamp=1749533254631, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-20", "status": "DONE", "received_at": "2025-06-10T05:27:34.103368+00:00Z", "started_at": "2025-06-10T05:27:34.103371+00:00Z", "finished_at": "2025-06-10T05:27:34.631585+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:34,633 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:34,633 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:34,634 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}]
2025-06-10 05:27:34,639 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=18.9s | Mem=0MB | Speed=1.97 | Score=9.59
2025-06-10 05:27:34,639 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=120, timestamp=1749533232490, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-23", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=121, timestamp=1749533232490, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-24", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=122, timestamp=1749533232491, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-25", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=123, timestamp=1749533232491, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-26", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=124, timestamp=1749533232492, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-27", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=125, timestamp=1749533232493, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-28", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=126, timestamp=1749533232494, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-29", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=127, timestamp=1749533232495, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-30", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=128, timestamp=1749533232495, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-31", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=129, timestamp=1749533232496, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-32", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=130, timestamp=1749533232497, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-33", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=131, timestamp=1749533232497, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-34", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=132, timestamp=1749533232498, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-35", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=133, timestamp=1749533232498, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-36", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=134, timestamp=1749533232499, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-37", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=135, timestamp=1749533232500, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-38", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=136, timestamp=1749533232501, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-39", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=137, timestamp=1749533232501, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-40", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=138, timestamp=1749533232502, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-41", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=139, timestamp=1749533232503, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-42", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=140, timestamp=1749533232503, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-43", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=141, timestamp=1749533232505, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-44", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=142, timestamp=1749533232506, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-45", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=143, timestamp=1749533232507, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-46", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=144, timestamp=1749533232507, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-47", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=145, timestamp=1749533232508, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-48", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=146, timestamp=1749533232509, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-49", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=147, timestamp=1749533232509, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-50", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=148, timestamp=1749533232510, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-51", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=149, timestamp=1749533232510, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-52", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=150, timestamp=1749533232511, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-53", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=151, timestamp=1749533232511, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-54", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=152, timestamp=1749533232512, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-55", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=153, timestamp=1749533232513, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-56", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=154, timestamp=1749533232514, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-57", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=155, timestamp=1749533232514, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-58", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=156, timestamp=1749533232515, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-59", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=157, timestamp=1749533232515, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-60", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=158, timestamp=1749533232516, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-61", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=159, timestamp=1749533232517, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-62", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=160, timestamp=1749533232517, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-63", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=161, timestamp=1749533232518, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-64", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=162, timestamp=1749533232519, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-65", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=163, timestamp=1749533232519, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-66", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=164, timestamp=1749533232520, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-67", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=165, timestamp=1749533232521, timestamp_type=0, key=None, value='{"subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-68", "job_id": "c23501c4-5d72-41a5-997c-49b713064982", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 05:27:34,654 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-23
2025-06-10 05:27:34,656 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:34,678 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:34,695 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.10 | Load: 18.9s | Mem Used: 0MB | Speed: 1.97
2025-06-10 05:27:34,728 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:34,732 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:34,733 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-24
2025-06-10 05:27:35,137 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:35,139 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=92, timestamp=1749533255136, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-21", "status": "DONE", "received_at": "2025-06-10T05:27:34.634694+00:00Z", "started_at": "2025-06-10T05:27:34.634697+00:00Z", "finished_at": "2025-06-10T05:27:35.136252+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 35.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:35,138 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:35,139 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:35,140 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.60 | Load: 19.9s | Mem Used: 1024MB | Speed: 1.97
2025-06-10 05:27:35,140 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:35,139 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:35,140 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}]
2025-06-10 05:27:35,140 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:35,141 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=20.4s | Mem=0MB | Speed=1.98 | Score=10.33
2025-06-10 05:27:35,142 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-25
2025-06-10 05:27:35,152 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:35,153 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:35,153 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.83 | Load: 20.4s | Mem Used: 0MB | Speed: 1.98
2025-06-10 05:27:35,153 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:35,153 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:35,154 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-26
2025-06-10 05:27:35,154 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:35,177 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:35,644 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.34 | Load: 21.4s | Mem Used: 1024MB | Speed: 1.98
2025-06-10 05:27:35,650 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:35,650 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:35,649 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:35,651 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=93, timestamp=1749533255648, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-22", "status": "DONE", "received_at": "2025-06-10T05:27:35.147249+00:00Z", "started_at": "2025-06-10T05:27:35.147254+00:00Z", "finished_at": "2025-06-10T05:27:35.648746+00:00Z", "cpu_percent_avg": 17.7, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:35,651 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-27
2025-06-10 05:27:35,652 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:35,652 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501492}]
2025-06-10 05:27:35,652 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:35,653 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:35,653 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.85 | Load: 22.4s | Mem Used: 2048MB | Speed: 1.98
2025-06-10 05:27:35,653 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=22.9s | Mem=0MB | Speed=1.98 | Score=11.57
2025-06-10 05:27:35,653 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:36,154 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:36,155 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=94, timestamp=1749533256153, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-23", "status": "DONE", "received_at": "2025-06-10T05:27:35.652368+00:00Z", "started_at": "2025-06-10T05:27:35.652371+00:00Z", "finished_at": "2025-06-10T05:27:36.153340+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:36,155 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:36,155 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:36,156 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-28
2025-06-10 05:27:36,157 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:36,157 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501492}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}]
2025-06-10 05:27:36,157 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=23.4s | Mem=1024MB | Speed=1.98 | Score=11.80
2025-06-10 05:27:36,157 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:36,660 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:36,660 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.80 | Load: 22.4s | Mem Used: 0MB | Speed: 1.98
2025-06-10 05:27:36,661 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:36,661 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:36,660 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=95, timestamp=1749533256658, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-24", "status": "DONE", "received_at": "2025-06-10T05:27:36.156681+00:00Z", "started_at": "2025-06-10T05:27:36.156684+00:00Z", "finished_at": "2025-06-10T05:27:36.658715+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:36,662 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-29
2025-06-10 05:27:36,662 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:36,663 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:36,663 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:36,663 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.31 | Load: 23.4s | Mem Used: 1024MB | Speed: 1.98
2025-06-10 05:27:36,663 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501492}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502031}]
2025-06-10 05:27:36,664 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:36,664 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:36,664 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=23.9s | Mem=0MB | Speed=1.99 | Score=12.05
2025-06-10 05:27:36,665 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-30
2025-06-10 05:27:37,165 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:37,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:37,166 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:37,168 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:37,168 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.55 | Load: 23.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:37,167 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=96, timestamp=1749533257164, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-25", "status": "DONE", "received_at": "2025-06-10T05:27:36.662914+00:00Z", "started_at": "2025-06-10T05:27:36.662916+00:00Z", "finished_at": "2025-06-10T05:27:37.164461+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:37,169 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:37,170 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:37,170 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:37,171 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501492}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502031}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501545}]
2025-06-10 05:27:37,171 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-31
2025-06-10 05:27:37,172 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:37,172 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=25.4s | Mem=1024MB | Speed=1.99 | Score=12.79
2025-06-10 05:27:37,173 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:37,674 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.79 | Load: 24.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:37,674 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:37,675 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:37,674 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:37,673 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:37,676 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-32
2025-06-10 05:27:37,677 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=97, timestamp=1749533257672, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-26", "status": "DONE", "received_at": "2025-06-10T05:27:37.170733+00:00Z", "started_at": "2025-06-10T05:27:37.170735+00:00Z", "finished_at": "2025-06-10T05:27:37.672244+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:37,678 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:37,678 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:37,678 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:37,679 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502332}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501961}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501625}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.528214}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501555}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501492}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502031}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501545}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501509}]
2025-06-10 05:27:37,679 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 13.29 | Load: 25.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:37,682 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:37,682 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:37,682 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:27:37,683 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=26.9s | Mem=1024MB | Speed=1.99 | Score=13.53
2025-06-10 05:27:37,683 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-33
2025-06-10 05:27:37,688 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:37,688 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:37,689 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 13.53 | Load: 25.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:37,691 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:37,692 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:37,692 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-34
2025-06-10 05:27:37,693 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:38,157 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:38,179 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:38,180 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=98, timestamp=1749533258178, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-27", "status": "DONE", "received_at": "2025-06-10T05:27:37.676960+00:00Z", "started_at": "2025-06-10T05:27:37.676963+00:00Z", "finished_at": "2025-06-10T05:27:38.178237+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:38,180 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:38,179 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 14.04 | Load: 26.9s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:38,180 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}]
2025-06-10 05:27:38,181 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=27.4s | Mem=0MB | Speed=1.99 | Score=13.78
2025-06-10 05:27:38,181 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:38,188 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:38,259 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-35
2025-06-10 05:27:38,452 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:38,683 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:38,684 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:38,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:38,685 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=99, timestamp=1749533258682, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-28", "status": "DONE", "received_at": "2025-06-10T05:27:38.181444+00:00Z", "started_at": "2025-06-10T05:27:38.181446+00:00Z", "finished_at": "2025-06-10T05:27:38.682372+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:38,685 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 14.28 | Load: 27.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:38,686 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:38,686 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:38,686 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}]
2025-06-10 05:27:38,687 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:38,687 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=27.9s | Mem=0MB | Speed=1.99 | Score=14.02
2025-06-10 05:27:38,688 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-36
2025-06-10 05:27:39,189 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:39,189 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:39,190 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=100, timestamp=1749533259188, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-29", "status": "DONE", "received_at": "2025-06-10T05:27:38.686063+00:00Z", "started_at": "2025-06-10T05:27:38.686065+00:00Z", "finished_at": "2025-06-10T05:27:39.188381+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:39,191 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:39,191 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:39,191 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 14.52 | Load: 27.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:39,191 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}]
2025-06-10 05:27:39,192 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:39,192 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=28.4s | Mem=0MB | Speed=1.99 | Score=14.27
2025-06-10 05:27:39,192 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:39,694 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:39,695 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=101, timestamp=1749533259693, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-30", "status": "DONE", "received_at": "2025-06-10T05:27:39.191455+00:00Z", "started_at": "2025-06-10T05:27:39.191457+00:00Z", "finished_at": "2025-06-10T05:27:39.693280+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:39,695 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-37
2025-06-10 05:27:39,696 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:39,696 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:39,697 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:39,697 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 14.77 | Load: 28.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:39,697 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}]
2025-06-10 05:27:39,697 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:39,698 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=28.9s | Mem=0MB | Speed=1.99 | Score=14.51
2025-06-10 05:27:39,698 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:40,201 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:40,202 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=102, timestamp=1749533260200, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-31", "status": "DONE", "received_at": "2025-06-10T05:27:39.698543+00:00Z", "started_at": "2025-06-10T05:27:39.698548+00:00Z", "finished_at": "2025-06-10T05:27:40.200307+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:40,201 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-38
2025-06-10 05:27:40,202 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:40,203 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:40,203 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}]
2025-06-10 05:27:40,203 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=29.4s | Mem=0MB | Speed=1.99 | Score=14.76
2025-06-10 05:27:40,203 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:40,705 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 15.02 | Load: 28.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:40,706 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:40,707 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=103, timestamp=1749533260704, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-32", "status": "DONE", "received_at": "2025-06-10T05:27:40.203663+00:00Z", "started_at": "2025-06-10T05:27:40.203665+00:00Z", "finished_at": "2025-06-10T05:27:40.704249+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:40,707 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:40,706 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:40,707 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500584}]
2025-06-10 05:27:40,707 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:40,708 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=28.9s | Mem=0MB | Speed=1.99 | Score=14.50
2025-06-10 05:27:40,709 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-39
2025-06-10 05:27:40,711 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:40,726 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:41,164 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 15.00 | Load: 28.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:41,210 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:41,211 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=104, timestamp=1749533261209, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-33", "status": "DONE", "received_at": "2025-06-10T05:27:40.707708+00:00Z", "started_at": "2025-06-10T05:27:40.707710+00:00Z", "finished_at": "2025-06-10T05:27:41.209337+00:00Z", "cpu_percent_avg": 16.5, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:41,210 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:41,211 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:41,211 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:41,212 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-40
2025-06-10 05:27:41,214 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:41,214 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:41,213 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500584}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501627}]
2025-06-10 05:27:41,214 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 15.25 | Load: 29.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:41,214 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=30.4s | Mem=1024MB | Speed=1.99 | Score=15.25
2025-06-10 05:27:41,214 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:41,378 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:41,714 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:41,715 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-41
2025-06-10 05:27:41,716 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:41,716 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:41,716 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=105, timestamp=1749533261713, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-34", "status": "DONE", "received_at": "2025-06-10T05:27:41.212610+00:00Z", "started_at": "2025-06-10T05:27:41.212612+00:00Z", "finished_at": "2025-06-10T05:27:41.713502+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:41,717 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 15.75 | Load: 30.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:41,717 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:41,717 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:41,717 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:41,718 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-42
2025-06-10 05:27:41,719 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500584}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501627}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50089}]
2025-06-10 05:27:41,719 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:41,720 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:41,720 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=31.9s | Mem=1024MB | Speed=1.99 | Score=16.00
2025-06-10 05:27:41,720 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 16.00 | Load: 30.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:42,219 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:42,219 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:42,220 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:42,220 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=106, timestamp=1749533262218, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-35", "status": "DONE", "received_at": "2025-06-10T05:27:41.716908+00:00Z", "started_at": "2025-06-10T05:27:41.716911+00:00Z", "finished_at": "2025-06-10T05:27:42.218328+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:42,220 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:42,221 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:42,223 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500584}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501627}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50089}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501417}]
2025-06-10 05:27:42,222 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-43
2025-06-10 05:27:42,223 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=32.4s | Mem=1024MB | Speed=1.99 | Score=16.25
2025-06-10 05:27:42,223 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:42,605 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:42,666 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 16.25 | Load: 31.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:42,675 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:42,694 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:42,724 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:42,725 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:42,726 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-44
2025-06-10 05:27:42,727 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=107, timestamp=1749533262723, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-36", "status": "DONE", "received_at": "2025-06-10T05:27:42.221740+00:00Z", "started_at": "2025-06-10T05:27:42.221742+00:00Z", "finished_at": "2025-06-10T05:27:42.723338+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 36.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:42,729 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:42,729 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:42,730 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501274}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500926}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502316}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501759}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500584}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501627}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50089}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501417}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501596}]
2025-06-10 05:27:42,730 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:42,733 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:27:42,733 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 16.75 | Load: 32.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:42,734 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=32.9s | Mem=0MB | Speed=1.99 | Score=16.50
2025-06-10 05:27:42,734 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:42,739 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:42,791 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-45
2025-06-10 05:27:42,861 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:42,874 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:42,884 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 17.00 | Load: 32.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:42,898 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:42,976 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:43,009 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-46
2025-06-10 05:27:43,049 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:43,231 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:43,232 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=108, timestamp=1749533263229, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-37", "status": "DONE", "received_at": "2025-06-10T05:27:42.728827+00:00Z", "started_at": "2025-06-10T05:27:42.728830+00:00Z", "finished_at": "2025-06-10T05:27:43.229710+00:00Z", "cpu_percent_avg": 16.9, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:43,232 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:43,233 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}]
2025-06-10 05:27:43,233 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=34.4s | Mem=0MB | Speed=1.99 | Score=17.25
2025-06-10 05:27:43,231 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:43,452 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 17.50 | Load: 33.9s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:43,735 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:43,735 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:43,737 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:43,738 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=109, timestamp=1749533263736, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-38", "status": "DONE", "received_at": "2025-06-10T05:27:43.235109+00:00Z", "started_at": "2025-06-10T05:27:43.235112+00:00Z", "finished_at": "2025-06-10T05:27:43.736279+00:00Z", "cpu_percent_avg": 32.9, "mem_percent_avg": 36.9, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:43,738 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:43,738 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:43,740 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}]
2025-06-10 05:27:43,739 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-47
2025-06-10 05:27:43,740 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:43,741 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:43,740 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=34.9s | Mem=1024MB | Speed=1.99 | Score=17.49
2025-06-10 05:27:43,741 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 17.49 | Load: 33.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:44,242 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:44,243 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:44,243 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:44,243 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=110, timestamp=1749533264241, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-39", "status": "DONE", "received_at": "2025-06-10T05:27:43.740216+00:00Z", "started_at": "2025-06-10T05:27:43.740218+00:00Z", "finished_at": "2025-06-10T05:27:44.241243+00:00Z", "cpu_percent_avg": 16.0, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:44,245 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:44,244 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-48
2025-06-10 05:27:44,245 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}]
2025-06-10 05:27:44,245 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:44,246 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:44,246 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 18.00 | Load: 34.9s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:44,246 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=35.4s | Mem=0MB | Speed=1.99 | Score=17.74
2025-06-10 05:27:44,246 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:44,746 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:44,746 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:44,748 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=111, timestamp=1749533264745, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-40", "status": "DONE", "received_at": "2025-06-10T05:27:44.244358+00:00Z", "started_at": "2025-06-10T05:27:44.244360+00:00Z", "finished_at": "2025-06-10T05:27:44.745263+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:44,747 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-49
2025-06-10 05:27:44,749 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:44,750 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}]
2025-06-10 05:27:44,749 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:44,750 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:44,750 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 18.24 | Load: 35.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:44,750 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=35.9s | Mem=0MB | Speed=2.00 | Score=17.99
2025-06-10 05:27:44,751 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:44,766 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:45,251 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:45,252 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-50
2025-06-10 05:27:45,253 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=112, timestamp=1749533265250, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-41", "status": "DONE", "received_at": "2025-06-10T05:27:44.749134+00:00Z", "started_at": "2025-06-10T05:27:44.749138+00:00Z", "finished_at": "2025-06-10T05:27:45.250502+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:45,253 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:45,254 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:45,254 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:45,255 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 18.49 | Load: 35.9s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:27:45,254 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}]
2025-06-10 05:27:45,255 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:45,255 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:45,255 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=36.4s | Mem=0MB | Speed=2.00 | Score=18.24
2025-06-10 05:27:45,256 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-51
2025-06-10 05:27:45,295 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:45,352 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:45,756 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:45,756 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 18.74 | Load: 36.4s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:27:45,757 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:45,758 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:45,757 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=113, timestamp=1749533265755, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-42", "status": "DONE", "received_at": "2025-06-10T05:27:45.254005+00:00Z", "started_at": "2025-06-10T05:27:45.254007+00:00Z", "finished_at": "2025-06-10T05:27:45.755288+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:45,759 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-52
2025-06-10 05:27:45,760 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:45,759 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:45,760 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:45,760 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501281}]
2025-06-10 05:27:45,761 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=37.9s | Mem=0MB | Speed=1.99 | Score=18.99
2025-06-10 05:27:45,761 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 19.24 | Load: 37.4s | Mem Used: 1024MB | Speed: 2.00
2025-06-10 05:27:45,818 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:46,262 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:46,261 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:46,262 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-53
2025-06-10 05:27:46,264 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:46,263 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=114, timestamp=1749533266260, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-43", "status": "DONE", "received_at": "2025-06-10T05:27:45.758836+00:00Z", "started_at": "2025-06-10T05:27:45.758838+00:00Z", "finished_at": "2025-06-10T05:27:46.260581+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:46,264 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:46,264 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:46,265 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 19.49 | Load: 37.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:46,265 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:46,265 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:46,265 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501281}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501743}]
2025-06-10 05:27:46,266 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=39.4s | Mem=1024MB | Speed=1.99 | Score=19.75
2025-06-10 05:27:46,265 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-54
2025-06-10 05:27:46,767 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:46,767 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:46,768 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=115, timestamp=1749533266766, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-44", "status": "DONE", "received_at": "2025-06-10T05:27:46.264655+00:00Z", "started_at": "2025-06-10T05:27:46.264658+00:00Z", "finished_at": "2025-06-10T05:27:46.766286+00:00Z", "cpu_percent_avg": 16.5, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:46,768 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:46,767 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:46,769 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 19.75 | Load: 38.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:46,769 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501281}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501743}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501628}]
2025-06-10 05:27:46,769 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:46,770 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:46,769 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=38.9s | Mem=0MB | Speed=1.99 | Score=19.50
2025-06-10 05:27:46,771 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-55
2025-06-10 05:27:47,232 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:47,255 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:47,255 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.00 | Load: 38.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:47,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:47,258 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:47,273 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:47,272 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:47,273 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-56
2025-06-10 05:27:47,275 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:47,275 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:47,274 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=116, timestamp=1749533267271, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-45", "status": "DONE", "received_at": "2025-06-10T05:27:46.769653+00:00Z", "started_at": "2025-06-10T05:27:46.769655+00:00Z", "finished_at": "2025-06-10T05:27:47.271239+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:47,275 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.50 | Load: 39.9s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:47,276 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:47,275 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:47,276 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:47,276 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501281}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501743}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501628}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501584}]
2025-06-10 05:27:47,278 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=41.4s | Mem=1024MB | Speed=1.99 | Score=20.75
2025-06-10 05:27:47,277 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-57
2025-06-10 05:27:47,708 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:47,760 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:47,764 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.75 | Load: 40.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:47,777 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:47,778 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:47,778 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:47,779 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:47,778 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=117, timestamp=1749533267776, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-46", "status": "DONE", "received_at": "2025-06-10T05:27:47.275075+00:00Z", "started_at": "2025-06-10T05:27:47.275077+00:00Z", "finished_at": "2025-06-10T05:27:47.776429+00:00Z", "cpu_percent_avg": 16.2, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:47,780 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-58
2025-06-10 05:27:47,781 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:47,781 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:47,782 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50088}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501167}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501025}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500903}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501364}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501281}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501743}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501628}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501584}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501352}]
2025-06-10 05:27:47,782 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:47,785 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:27:47,785 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.25 | Load: 41.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:47,785 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=41.9s | Mem=0MB | Speed=1.99 | Score=21.00
2025-06-10 05:27:47,786 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:48,284 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:48,285 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=118, timestamp=1749533268283, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-47", "status": "DONE", "received_at": "2025-06-10T05:27:47.781703+00:00Z", "started_at": "2025-06-10T05:27:47.781706+00:00Z", "finished_at": "2025-06-10T05:27:48.283757+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:48,285 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:48,286 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:48,287 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-59
2025-06-10 05:27:48,288 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}]
2025-06-10 05:27:48,289 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.4s | Mem=1024MB | Speed=1.99 | Score=21.26
2025-06-10 05:27:48,289 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:48,452 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:48,789 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:48,790 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=119, timestamp=1749533268788, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-48", "status": "DONE", "received_at": "2025-06-10T05:27:48.287036+00:00Z", "started_at": "2025-06-10T05:27:48.287039+00:00Z", "finished_at": "2025-06-10T05:27:48.788469+00:00Z", "cpu_percent_avg": 15.0, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:48,790 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.26 | Load: 41.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:48,791 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:48,790 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:48,791 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}]
2025-06-10 05:27:48,791 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=41.9s | Mem=0MB | Speed=1.99 | Score=21.00
2025-06-10 05:27:48,790 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:48,791 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:49,294 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:49,295 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=120, timestamp=1749533269293, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-49", "status": "DONE", "received_at": "2025-06-10T05:27:48.791581+00:00Z", "started_at": "2025-06-10T05:27:48.791583+00:00Z", "finished_at": "2025-06-10T05:27:49.293452+00:00Z", "cpu_percent_avg": 14.7, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:49,295 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-60
2025-06-10 05:27:49,296 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:49,296 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:49,296 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:49,296 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}]
2025-06-10 05:27:49,297 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.50 | Load: 41.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:49,297 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.4s | Mem=0MB | Speed=1.99 | Score=21.26
2025-06-10 05:27:49,297 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:49,610 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:49,798 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:49,799 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-61
2025-06-10 05:27:49,800 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=121, timestamp=1749533269797, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-50", "status": "DONE", "received_at": "2025-06-10T05:27:49.296743+00:00Z", "started_at": "2025-06-10T05:27:49.296748+00:00Z", "finished_at": "2025-06-10T05:27:49.797333+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:49,801 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:49,801 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}]
2025-06-10 05:27:49,802 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.9s | Mem=0MB | Speed=1.99 | Score=21.50
2025-06-10 05:27:49,801 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:49,853 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:50,282 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.76 | Load: 42.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:50,285 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:50,292 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:50,303 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:50,304 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-62
2025-06-10 05:27:50,304 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=122, timestamp=1749533270302, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-51", "status": "DONE", "received_at": "2025-06-10T05:27:49.801360+00:00Z", "started_at": "2025-06-10T05:27:49.801363+00:00Z", "finished_at": "2025-06-10T05:27:50.302245+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:50,305 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:50,305 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:50,305 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:50,306 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.00 | Load: 42.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:50,306 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:50,306 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}]
2025-06-10 05:27:50,306 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=43.4s | Mem=0MB | Speed=1.99 | Score=21.74
2025-06-10 05:27:50,306 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:50,370 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-63
2025-06-10 05:27:50,807 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:50,808 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:50,808 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.24 | Load: 43.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:50,807 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:50,808 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:50,809 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:50,809 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=123, timestamp=1749533270806, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-52", "status": "DONE", "received_at": "2025-06-10T05:27:50.305460+00:00Z", "started_at": "2025-06-10T05:27:50.305462+00:00Z", "finished_at": "2025-06-10T05:27:50.806261+00:00Z", "cpu_percent_avg": 15.5, "mem_percent_avg": 36.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:50,810 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-64
2025-06-10 05:27:50,811 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:50,810 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:50,811 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:50,812 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.75 | Load: 44.4s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:27:50,811 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500799}]
2025-06-10 05:27:50,812 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:50,812 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=44.9s | Mem=0MB | Speed=2.00 | Score=22.49
2025-06-10 05:27:50,812 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:51,312 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:51,314 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=124, timestamp=1749533271311, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-53", "status": "DONE", "received_at": "2025-06-10T05:27:50.809885+00:00Z", "started_at": "2025-06-10T05:27:50.809887+00:00Z", "finished_at": "2025-06-10T05:27:51.311259+00:00Z", "cpu_percent_avg": 16.8, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:51,313 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-65
2025-06-10 05:27:51,315 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:51,315 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500799}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501372}]
2025-06-10 05:27:51,316 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.4s | Mem=0MB | Speed=2.00 | Score=22.74
2025-06-10 05:27:51,315 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:51,323 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:51,371 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.99 | Load: 44.9s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:27:51,394 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:51,817 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:51,817 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:51,818 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=125, timestamp=1749533271816, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-54", "status": "DONE", "received_at": "2025-06-10T05:27:51.314951+00:00Z", "started_at": "2025-06-10T05:27:51.314954+00:00Z", "finished_at": "2025-06-10T05:27:51.816497+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:51,819 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-66
2025-06-10 05:27:51,820 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:51,821 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500799}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501372}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501543}]
2025-06-10 05:27:51,820 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:51,821 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.9s | Mem=0MB | Speed=1.99 | Score=22.99
2025-06-10 05:27:51,821 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:52,323 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.24 | Load: 45.4s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:27:52,323 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:52,323 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:52,325 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=126, timestamp=1749533272321, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-55", "status": "DONE", "received_at": "2025-06-10T05:27:51.819857+00:00Z", "started_at": "2025-06-10T05:27:51.819861+00:00Z", "finished_at": "2025-06-10T05:27:52.321761+00:00Z", "cpu_percent_avg": 14.7, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:52,324 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:52,326 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:52,326 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500799}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501372}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501543}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.5019}]
2025-06-10 05:27:52,326 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:52,327 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.4s | Mem=0MB | Speed=1.99 | Score=22.75
2025-06-10 05:27:52,327 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-67
2025-06-10 05:27:52,613 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:52,828 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:52,829 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:52,830 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=127, timestamp=1749533272827, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-56", "status": "DONE", "received_at": "2025-06-10T05:27:52.326012+00:00Z", "started_at": "2025-06-10T05:27:52.326017+00:00Z", "finished_at": "2025-06-10T05:27:52.827247+00:00Z", "cpu_percent_avg": 14.8, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:52,831 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:52,830 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:52,831 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502051}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50143}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501869}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500585}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500882}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500799}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501372}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501543}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.5019}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50123}]
2025-06-10 05:27:52,831 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.25 | Load: 45.4s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:52,834 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:52,834 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:27:52,834 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.9s | Mem=0MB | Speed=1.99 | Score=23.00
2025-06-10 05:27:52,834 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:53,334 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:53,335 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=128, timestamp=1749533273333, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-57", "status": "DONE", "received_at": "2025-06-10T05:27:52.831518+00:00Z", "started_at": "2025-06-10T05:27:52.831520+00:00Z", "finished_at": "2025-06-10T05:27:53.333549+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:53,335 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: c23501c4-5d72-41a5-997c-49b713064982-subtask-68
2025-06-10 05:27:53,336 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:27:53,336 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:53,337 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}]
2025-06-10 05:27:53,338 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.4s | Mem=0MB | Speed=1.99 | Score=23.25
2025-06-10 05:27:53,337 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:27:53,603 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.50 | Load: 45.9s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:27:53,657 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:27:53,748 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:27:53,843 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:53,935 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=129, timestamp=1749533273842, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-58", "status": "DONE", "received_at": "2025-06-10T05:27:53.339327+00:00Z", "started_at": "2025-06-10T05:27:53.339329+00:00Z", "finished_at": "2025-06-10T05:27:53.842277+00:00Z", "cpu_percent_avg": 15.6, "mem_percent_avg": 36.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:53,984 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:54,375 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}]
2025-06-10 05:27:54,384 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:54,384 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.9s | Mem=0MB | Speed=1.99 | Score=23.01
2025-06-10 05:27:54,855 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:55,852 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=130, timestamp=1749533274347, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-59", "status": "DONE", "received_at": "2025-06-10T05:27:53.846072+00:00Z", "started_at": "2025-06-10T05:27:53.846075+00:00Z", "finished_at": "2025-06-10T05:27:54.347496+00:00Z", "cpu_percent_avg": 27.4, "mem_percent_avg": 36.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:56,354 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:56,383 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}]
2025-06-10 05:27:56,390 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.4s | Mem=0MB | Speed=1.99 | Score=22.76
2025-06-10 05:27:56,395 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:56,888 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=131, timestamp=1749533274854, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-60", "status": "DONE", "received_at": "2025-06-10T05:27:54.352343+00:00Z", "started_at": "2025-06-10T05:27:54.352345+00:00Z", "finished_at": "2025-06-10T05:27:54.854262+00:00Z", "cpu_percent_avg": 20.6, "mem_percent_avg": 37.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=132, timestamp=1749533275359, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-61", "status": "DONE", "received_at": "2025-06-10T05:27:54.857410+00:00Z", "started_at": "2025-06-10T05:27:54.857412+00:00Z", "finished_at": "2025-06-10T05:27:55.359249+00:00Z", "cpu_percent_avg": 17.9, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=133, timestamp=1749533275863, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-62", "status": "DONE", "received_at": "2025-06-10T05:27:55.362116+00:00Z", "started_at": "2025-06-10T05:27:55.362119+00:00Z", "finished_at": "2025-06-10T05:27:55.863278+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=134, timestamp=1749533276381, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-63", "status": "DONE", "received_at": "2025-06-10T05:27:55.877755+00:00Z", "started_at": "2025-06-10T05:27:55.877757+00:00Z", "finished_at": "2025-06-10T05:27:56.381777+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:57,360 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:57,395 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:27:57,398 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}]
2025-06-10 05:27:57,861 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:27:57,861 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=44.9s | Mem=0MB | Speed=1.99 | Score=22.51
2025-06-10 05:27:58,072 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:58,074 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}]
2025-06-10 05:27:58,091 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=44.4s | Mem=0MB | Speed=1.99 | Score=22.26
2025-06-10 05:27:58,102 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:58,364 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501159}]
2025-06-10 05:27:58,405 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=43.9s | Mem=0MB | Speed=1.99 | Score=22.00
2025-06-10 05:27:58,432 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:58,435 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501159}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50402}]
2025-06-10 05:27:58,827 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=43.4s | Mem=0MB | Speed=1.99 | Score=21.77
2025-06-10 05:27:58,949 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:27:58,977 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=135, timestamp=1749533276886, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-64", "status": "DONE", "received_at": "2025-06-10T05:27:56.385690+00:00Z", "started_at": "2025-06-10T05:27:56.385693+00:00Z", "finished_at": "2025-06-10T05:27:56.886241+00:00Z", "cpu_percent_avg": 14.8, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=136, timestamp=1749533277391, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-65", "status": "DONE", "received_at": "2025-06-10T05:27:56.889852+00:00Z", "started_at": "2025-06-10T05:27:56.889854+00:00Z", "finished_at": "2025-06-10T05:27:57.391260+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=137, timestamp=1749533277895, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-66", "status": "DONE", "received_at": "2025-06-10T05:27:57.394237+00:00Z", "started_at": "2025-06-10T05:27:57.394239+00:00Z", "finished_at": "2025-06-10T05:27:57.895568+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=138, timestamp=1749533278400, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-67", "status": "DONE", "received_at": "2025-06-10T05:27:57.898657+00:00Z", "started_at": "2025-06-10T05:27:57.898659+00:00Z", "finished_at": "2025-06-10T05:27:58.400361+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 36.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=139, timestamp=1749533278904, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-68", "status": "DONE", "received_at": "2025-06-10T05:27:58.403620+00:00Z", "started_at": "2025-06-10T05:27:58.403622+00:00Z", "finished_at": "2025-06-10T05:27:58.904359+00:00Z", "cpu_percent_avg": 17.6, "mem_percent_avg": 36.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:27:59,407 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:27:59,867 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:27:59,868 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501159}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50402}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500548}]
2025-06-10 05:28:00,366 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.9s | Mem=0MB | Speed=1.99 | Score=21.50
2025-06-10 05:28:00,384 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:28:01,375 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501159}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50402}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500548}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501406}]
2025-06-10 05:28:01,875 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.3s | Mem=0MB | Speed=1.99 | Score=21.25
2025-06-10 05:28:02,131 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:28:02,391 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502029}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502948}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501421}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501917}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501837}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501159}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50402}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500548}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501406}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501329}]
2025-06-10 05:28:02,876 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:03,378 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:03,826 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:28:04,383 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=41.8s | Mem=0MB | Speed=1.99 | Score=20.99
2025-06-10 05:28:04,467 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:28:04,596 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}]
2025-06-10 05:28:04,641 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=41.3s | Mem=0MB | Speed=1.99 | Score=20.74
2025-06-10 05:28:04,679 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:28:04,726 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}]
2025-06-10 05:28:04,730 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=40.8s | Mem=0MB | Speed=1.99 | Score=20.48
2025-06-10 05:28:06,380 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:08,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:09,899 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:12,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:14,864 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:15,369 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:19,387 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:20,367 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:21,389 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:24,906 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:26,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:27,426 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:31,542 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:33,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:34,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:38,006 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:39,341 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:39,529 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:42,403 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 6
2025-06-10 05:28:42,827 - scheduler - INFO - subscribe_worker() - Worker 6 registered at 172.18.0.11
2025-06-10 05:28:43,529 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:28:45,017 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:45,063 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:46,065 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:49,776 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:28:50,381 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:53,586 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:54,088 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:28:55,562 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:28:56,157 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:28:59,168 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:28:59,183 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:01,494 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:03,035 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:04,460 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:05,148 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:07,123 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:08,626 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:10,221 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:11,635 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:14,143 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:14,645 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:15,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:19,543 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:20,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:20,910 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:20,954 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:25,532 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:26,534 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:27,035 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:27,534 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:31,678 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:32,435 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:33,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:33,746 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:36,936 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:39,600 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:40,401 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:40,424 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:42,305 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:45,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:46,022 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:46,200 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:48,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:51,364 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:53,500 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:53,581 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:54,824 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:29:58,093 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:29:58,678 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:29:59,164 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:29:59,844 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:03,706 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:04,429 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:04,999 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:05,365 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:09,674 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:10,015 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:10,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:11,563 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:15,395 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:15,492 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:16,803 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:17,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:20,850 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:21,881 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:25,305 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:25,435 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:26,942 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:28,335 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:30,449 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:31,095 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:33,427 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:35,486 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:36,463 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:37,116 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:40,555 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:41,245 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:42,624 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:43,110 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:43,122 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=166, timestamp=1749533443104, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-1", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 05:30:43,141 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-1
2025-06-10 05:30:43,147 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:43,156 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:43,169 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:43,487 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:30:44,088 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:44,589 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:44,808 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=167, timestamp=1749533443104, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-2", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=168, timestamp=1749533443105, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-3", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=169, timestamp=1749533443106, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-4", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=170, timestamp=1749533443107, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-5", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=171, timestamp=1749533443108, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-6", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=172, timestamp=1749533443109, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-7", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=173, timestamp=1749533443110, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-8", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=174, timestamp=1749533443111, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-9", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=175, timestamp=1749533443112, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-10", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=176, timestamp=1749533443112, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-11", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=177, timestamp=1749533443113, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-12", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=178, timestamp=1749533443114, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-13", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=179, timestamp=1749533443114, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-14", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=180, timestamp=1749533443115, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-15", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=181, timestamp=1749533443116, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-16", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=182, timestamp=1749533443117, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-17", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=183, timestamp=1749533443117, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-18", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=184, timestamp=1749533443118, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-19", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=185, timestamp=1749533443119, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-20", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=186, timestamp=1749533443119, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-21", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=187, timestamp=1749533443120, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-22", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=188, timestamp=1749533443120, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-23", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=189, timestamp=1749533443121, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-24", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=190, timestamp=1749533443122, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-25", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=191, timestamp=1749533443123, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-26", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=192, timestamp=1749533443123, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-27", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=193, timestamp=1749533443124, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-28", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=194, timestamp=1749533443125, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-29", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=195, timestamp=1749533443125, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-30", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=196, timestamp=1749533443126, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-31", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=197, timestamp=1749533443127, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-32", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=198, timestamp=1749533443127, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-33", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=199, timestamp=1749533443128, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-34", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=200, timestamp=1749533443129, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-35", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=201, timestamp=1749533443129, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-36", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=202, timestamp=1749533443130, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-37", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=203, timestamp=1749533443131, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-38", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=204, timestamp=1749533443131, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-39", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=205, timestamp=1749533443132, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-40", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=206, timestamp=1749533443132, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-41", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=207, timestamp=1749533443133, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-42", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=208, timestamp=1749533443134, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-43", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=209, timestamp=1749533443134, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-44", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=210, timestamp=1749533443135, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-45", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=211, timestamp=1749533443136, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-46", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=212, timestamp=1749533443136, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-47", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=213, timestamp=1749533443137, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-48", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=214, timestamp=1749533443137, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-49", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=215, timestamp=1749533443138, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-50", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=216, timestamp=1749533443138, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-51", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=217, timestamp=1749533443139, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-52", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=218, timestamp=1749533443140, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-53", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=219, timestamp=1749533443140, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-54", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=220, timestamp=1749533443141, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-55", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=221, timestamp=1749533443142, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-56", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=222, timestamp=1749533443143, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-57", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=223, timestamp=1749533443143, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-58", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=224, timestamp=1749533443144, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-59", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=225, timestamp=1749533443145, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-60", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=226, timestamp=1749533443146, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-61", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=227, timestamp=1749533443147, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-62", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=228, timestamp=1749533443148, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-63", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=229, timestamp=1749533443148, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-64", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=230, timestamp=1749533443149, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-65", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=231, timestamp=1749533443149, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-66", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=232, timestamp=1749533443150, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-67", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=233, timestamp=1749533443151, timestamp_type=0, key=None, value='{"subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-68", "job_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 05:30:45,537 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-2
2025-06-10 05:30:45,557 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:45,591 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:46,080 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:46,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:46,595 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:30:47,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:47,995 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:48,190 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:48,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:48,246 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-3
2025-06-10 05:30:48,407 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:48,410 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:49,606 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:50,419 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:50,435 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:30:50,449 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:50,459 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:50,609 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-4
2025-06-10 05:30:51,110 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:51,612 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:51,912 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:52,475 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:52,476 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:30:52,730 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:53,120 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:53,623 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:53,863 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-5
2025-06-10 05:30:54,241 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:54,241 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:54,242 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:30:55,574 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:55,632 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:56,636 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:30:56,992 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:57,729 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:58,105 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:30:58,105 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-6
2025-06-10 05:30:58,526 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:58,526 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:58,527 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:58,527 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:30:58,527 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:58,527 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:58,528 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-7
2025-06-10 05:30:58,529 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:58,888 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:58,945 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:58,967 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:30:58,973 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:58,979 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:58,986 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-8
2025-06-10 05:30:59,010 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:59,019 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:59,051 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:59,061 - scheduler - INFO - _ingress_loop() - Worker 6 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:30:59,065 - scheduler - INFO - _ingress_loop() - Selected Worker: 6
2025-06-10 05:30:59,095 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '6'
2025-06-10 05:30:59,099 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-9
2025-06-10 05:30:59,147 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:59,148 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:30:59,154 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:59,251 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 20.98 | Load: 40.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:30:59,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:30:59,284 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:30:59,651 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:30:59,651 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:30:59,651 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=140, timestamp=1749533459649, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-9", "status": "DONE", "received_at": "2025-06-10T05:30:59.147891+00:00Z", "started_at": "2025-06-10T05:30:59.147906+00:00Z", "finished_at": "2025-06-10T05:30:59.649713+00:00Z", "cpu_percent_avg": 15.9, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:30:59,652 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-10
2025-06-10 05:30:59,653 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:30:59,653 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:30:59,654 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:30:59,654 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}]
2025-06-10 05:30:59,654 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.49 | Load: 41.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:30:59,654 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.3s | Mem=0MB | Speed=1.99 | Score=21.24
2025-06-10 05:30:59,655 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:00,156 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:00,157 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:00,157 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=141, timestamp=1749533460156, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-10", "status": "DONE", "received_at": "2025-06-10T05:30:59.654103+00:00Z", "started_at": "2025-06-10T05:30:59.654105+00:00Z", "finished_at": "2025-06-10T05:31:00.155878+00:00Z", "cpu_percent_avg": 22.1, "mem_percent_avg": 39.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:00,158 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:00,158 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-11
2025-06-10 05:31:00,159 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}]
2025-06-10 05:31:00,159 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:00,159 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=42.8s | Mem=0MB | Speed=1.99 | Score=21.49
2025-06-10 05:31:00,160 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:00,162 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.74 | Load: 42.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:00,425 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:00,460 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:00,661 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:00,662 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:00,663 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-12
2025-06-10 05:31:00,664 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:00,664 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=142, timestamp=1749533460660, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-11", "status": "DONE", "received_at": "2025-06-10T05:31:00.159666+00:00Z", "started_at": "2025-06-10T05:31:00.159668+00:00Z", "finished_at": "2025-06-10T05:31:00.660701+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:00,665 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:00,665 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 21.99 | Load: 42.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:00,665 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:00,666 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:00,665 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:00,666 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-13
2025-06-10 05:31:00,667 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}]
2025-06-10 05:31:00,667 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:00,667 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=44.3s | Mem=1024MB | Speed=1.99 | Score=22.24
2025-06-10 05:31:00,668 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:00,753 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.24 | Load: 43.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:01,168 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:01,168 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=143, timestamp=1749533461167, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-12", "status": "DONE", "received_at": "2025-06-10T05:31:00.664953+00:00Z", "started_at": "2025-06-10T05:31:00.664955+00:00Z", "finished_at": "2025-06-10T05:31:01.167013+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 38.1, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:01,168 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:01,169 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:01,169 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:01,170 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-14
2025-06-10 05:31:01,171 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:01,171 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502058}]
2025-06-10 05:31:01,171 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=44.8s | Mem=1024MB | Speed=1.99 | Score=22.49
2025-06-10 05:31:01,171 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:01,470 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.49 | Load: 43.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:01,674 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:01,674 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:01,674 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=144, timestamp=1749533461673, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-13", "status": "DONE", "received_at": "2025-06-10T05:31:01.171119+00:00Z", "started_at": "2025-06-10T05:31:01.171122+00:00Z", "finished_at": "2025-06-10T05:31:01.672945+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 38.1, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:01,674 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:01,674 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:01,676 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502058}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}]
2025-06-10 05:31:01,675 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-15
2025-06-10 05:31:01,677 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:01,676 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.3s | Mem=1024MB | Speed=1.99 | Score=22.74
2025-06-10 05:31:01,677 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:02,180 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 22.74 | Load: 44.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:02,180 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:02,180 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:02,181 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=145, timestamp=1749533462179, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-14", "status": "DONE", "received_at": "2025-06-10T05:31:01.676933+00:00Z", "started_at": "2025-06-10T05:31:01.676934+00:00Z", "finished_at": "2025-06-10T05:31:02.179011+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 38.1, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:02,181 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:02,182 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:02,183 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-16
2025-06-10 05:31:02,183 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502058}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502077}]
2025-06-10 05:31:02,184 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:02,184 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=45.8s | Mem=1024MB | Speed=1.99 | Score=23.00
2025-06-10 05:31:02,184 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:02,477 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.00 | Load: 44.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:02,686 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:02,686 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:02,687 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=146, timestamp=1749533462684, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-15", "status": "DONE", "received_at": "2025-06-10T05:31:02.182865+00:00Z", "started_at": "2025-06-10T05:31:02.182867+00:00Z", "finished_at": "2025-06-10T05:31:02.684845+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:02,687 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:02,687 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:02,689 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502058}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502077}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501978}]
2025-06-10 05:31:02,689 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.3s | Mem=1024MB | Speed=1.99 | Score=23.25
2025-06-10 05:31:02,688 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-17
2025-06-10 05:31:02,734 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:03,191 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:03,192 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:03,192 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.25 | Load: 45.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:03,192 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=147, timestamp=1749533463190, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-16", "status": "DONE", "received_at": "2025-06-10T05:31:02.689582+00:00Z", "started_at": "2025-06-10T05:31:02.689585+00:00Z", "finished_at": "2025-06-10T05:31:03.190786+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:03,192 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:03,193 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:03,193 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:03,193 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501702}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500737}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501807}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501033}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502058}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501823}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502077}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501978}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501201}]
2025-06-10 05:31:03,194 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-18
2025-06-10 05:31:03,198 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:03,198 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:03,198 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.8s | Mem=1024MB | Speed=1.99 | Score=23.49
2025-06-10 05:31:03,198 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:03,697 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:03,698 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=148, timestamp=1749533463695, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-17", "status": "DONE", "received_at": "2025-06-10T05:31:03.194590+00:00Z", "started_at": "2025-06-10T05:31:03.194592+00:00Z", "finished_at": "2025-06-10T05:31:03.695815+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:03,698 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:03,698 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}]
2025-06-10 05:31:03,699 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.3s | Mem=0MB | Speed=1.99 | Score=23.24
2025-06-10 05:31:03,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:03,698 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.49 | Load: 45.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:04,201 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:04,202 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:04,202 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:04,202 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=149, timestamp=1749533464200, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-18", "status": "DONE", "received_at": "2025-06-10T05:31:03.699854+00:00Z", "started_at": "2025-06-10T05:31:03.699856+00:00Z", "finished_at": "2025-06-10T05:31:04.200711+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:04,203 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-19
2025-06-10 05:31:04,204 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:04,204 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:04,204 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}]
2025-06-10 05:31:04,205 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.8s | Mem=0MB | Speed=1.99 | Score=23.48
2025-06-10 05:31:04,204 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:04,707 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:04,707 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.74 | Load: 46.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:04,708 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:04,710 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=150, timestamp=1749533464707, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-19", "status": "DONE", "received_at": "2025-06-10T05:31:04.204806+00:00Z", "started_at": "2025-06-10T05:31:04.204808+00:00Z", "finished_at": "2025-06-10T05:31:04.707417+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:04,710 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:04,710 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}]
2025-06-10 05:31:04,710 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=46.3s | Mem=0MB | Speed=1.99 | Score=23.24
2025-06-10 05:31:04,709 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:04,709 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:06,013 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:06,014 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:06,022 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-20
2025-06-10 05:31:06,912 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:06,912 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:06,913 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 23.74 | Load: 46.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:06,913 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:06,913 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:06,911 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:06,914 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=151, timestamp=1749533466910, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-20", "status": "DONE", "received_at": "2025-06-10T05:31:06.408276+00:00Z", "started_at": "2025-06-10T05:31:06.408278+00:00Z", "finished_at": "2025-06-10T05:31:06.910586+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:06,914 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-21
2025-06-10 05:31:06,915 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:06,915 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:06,915 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:06,916 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}]
2025-06-10 05:31:06,916 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 24.24 | Load: 47.3s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:06,916 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:06,917 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:06,916 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=47.8s | Mem=0MB | Speed=1.99 | Score=24.00
2025-06-10 05:31:06,917 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-22
2025-06-10 05:31:06,919 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:07,417 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:07,418 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=152, timestamp=1749533467417, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-21", "status": "DONE", "received_at": "2025-06-10T05:31:06.916118+00:00Z", "started_at": "2025-06-10T05:31:06.916120+00:00Z", "finished_at": "2025-06-10T05:31:07.416891+00:00Z", "cpu_percent_avg": 15.0, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:07,418 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:07,419 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 24.50 | Load: 47.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:07,419 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:07,418 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:07,419 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:07,419 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}]
2025-06-10 05:31:07,421 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=49.3s | Mem=1024MB | Speed=1.99 | Score=24.74
2025-06-10 05:31:07,420 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-23
2025-06-10 05:31:07,448 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:07,729 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:07,921 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 24.74 | Load: 48.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:07,921 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:07,923 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:07,923 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=153, timestamp=1749533467922, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-22", "status": "DONE", "received_at": "2025-06-10T05:31:07.420901+00:00Z", "started_at": "2025-06-10T05:31:07.420903+00:00Z", "finished_at": "2025-06-10T05:31:07.921941+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:07,923 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:07,923 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:07,924 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-24
2025-06-10 05:31:07,925 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501038}]
2025-06-10 05:31:07,926 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=49.8s | Mem=1024MB | Speed=1.99 | Score=24.99
2025-06-10 05:31:07,925 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:08,426 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:08,428 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 24.99 | Load: 48.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:08,428 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:08,428 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:08,429 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=154, timestamp=1749533468427, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-23", "status": "DONE", "received_at": "2025-06-10T05:31:07.925448+00:00Z", "started_at": "2025-06-10T05:31:07.925450+00:00Z", "finished_at": "2025-06-10T05:31:08.426939+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:08,428 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:08,429 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:08,430 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-25
2025-06-10 05:31:08,431 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:08,431 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:08,431 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 25.24 | Load: 49.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:08,431 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:08,431 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501038}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}]
2025-06-10 05:31:08,432 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:08,432 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=50.3s | Mem=1024MB | Speed=1.99 | Score=25.24
2025-06-10 05:31:08,433 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-26
2025-06-10 05:31:08,933 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:08,934 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=155, timestamp=1749533468932, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-24", "status": "DONE", "received_at": "2025-06-10T05:31:08.430641+00:00Z", "started_at": "2025-06-10T05:31:08.430643+00:00Z", "finished_at": "2025-06-10T05:31:08.931888+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:08,934 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:08,935 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:08,935 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:08,936 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501038}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501245}]
2025-06-10 05:31:08,937 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=50.8s | Mem=0MB | Speed=1.99 | Score=25.48
2025-06-10 05:31:08,933 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:08,936 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 25.74 | Load: 50.3s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:09,029 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:09,438 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:09,439 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:09,440 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-27
2025-06-10 05:31:09,441 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:09,441 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:09,441 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 25.98 | Load: 50.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:09,441 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:09,442 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:09,440 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=156, timestamp=1749533469438, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-25", "status": "DONE", "received_at": "2025-06-10T05:31:08.936863+00:00Z", "started_at": "2025-06-10T05:31:08.936864+00:00Z", "finished_at": "2025-06-10T05:31:09.438193+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:09,444 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:09,444 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501038}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501245}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501329}]
2025-06-10 05:31:09,445 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=52.3s | Mem=0MB | Speed=1.99 | Score=26.23
2025-06-10 05:31:09,443 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-28
2025-06-10 05:31:09,486 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:09,798 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:09,901 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 26.49 | Load: 51.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:09,902 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:09,902 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:09,915 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:09,943 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:09,943 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-29
2025-06-10 05:31:09,944 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=157, timestamp=1749533469942, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-26", "status": "DONE", "received_at": "2025-06-10T05:31:09.441162+00:00Z", "started_at": "2025-06-10T05:31:09.441165+00:00Z", "finished_at": "2025-06-10T05:31:09.941913+00:00Z", "cpu_percent_avg": 16.6, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:09,944 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:09,945 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:09,945 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:09,945 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 26.74 | Load: 52.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:09,946 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501223}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500855}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502609}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502308}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500771}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501038}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501245}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501329}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500748}]
2025-06-10 05:31:09,946 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:09,950 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:09,949 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:09,950 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-30
2025-06-10 05:31:09,951 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=53.8s | Mem=1024MB | Speed=1.99 | Score=26.98
2025-06-10 05:31:09,952 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:09,954 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:09,974 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 26.98 | Load: 52.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:09,976 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:10,040 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:10,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:10,430 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-31
2025-06-10 05:31:10,451 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:10,453 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=158, timestamp=1749533470449, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-27", "status": "DONE", "received_at": "2025-06-10T05:31:09.947674+00:00Z", "started_at": "2025-06-10T05:31:09.947677+00:00Z", "finished_at": "2025-06-10T05:31:10.449017+00:00Z", "cpu_percent_avg": 19.9, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:10,452 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:10,453 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:10,453 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:10,454 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}]
2025-06-10 05:31:10,455 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=54.3s | Mem=0MB | Speed=1.99 | Score=27.23
2025-06-10 05:31:10,454 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 27.48 | Load: 53.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:10,459 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:10,462 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:10,465 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-32
2025-06-10 05:31:10,478 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:10,478 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:10,955 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 27.73 | Load: 54.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:10,956 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:10,956 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:10,956 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:10,958 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-33
2025-06-10 05:31:10,958 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=159, timestamp=1749533470955, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-28", "status": "DONE", "received_at": "2025-06-10T05:31:10.453926+00:00Z", "started_at": "2025-06-10T05:31:10.453928+00:00Z", "finished_at": "2025-06-10T05:31:10.954897+00:00Z", "cpu_percent_avg": 29.7, "mem_percent_avg": 39.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:10,959 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:10,959 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:10,960 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}]
2025-06-10 05:31:10,960 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=55.8s | Mem=0MB | Speed=2.00 | Score=27.98
2025-06-10 05:31:10,960 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:11,461 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 28.23 | Load: 55.3s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:11,461 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:11,462 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=160, timestamp=1749533471460, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-29", "status": "DONE", "received_at": "2025-06-10T05:31:10.959109+00:00Z", "started_at": "2025-06-10T05:31:10.959112+00:00Z", "finished_at": "2025-06-10T05:31:11.460222+00:00Z", "cpu_percent_avg": 16.5, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:11,461 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:11,462 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:11,462 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:11,463 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}]
2025-06-10 05:31:11,463 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-34
2025-06-10 05:31:11,464 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=56.3s | Mem=1024MB | Speed=2.00 | Score=28.23
2025-06-10 05:31:11,464 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:11,498 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:11,967 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:11,967 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 28.23 | Load: 55.3s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:11,967 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:11,968 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=161, timestamp=1749533471966, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-30", "status": "DONE", "received_at": "2025-06-10T05:31:11.464596+00:00Z", "started_at": "2025-06-10T05:31:11.464598+00:00Z", "finished_at": "2025-06-10T05:31:11.966126+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:11,968 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:11,969 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:11,969 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:11,970 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}]
2025-06-10 05:31:11,971 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=56.8s | Mem=1024MB | Speed=1.99 | Score=28.48
2025-06-10 05:31:11,970 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-35
2025-06-10 05:31:11,972 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:12,037 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:12,473 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:12,473 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 28.48 | Load: 55.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:12,473 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=162, timestamp=1749533472472, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-31", "status": "DONE", "received_at": "2025-06-10T05:31:11.970407+00:00Z", "started_at": "2025-06-10T05:31:11.970409+00:00Z", "finished_at": "2025-06-10T05:31:12.472182+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:12,474 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:12,474 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:12,474 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:12,474 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}]
2025-06-10 05:31:12,476 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=57.3s | Mem=1024MB | Speed=1.99 | Score=28.73
2025-06-10 05:31:12,475 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-36
2025-06-10 05:31:12,977 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:12,977 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:12,978 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:12,977 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=163, timestamp=1749533472976, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-32", "status": "DONE", "received_at": "2025-06-10T05:31:12.475430+00:00Z", "started_at": "2025-06-10T05:31:12.475432+00:00Z", "finished_at": "2025-06-10T05:31:12.975951+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:12,978 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:12,979 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500519}]
2025-06-10 05:31:12,979 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=56.8s | Mem=0MB | Speed=2.00 | Score=28.47
2025-06-10 05:31:12,978 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 28.73 | Load: 56.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:13,482 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:13,482 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:13,481 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:13,483 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-37
2025-06-10 05:31:13,483 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=164, timestamp=1749533473480, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-33", "status": "DONE", "received_at": "2025-06-10T05:31:12.979203+00:00Z", "started_at": "2025-06-10T05:31:12.979205+00:00Z", "finished_at": "2025-06-10T05:31:13.479966+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:13,484 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:13,485 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:13,484 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:13,485 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 28.98 | Load: 56.8s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:13,485 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500519}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500761}]
2025-06-10 05:31:13,486 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:13,486 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=57.3s | Mem=0MB | Speed=2.00 | Score=28.72
2025-06-10 05:31:13,486 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:13,987 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:13,989 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=165, timestamp=1749533473986, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-34", "status": "DONE", "received_at": "2025-06-10T05:31:13.485068+00:00Z", "started_at": "2025-06-10T05:31:13.485071+00:00Z", "finished_at": "2025-06-10T05:31:13.985909+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:13,988 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-38
2025-06-10 05:31:13,987 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:13,989 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:13,990 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:13,991 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:13,991 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 29.22 | Load: 57.3s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:13,991 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500519}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500761}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500838}]
2025-06-10 05:31:13,992 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=57.8s | Mem=0MB | Speed=2.00 | Score=28.97
2025-06-10 05:31:13,992 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:14,397 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:14,492 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:14,493 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-39
2025-06-10 05:31:14,494 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=166, timestamp=1749533474491, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-35", "status": "DONE", "received_at": "2025-06-10T05:31:13.990138+00:00Z", "started_at": "2025-06-10T05:31:13.990140+00:00Z", "finished_at": "2025-06-10T05:31:14.491028+00:00Z", "cpu_percent_avg": 15.6, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:14,495 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:14,496 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500519}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500761}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500838}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500888}]
2025-06-10 05:31:14,495 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:14,496 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:14,497 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 29.47 | Load: 57.8s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:14,497 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:14,497 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:14,496 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=58.3s | Mem=0MB | Speed=2.00 | Score=29.21
2025-06-10 05:31:14,498 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-40
2025-06-10 05:31:14,505 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:14,617 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:14,999 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:15,000 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:15,000 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 29.72 | Load: 58.3s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:15,000 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=167, timestamp=1749533474998, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-36", "status": "DONE", "received_at": "2025-06-10T05:31:14.496280+00:00Z", "started_at": "2025-06-10T05:31:14.496282+00:00Z", "finished_at": "2025-06-10T05:31:14.998312+00:00Z", "cpu_percent_avg": 14.2, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:15,001 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:15,001 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:15,001 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500969}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50111}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501528}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501773}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500519}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500761}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500838}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500888}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50203}]
2025-06-10 05:31:15,001 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:15,005 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:15,005 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-41
2025-06-10 05:31:15,006 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:15,005 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=59.8s | Mem=1024MB | Speed=2.00 | Score=29.98
2025-06-10 05:31:15,006 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:15,506 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:15,506 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 29.98 | Load: 58.8s | Mem Used: 0MB | Speed: 2.00
2025-06-10 05:31:15,507 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:15,507 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=168, timestamp=1749533475505, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-37", "status": "DONE", "received_at": "2025-06-10T05:31:15.003060+00:00Z", "started_at": "2025-06-10T05:31:15.003062+00:00Z", "finished_at": "2025-06-10T05:31:15.505511+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:15,507 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:15,508 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:15,508 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:15,509 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-42
2025-06-10 05:31:15,510 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}]
2025-06-10 05:31:15,510 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:15,511 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=60.3s | Mem=1024MB | Speed=1.99 | Score=30.24
2025-06-10 05:31:15,511 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:15,663 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 30.24 | Load: 59.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:15,663 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:15,664 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:15,664 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-43
2025-06-10 05:31:15,666 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:15,667 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:15,711 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 30.74 | Load: 60.3s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:16,012 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:16,014 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=169, timestamp=1749533476011, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-38", "status": "DONE", "received_at": "2025-06-10T05:31:15.509037+00:00Z", "started_at": "2025-06-10T05:31:15.509039+00:00Z", "finished_at": "2025-06-10T05:31:16.011092+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.4, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:16,013 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:16,016 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:16,015 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:16,019 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}]
2025-06-10 05:31:16,018 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-44
2025-06-10 05:31:16,023 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:16,023 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:16,051 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 31.00 | Load: 60.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:16,052 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:16,060 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:16,021 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=61.8s | Mem=1024MB | Speed=1.99 | Score=31.00
2025-06-10 05:31:16,062 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-45
2025-06-10 05:31:16,084 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:16,098 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:16,434 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 31.50 | Load: 61.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:16,465 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:16,523 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:16,524 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=170, timestamp=1749533476522, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-39", "status": "DONE", "received_at": "2025-06-10T05:31:16.019802+00:00Z", "started_at": "2025-06-10T05:31:16.019807+00:00Z", "finished_at": "2025-06-10T05:31:16.521914+00:00Z", "cpu_percent_avg": 16.9, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:16,523 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:16,524 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:16,525 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-46
2025-06-10 05:31:16,526 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}]
2025-06-10 05:31:16,526 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:16,526 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=63.3s | Mem=1024MB | Speed=1.99 | Score=31.76
2025-06-10 05:31:16,526 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:16,623 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 31.76 | Load: 62.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:17,025 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:17,025 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:17,028 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:17,030 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=171, timestamp=1749533477027, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-40", "status": "DONE", "received_at": "2025-06-10T05:31:16.525245+00:00Z", "started_at": "2025-06-10T05:31:16.525247+00:00Z", "finished_at": "2025-06-10T05:31:17.027234+00:00Z", "cpu_percent_avg": 16.2, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:17,031 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:17,029 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:17,031 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}]
2025-06-10 05:31:17,033 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=63.8s | Mem=1024MB | Speed=1.99 | Score=32.01
2025-06-10 05:31:17,032 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-47
2025-06-10 05:31:17,037 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:17,126 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:17,535 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 32.01 | Load: 62.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:17,536 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:17,536 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:17,536 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=172, timestamp=1749533477535, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-41", "status": "DONE", "received_at": "2025-06-10T05:31:17.033520+00:00Z", "started_at": "2025-06-10T05:31:17.033523+00:00Z", "finished_at": "2025-06-10T05:31:17.534893+00:00Z", "cpu_percent_avg": 16.3, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:17,537 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:17,537 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:17,538 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-48
2025-06-10 05:31:17,538 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}]
2025-06-10 05:31:17,539 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=64.3s | Mem=1024MB | Speed=1.99 | Score=32.26
2025-06-10 05:31:17,539 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:17,730 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:18,040 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 32.26 | Load: 63.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:18,040 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:18,041 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:18,040 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:18,042 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=173, timestamp=1749533478039, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-42", "status": "DONE", "received_at": "2025-06-10T05:31:17.538271+00:00Z", "started_at": "2025-06-10T05:31:17.538274+00:00Z", "finished_at": "2025-06-10T05:31:18.039284+00:00Z", "cpu_percent_avg": 14.5, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:18,042 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:18,043 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50101}]
2025-06-10 05:31:18,043 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=64.8s | Mem=0MB | Speed=1.99 | Score=32.50
2025-06-10 05:31:18,041 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-49
2025-06-10 05:31:18,545 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:18,546 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=174, timestamp=1749533478544, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-43", "status": "DONE", "received_at": "2025-06-10T05:31:18.042717+00:00Z", "started_at": "2025-06-10T05:31:18.042721+00:00Z", "finished_at": "2025-06-10T05:31:18.544223+00:00Z", "cpu_percent_avg": 15.6, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:18,546 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:18,545 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:18,546 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:18,546 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50101}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501502}]
2025-06-10 05:31:18,547 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 32.76 | Load: 64.3s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:18,547 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=64.3s | Mem=0MB | Speed=1.99 | Score=32.25
2025-06-10 05:31:18,547 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:19,050 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:19,050 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:19,051 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:19,051 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=175, timestamp=1749533479049, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-44", "status": "DONE", "received_at": "2025-06-10T05:31:18.547707+00:00Z", "started_at": "2025-06-10T05:31:18.547710+00:00Z", "finished_at": "2025-06-10T05:31:19.048988+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:19,052 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-50
2025-06-10 05:31:19,054 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:19,054 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:19,053 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:19,054 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 32.75 | Load: 64.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:19,055 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:19,055 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:19,054 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50101}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501502}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501278}]
2025-06-10 05:31:19,055 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-51
2025-06-10 05:31:19,056 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:19,056 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=65.8s | Mem=1024MB | Speed=1.99 | Score=32.99
2025-06-10 05:31:19,056 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:19,555 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:19,555 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 32.99 | Load: 64.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:19,556 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=176, timestamp=1749533479554, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-45", "status": "DONE", "received_at": "2025-06-10T05:31:19.052253+00:00Z", "started_at": "2025-06-10T05:31:19.052255+00:00Z", "finished_at": "2025-06-10T05:31:19.554005+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:19,556 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:19,556 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:19,557 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:19,557 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50101}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501502}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501278}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50175}]
2025-06-10 05:31:19,559 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=66.3s | Mem=1024MB | Speed=1.99 | Score=33.25
2025-06-10 05:31:19,558 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-52
2025-06-10 05:31:20,059 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:20,059 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:20,059 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:20,060 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=177, timestamp=1749533480058, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-46", "status": "DONE", "received_at": "2025-06-10T05:31:19.557370+00:00Z", "started_at": "2025-06-10T05:31:19.557373+00:00Z", "finished_at": "2025-06-10T05:31:20.058222+00:00Z", "cpu_percent_avg": 14.7, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:20,060 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:20,061 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 33.25 | Load: 65.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:20,061 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:20,061 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:20,062 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502449}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502053}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.502107}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501987}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50137}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50101}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501502}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501278}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50175}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500849}]
2025-06-10 05:31:20,062 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:20,066 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:20,067 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=66.8s | Mem=1024MB | Speed=1.99 | Score=33.49
2025-06-10 05:31:20,066 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-53
2025-06-10 05:31:20,468 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:20,566 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:20,567 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:20,567 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:20,568 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=178, timestamp=1749533480565, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-47", "status": "DONE", "received_at": "2025-06-10T05:31:20.063016+00:00Z", "started_at": "2025-06-10T05:31:20.063019+00:00Z", "finished_at": "2025-06-10T05:31:20.564882+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:20,569 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 33.49 | Load: 65.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:20,569 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:20,570 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}]
2025-06-10 05:31:20,570 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=66.3s | Mem=0MB | Speed=1.99 | Score=33.24
2025-06-10 05:31:20,569 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:20,810 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:20,865 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-54
2025-06-10 05:31:21,046 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:21,073 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:21,073 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 33.74 | Load: 66.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:21,073 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:21,072 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:21,075 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=179, timestamp=1749533481071, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-48", "status": "DONE", "received_at": "2025-06-10T05:31:20.569049+00:00Z", "started_at": "2025-06-10T05:31:20.569051+00:00Z", "finished_at": "2025-06-10T05:31:21.070937+00:00Z", "cpu_percent_avg": 16.2, "mem_percent_avg": 38.3, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:21,075 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:21,076 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}]
2025-06-10 05:31:21,075 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:21,076 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=66.8s | Mem=0MB | Speed=1.99 | Score=33.50
2025-06-10 05:31:21,077 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-55
2025-06-10 05:31:21,091 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:21,104 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:21,132 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 34.00 | Load: 66.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:21,145 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:21,580 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:21,580 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:21,580 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=180, timestamp=1749533481579, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-49", "status": "DONE", "received_at": "2025-06-10T05:31:21.077205+00:00Z", "started_at": "2025-06-10T05:31:21.077208+00:00Z", "finished_at": "2025-06-10T05:31:21.579081+00:00Z", "cpu_percent_avg": 33.0, "mem_percent_avg": 39.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:21,581 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-56
2025-06-10 05:31:21,582 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:21,582 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:21,583 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}]
2025-06-10 05:31:21,583 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=68.3s | Mem=0MB | Speed=1.99 | Score=34.25
2025-06-10 05:31:21,582 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:21,642 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 34.50 | Load: 67.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:21,646 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:21,647 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:21,647 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-57
2025-06-10 05:31:21,701 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:22,085 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:22,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:22,086 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:22,087 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 34.76 | Load: 68.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:22,087 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:22,086 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=181, timestamp=1749533482084, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-50", "status": "DONE", "received_at": "2025-06-10T05:31:21.582562+00:00Z", "started_at": "2025-06-10T05:31:21.582564+00:00Z", "finished_at": "2025-06-10T05:31:22.083876+00:00Z", "cpu_percent_avg": 18.4, "mem_percent_avg": 39.2, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:22,088 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:22,088 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:22,089 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}]
2025-06-10 05:31:22,089 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-58
2025-06-10 05:31:22,090 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=69.8s | Mem=1024MB | Speed=1.99 | Score=35.00
2025-06-10 05:31:22,090 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:22,480 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:22,589 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:22,590 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 35.00 | Load: 68.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:22,591 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=182, timestamp=1749533482588, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-51", "status": "DONE", "received_at": "2025-06-10T05:31:22.086885+00:00Z", "started_at": "2025-06-10T05:31:22.086887+00:00Z", "finished_at": "2025-06-10T05:31:22.588506+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:22,591 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:22,591 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:22,592 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:22,592 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}]
2025-06-10 05:31:22,593 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-59
2025-06-10 05:31:22,593 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=70.3s | Mem=1024MB | Speed=1.99 | Score=35.25
2025-06-10 05:31:22,594 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:22,629 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:23,094 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 35.25 | Load: 69.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:23,094 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:23,095 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=183, timestamp=1749533483093, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-52", "status": "DONE", "received_at": "2025-06-10T05:31:22.591643+00:00Z", "started_at": "2025-06-10T05:31:22.591645+00:00Z", "finished_at": "2025-06-10T05:31:23.092936+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:23,094 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:23,095 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:23,095 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:23,096 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-60
2025-06-10 05:31:23,096 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501291}]
2025-06-10 05:31:23,097 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:23,097 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:23,098 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 35.50 | Load: 69.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:23,097 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=70.8s | Mem=1024MB | Speed=1.99 | Score=35.50
2025-06-10 05:31:23,099 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:23,600 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:23,600 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:23,601 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-61
2025-06-10 05:31:23,602 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:23,601 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=184, timestamp=1749533483599, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-53", "status": "DONE", "received_at": "2025-06-10T05:31:23.097556+00:00Z", "started_at": "2025-06-10T05:31:23.097559+00:00Z", "finished_at": "2025-06-10T05:31:23.599023+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:23,602 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:23,602 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:23,602 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 36.00 | Load: 70.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:23,603 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:23,603 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:23,603 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501291}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501464}]
2025-06-10 05:31:23,604 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=72.3s | Mem=1024MB | Speed=1.99 | Score=36.25
2025-06-10 05:31:23,604 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-62
2025-06-10 05:31:23,653 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:24,063 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:24,104 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:24,105 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=185, timestamp=1749533484103, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-54", "status": "DONE", "received_at": "2025-06-10T05:31:23.601918+00:00Z", "started_at": "2025-06-10T05:31:23.601920+00:00Z", "finished_at": "2025-06-10T05:31:24.102886+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:24,105 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:24,104 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 36.25 | Load: 71.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:24,105 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:24,107 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:24,107 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:24,107 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501291}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501464}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500966}]
2025-06-10 05:31:24,108 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-63
2025-06-10 05:31:24,109 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=72.8s | Mem=1024MB | Speed=1.99 | Score=36.49
2025-06-10 05:31:24,109 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:24,609 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:24,609 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=186, timestamp=1749533484608, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-55", "status": "DONE", "received_at": "2025-06-10T05:31:24.106607+00:00Z", "started_at": "2025-06-10T05:31:24.106608+00:00Z", "finished_at": "2025-06-10T05:31:24.608046+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:24,609 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:24,610 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:24,610 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 36.49 | Load: 71.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:24,610 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501291}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501464}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500966}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501438}]
2025-06-10 05:31:24,610 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:24,611 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=72.3s | Mem=0MB | Speed=1.99 | Score=36.24
2025-06-10 05:31:24,611 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:25,106 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-64
2025-06-10 05:31:25,114 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:25,114 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:25,114 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:25,115 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:25,115 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 36.74 | Load: 72.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:25,115 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=187, timestamp=1749533485111, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-56", "status": "DONE", "received_at": "2025-06-10T05:31:24.611039+00:00Z", "started_at": "2025-06-10T05:31:24.611041+00:00Z", "finished_at": "2025-06-10T05:31:25.111874+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:25,116 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:25,117 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:25,116 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:25,118 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-65
2025-06-10 05:31:25,119 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:25,119 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501863}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501886}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501873}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501312}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501619}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501291}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501464}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500966}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501438}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500833}]
2025-06-10 05:31:25,120 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:25,122 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 36.98 | Load: 72.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:25,122 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:25,122 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:25,122 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:25,122 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=73.8s | Mem=1024MB | Speed=1.99 | Score=36.98
2025-06-10 05:31:25,123 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-66
2025-06-10 05:31:25,618 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:25,619 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:25,619 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:25,620 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:25,619 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=188, timestamp=1749533485617, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-57", "status": "DONE", "received_at": "2025-06-10T05:31:25.115078+00:00Z", "started_at": "2025-06-10T05:31:25.115080+00:00Z", "finished_at": "2025-06-10T05:31:25.616894+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:25,621 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 37.48 | Load: 73.8s | Mem Used: 1024MB | Speed: 1.99
2025-06-10 05:31:25,621 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:25,621 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:25,622 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}]
2025-06-10 05:31:25,622 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:25,622 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=74.3s | Mem=0MB | Speed=1.99 | Score=37.24
2025-06-10 05:31:25,623 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-67
2025-06-10 05:31:25,716 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:26,123 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:26,123 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:26,124 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 37.74 | Load: 74.3s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:26,124 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:26,123 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=189, timestamp=1749533486122, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-58", "status": "DONE", "received_at": "2025-06-10T05:31:25.620472+00:00Z", "started_at": "2025-06-10T05:31:25.620474+00:00Z", "finished_at": "2025-06-10T05:31:26.121963+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:26,124 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:26,124 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:26,126 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}]
2025-06-10 05:31:26,126 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=75.8s | Mem=1024MB | Speed=1.99 | Score=37.99
2025-06-10 05:31:26,125 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-68
2025-06-10 05:31:26,201 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:31:26,626 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:31:26,628 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 37.99 | Load: 74.8s | Mem Used: 0MB | Speed: 1.99
2025-06-10 05:31:26,628 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:31:26,628 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:31:26,628 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:27,091 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:27,129 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=190, timestamp=1749533486627, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-59", "status": "DONE", "received_at": "2025-06-10T05:31:26.125083+00:00Z", "started_at": "2025-06-10T05:31:26.125085+00:00Z", "finished_at": "2025-06-10T05:31:26.627007+00:00Z", "cpu_percent_avg": 15.7, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:27,631 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:28,133 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}]
2025-06-10 05:31:28,133 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=75.3s | Mem=0MB | Speed=1.99 | Score=37.75
2025-06-10 05:31:28,148 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:28,634 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=191, timestamp=1749533487132, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-60", "status": "DONE", "received_at": "2025-06-10T05:31:26.631387+00:00Z", "started_at": "2025-06-10T05:31:26.631389+00:00Z", "finished_at": "2025-06-10T05:31:27.131897+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=192, timestamp=1749533487635, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-61", "status": "DONE", "received_at": "2025-06-10T05:31:27.134877+00:00Z", "started_at": "2025-06-10T05:31:27.134880+00:00Z", "finished_at": "2025-06-10T05:31:27.635877+00:00Z", "cpu_percent_avg": 15.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=193, timestamp=1749533488140, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-62", "status": "DONE", "received_at": "2025-06-10T05:31:27.638571+00:00Z", "started_at": "2025-06-10T05:31:27.638573+00:00Z", "finished_at": "2025-06-10T05:31:28.140124+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:28,648 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:29,155 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}]
2025-06-10 05:31:29,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:29,208 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=74.8s | Mem=0MB | Speed=1.99 | Score=37.48
2025-06-10 05:31:29,705 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:30,140 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:30,163 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}]
2025-06-10 05:31:30,434 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=74.3s | Mem=0MB | Speed=2.00 | Score=37.23
2025-06-10 05:31:30,448 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:30,642 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:30,664 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501551}]
2025-06-10 05:31:30,832 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=73.8s | Mem=0MB | Speed=1.99 | Score=36.98
2025-06-10 05:31:31,169 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:31,475 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=194, timestamp=1749533488644, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-63", "status": "DONE", "received_at": "2025-06-10T05:31:28.142896+00:00Z", "started_at": "2025-06-10T05:31:28.142898+00:00Z", "finished_at": "2025-06-10T05:31:28.644344+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=195, timestamp=1749533489150, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-64", "status": "DONE", "received_at": "2025-06-10T05:31:28.648372+00:00Z", "started_at": "2025-06-10T05:31:28.648375+00:00Z", "finished_at": "2025-06-10T05:31:29.150268+00:00Z", "cpu_percent_avg": 14.7, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=196, timestamp=1749533489655, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-65", "status": "DONE", "received_at": "2025-06-10T05:31:29.153331+00:00Z", "started_at": "2025-06-10T05:31:29.153334+00:00Z", "finished_at": "2025-06-10T05:31:29.654902+00:00Z", "cpu_percent_avg": 15.1, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=197, timestamp=1749533490159, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-66", "status": "DONE", "received_at": "2025-06-10T05:31:29.657617+00:00Z", "started_at": "2025-06-10T05:31:29.657620+00:00Z", "finished_at": "2025-06-10T05:31:30.158960+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=198, timestamp=1749533490663, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-67", "status": "DONE", "received_at": "2025-06-10T05:31:30.162015+00:00Z", "started_at": "2025-06-10T05:31:30.162017+00:00Z", "finished_at": "2025-06-10T05:31:30.663746+00:00Z", "cpu_percent_avg": 15.2, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:31,480 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:31,629 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501551}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501446}]
2025-06-10 05:31:31,774 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=73.3s | Mem=0MB | Speed=1.99 | Score=36.73
2025-06-10 05:31:31,852 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:31,887 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501551}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501446}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501893}]
2025-06-10 05:31:31,909 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=72.8s | Mem=0MB | Speed=1.99 | Score=36.49
2025-06-10 05:31:31,923 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:31,932 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501551}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501446}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501893}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501568}]
2025-06-10 05:31:31,963 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=72.3s | Mem=0MB | Speed=1.99 | Score=36.24
2025-06-10 05:31:31,983 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:32,019 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501814}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501489}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501922}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500508}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.500997}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501551}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501446}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501893}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501568}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.50134}]
2025-06-10 05:31:32,145 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:31:32,221 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=71.8s | Mem=0MB | Speed=1.99 | Score=35.98
2025-06-10 05:31:32,229 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:32,651 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:33,655 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501729}]
2025-06-10 05:31:34,157 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=71.3s | Mem=0MB | Speed=1.99 | Score=35.74
2025-06-10 05:31:34,659 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:35,160 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:31:35,604 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:35,794 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=199, timestamp=1749533491168, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "aabc4e82-43b5-46ee-9e69-3b87b4725c62-subtask-68", "status": "DONE", "received_at": "2025-06-10T05:31:30.666612+00:00Z", "started_at": "2025-06-10T05:31:30.666613+00:00Z", "finished_at": "2025-06-10T05:31:31.167985+00:00Z", "cpu_percent_avg": 16.2, "mem_percent_avg": 38.6, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:31:36,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:36,670 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:31:37,171 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501729}, {'x': [0, 0, 0, 1, 1024, 1.5, 520, 1.0], 'y': 0.501372}]
2025-06-10 05:31:37,171 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=70.8s | Mem=0MB | Speed=1.99 | Score=35.48
2025-06-10 05:31:38,425 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:40,439 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:41,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:42,309 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:45,662 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:46,028 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:47,167 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:48,675 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:51,226 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:52,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:53,508 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:31:54,465 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:31:57,615 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:31:58,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:31:59,599 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:00,465 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:03,183 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:04,998 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:05,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:05,938 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:09,391 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:10,305 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:10,424 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:11,909 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:14,480 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:15,510 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:15,662 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:17,461 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:19,991 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:20,694 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:21,518 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:22,699 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:25,746 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:26,542 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:27,546 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:28,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:31,191 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:32,538 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:33,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:34,604 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:36,613 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:38,117 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:39,623 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:40,127 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:42,531 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:44,098 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:45,242 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:32:47,651 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:32:47,967 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:32:49,475 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 6
2025-06-10 05:32:49,949 - scheduler - INFO - release_worker_id() - Released worker ID: 2
2025-06-10 05:32:50,092 - scheduler - INFO - unsubscribe_worker() - Worker 2 unsubscribed leaving pool. 2 now free for assignment
2025-06-10 05:32:50,158 - scheduler - INFO - release_worker_id() - Released worker ID: 6
2025-06-10 05:32:50,180 - scheduler - INFO - unsubscribe_worker() - Worker 6 unsubscribed leaving pool. 6 now free for assignment
2025-06-10 05:32:50,236 - scheduler - INFO - release_worker_id() - Released worker ID: 1
2025-06-10 05:32:50,262 - scheduler - INFO - unsubscribe_worker() - Worker 1 unsubscribed leaving pool. 1 now free for assignment
2025-06-10 05:32:50,289 - scheduler - INFO - release_worker_id() - Released worker ID: 4
2025-06-10 05:32:50,318 - scheduler - INFO - unsubscribe_worker() - Worker 4 unsubscribed leaving pool. 4 now free for assignment
2025-06-10 05:32:53,813 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 05:42:06,543 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 05:42:06,544 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 05:42:06,555 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 05:42:06,581 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 05:42:06,582 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 05:42:06,585 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 05:42:11,413 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 05:42:11,705 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.12
2025-06-10 05:42:13,020 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 05:42:13,249 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.13
2025-06-10 05:42:13,288 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 05:42:13,637 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.11
2025-06-10 05:42:13,648 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 05:42:13,656 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.10
2025-06-10 05:42:13,688 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:13,698 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:13,732 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:13,736 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:13,776 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:13,793 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=200, timestamp=1749534133759, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-1", "status": "DONE", "received_at": "2025-06-10T05:42:13.252021+00:00Z", "started_at": "2025-06-10T05:42:13.252026+00:00Z", "finished_at": "2025-06-10T05:42:13.755169+00:00Z", "cpu_percent_avg": 0.0, "mem_percent_avg": 33.3, "metric_name": "accuracy", "metric_value": 0.9035087719298246}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=367, serialized_header_size=-1)]}
2025-06-10 05:42:13,796 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:13,811 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}]
2025-06-10 05:42:13,832 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:14,403 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:14,409 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=201, timestamp=1749534134380, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-5", "status": "DONE", "received_at": "2025-06-10T05:42:13.880030+00:00Z", "started_at": "2025-06-10T05:42:13.880033+00:00Z", "finished_at": "2025-06-10T05:42:14.380733+00:00Z", "cpu_percent_avg": 43.7, "mem_percent_avg": 34.3, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:42:14,410 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:14,411 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}]
2025-06-10 05:42:14,414 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:14,903 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:14,904 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=202, timestamp=1749534134901, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-9", "status": "DONE", "received_at": "2025-06-10T05:42:14.399662+00:00Z", "started_at": "2025-06-10T05:42:14.399666+00:00Z", "finished_at": "2025-06-10T05:42:14.901714+00:00Z", "cpu_percent_avg": 90.0, "mem_percent_avg": 36.4, "metric_name": "accuracy", "metric_value": 0.9473684210526315}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:42:15,003 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:15,007 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}]
2025-06-10 05:42:15,041 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:15,908 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:16,247 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=203, timestamp=1749534135408, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "fd58f6a2-2858-481a-b691-6d66eb18e569-subtask-13", "status": "DONE", "received_at": "2025-06-10T05:42:14.905972+00:00Z", "started_at": "2025-06-10T05:42:14.905974+00:00Z", "finished_at": "2025-06-10T05:42:15.408178+00:00Z", "cpu_percent_avg": 44.8, "mem_percent_avg": 37.8, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 05:42:16,248 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:16,249 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}]
2025-06-10 05:42:16,563 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:16,911 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:17,439 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=204, timestamp=1749534135915, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-3", "status": "DONE", "received_at": "2025-06-10T05:42:15.412391+00:00Z", "started_at": "2025-06-10T05:42:15.412393+00:00Z", "finished_at": "2025-06-10T05:42:15.915163+00:00Z", "cpu_percent_avg": 19.5, "mem_percent_avg": 33.0, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=205, timestamp=1749534136420, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-6", "status": "DONE", "received_at": "2025-06-10T05:42:15.919459+00:00Z", "started_at": "2025-06-10T05:42:15.919461+00:00Z", "finished_at": "2025-06-10T05:42:16.420721+00:00Z", "cpu_percent_avg": 14.6, "mem_percent_avg": 33.1, "metric_name": "accuracy", "metric_value": 0.9298245614035088}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:42:17,487 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:17,948 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}]
2025-06-10 05:42:18,450 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:18,729 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:18,738 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:18,743 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.50126}]
2025-06-10 05:42:18,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:18,924 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:19,427 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:19,897 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:20,432 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:42:20,442 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=206, timestamp=1749534136927, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "e047b2cf-a735-4e20-a639-d324b5674b61-subtask-9", "status": "DONE", "received_at": "2025-06-10T05:42:16.424655+00:00Z", "started_at": "2025-06-10T05:42:16.424657+00:00Z", "finished_at": "2025-06-10T05:42:16.926964+00:00Z", "cpu_percent_avg": 14.9, "mem_percent_avg": 33.1, "metric_name": "accuracy", "metric_value": 0.9385964912280702}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1), ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=207, timestamp=1749534137432, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "c23501c4-5d72-41a5-997c-49b713064982-subtask-12", "status": "DONE", "received_at": "2025-06-10T05:42:16.930502+00:00Z", "started_at": "2025-06-10T05:42:16.930503+00:00Z", "finished_at": "2025-06-10T05:42:17.431942+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 33.1, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=354, serialized_header_size=-1)]}
2025-06-10 05:42:20,784 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:20,789 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.50126}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.502307}]
2025-06-10 05:42:20,935 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:21,438 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:42:21,941 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.50126}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.502307}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.501439}]
2025-06-10 05:42:22,472 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 05:42:23,981 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:25,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:25,226 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:26,435 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:30,755 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:30,798 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:31,219 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:31,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:36,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:36,646 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:37,649 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:38,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:41,289 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:42,425 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:43,157 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:43,790 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:46,951 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:48,770 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:50,076 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:50,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:53,068 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:42:55,263 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:42:56,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:42:56,641 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:42:58,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:01,298 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:02,153 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:03,092 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:03,191 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:07,406 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:08,742 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:08,753 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:08,772 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:14,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:15,575 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:15,615 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:16,213 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:20,798 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:21,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:22,427 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:22,544 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:27,176 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:27,680 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:28,683 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:29,771 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:32,199 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:32,946 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:34,890 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:36,116 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:38,404 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:38,904 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:41,422 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:41,493 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:44,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:45,853 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:46,500 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:47,411 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:50,799 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:51,818 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:51,947 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:52,869 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:43:56,080 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:43:57,010 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:43:57,314 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:43:58,084 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:01,590 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:02,368 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:03,096 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:03,897 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:07,689 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:08,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:08,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:09,639 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:13,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:13,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:14,123 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:15,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:18,774 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:19,160 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:19,807 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:21,671 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:23,814 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:25,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:25,877 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:27,696 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:30,208 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:30,710 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:32,718 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:33,551 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:35,880 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:36,060 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:38,571 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:40,078 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:41,169 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:41,409 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:43,777 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:45,771 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:46,488 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:48,196 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:49,923 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:52,335 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:52,639 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:53,340 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:44:56,159 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:44:57,751 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:44:57,861 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:44:59,067 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:03,096 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:03,447 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:03,777 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:04,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:08,556 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:08,783 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:08,986 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:10,274 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:13,850 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:14,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:14,851 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:15,909 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:19,743 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:19,857 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:20,235 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:21,818 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:24,978 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:25,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:25,983 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:27,908 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:30,553 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:31,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:31,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:33,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:35,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:36,113 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:36,931 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:39,073 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:41,179 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:41,301 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:42,751 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:44,217 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:46,508 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:46,513 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:48,292 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:49,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:51,893 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:52,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:53,397 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:45:56,013 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:45:57,939 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:45:58,825 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:45:58,829 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:03,419 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:03,647 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:03,892 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:03,921 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:08,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:08,728 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:10,164 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:10,667 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:14,103 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:14,580 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:15,001 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=234, timestamp=1749534374989, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-1", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 05:46:15,041 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-1
2025-06-10 05:46:15,082 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:15,582 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:16,585 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:17,311 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:17,324 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:18,085 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:19,087 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:20,497 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:20,589 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:20,590 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:20,872 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:21,593 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:23,100 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:23,607 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=235, timestamp=1749534374989, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-2", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=236, timestamp=1749534374990, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-3", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=237, timestamp=1749534374991, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-4", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=238, timestamp=1749534374992, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-5", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=239, timestamp=1749534374993, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-6", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=240, timestamp=1749534374994, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-7", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=241, timestamp=1749534374995, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-8", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=242, timestamp=1749534374995, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-9", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=243, timestamp=1749534374996, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-10", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=244, timestamp=1749534374997, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-11", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=245, timestamp=1749534374998, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-12", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=246, timestamp=1749534374999, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-13", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=247, timestamp=1749534375000, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-14", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=248, timestamp=1749534375001, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-15", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=249, timestamp=1749534375002, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-16", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=250, timestamp=1749534375003, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-17", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=251, timestamp=1749534375003, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-18", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=252, timestamp=1749534375004, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-19", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=253, timestamp=1749534375005, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-20", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=254, timestamp=1749534375006, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-21", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=255, timestamp=1749534375007, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-22", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=256, timestamp=1749534375008, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-23", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=257, timestamp=1749534375010, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-24", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=258, timestamp=1749534375010, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-25", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=259, timestamp=1749534375011, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-26", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=260, timestamp=1749534375013, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-27", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=261, timestamp=1749534375014, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-28", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=262, timestamp=1749534375015, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-29", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=263, timestamp=1749534375016, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-30", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=264, timestamp=1749534375016, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-31", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=265, timestamp=1749534375018, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-32", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=266, timestamp=1749534375018, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-33", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=267, timestamp=1749534375019, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-34", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=268, timestamp=1749534375020, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-35", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=269, timestamp=1749534375020, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-36", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=270, timestamp=1749534375021, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-37", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=271, timestamp=1749534375022, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-38", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=272, timestamp=1749534375022, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-39", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=273, timestamp=1749534375023, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-40", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=274, timestamp=1749534375024, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-41", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=275, timestamp=1749534375025, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-42", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=276, timestamp=1749534375025, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-43", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=277, timestamp=1749534375026, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-44", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=278, timestamp=1749534375027, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-45", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=279, timestamp=1749534375027, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-46", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=280, timestamp=1749534375028, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-47", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=281, timestamp=1749534375028, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-48", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 25.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=282, timestamp=1749534375029, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-49", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=283, timestamp=1749534375030, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-50", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=284, timestamp=1749534375030, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-51", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=285, timestamp=1749534375031, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-52", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 30.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=286, timestamp=1749534375032, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-53", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=287, timestamp=1749534375033, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-54", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=288, timestamp=1749534375033, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-55", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=289, timestamp=1749534375034, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-56", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 35.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=290, timestamp=1749534375035, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-57", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=291, timestamp=1749534375035, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-58", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=292, timestamp=1749534375036, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-59", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=293, timestamp=1749534375036, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-60", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 40.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=294, timestamp=1749534375037, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-61", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=295, timestamp=1749534375038, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-62", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=296, timestamp=1749534375038, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-63", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=297, timestamp=1749534375039, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-64", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 50, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=298, timestamp=1749534375039, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-65", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=299, timestamp=1749534375040, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-66", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=300, timestamp=1749534375041, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-67", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=301, timestamp=1749534375042, timestamp_type=0, key=None, value='{"subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-68", "job_id": "64f1da57-6561-4e39-b875-bbef7d4899c4", "session_id": "40720ce7-cc48-49fb-b79b-557d23cdf5b5", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 200, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 05:46:24,136 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-2
2025-06-10 05:46:24,169 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:24,351 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:24,605 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:24,679 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:46:24,680 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:24,680 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=208, timestamp=1749534384678, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-2", "status": "DONE", "received_at": "2025-06-10T05:46:24.173465+00:00Z", "started_at": "2025-06-10T05:46:24.173485+00:00Z", "finished_at": "2025-06-10T05:46:24.676098+00:00Z", "cpu_percent_avg": 0.0, "mem_percent_avg": 33.9, "metric_name": "accuracy", "metric_value": 0.9333333333333333}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=367, serialized_header_size=-1)]}
2025-06-10 05:46:24,680 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:24,680 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:46:24,680 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:24,680 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.50126}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.502307}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.501439}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9333333333333333], 'y': 0.502613}]
2025-06-10 05:46:24,681 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:46:24,681 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=0.5s | Mem=0MB | Speed=1.20 | Score=0.42
2025-06-10 05:46:24,681 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:46:25,183 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:25,491 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-3
2025-06-10 05:46:25,647 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:25,698 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:25,772 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:25,812 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:25,823 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.25 | Load: 0.5s | Mem Used: 0MB | Speed: 1.20
2025-06-10 05:46:25,894 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:25,916 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:26,185 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:26,603 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:26,685 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:28,690 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-4
2025-06-10 05:46:28,819 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:28,834 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:28,835 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:28,844 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.25 | Load: 0.5s | Mem Used: 0MB | Speed: 1.20
2025-06-10 05:46:28,861 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:29,692 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 05:46:29,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:30,185 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:30,694 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:31,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 05:46:31,491 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-5
2025-06-10 05:46:31,696 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:31,642 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:32,064 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:46:32,065 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=209, timestamp=1749534392063, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-5", "status": "DONE", "received_at": "2025-06-10T05:46:31.556930+00:00Z", "started_at": "2025-06-10T05:46:31.556933+00:00Z", "finished_at": "2025-06-10T05:46:32.063073+00:00Z", "cpu_percent_avg": 16.3, "mem_percent_avg": 34.0, "metric_name": "accuracy", "metric_value": 0.8666666666666667}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:46:32,064 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:32,067 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:46:32,067 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,067 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9035087719298246], 'y': 0.503143}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.5007}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9473684210526315], 'y': 0.502048}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.502204}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.50277}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9298245614035088], 'y': 0.50126}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9385964912280702], 'y': 0.502307}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.501439}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.9333333333333333], 'y': 0.502613}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.8666666666666667], 'y': 0.50614}]
2025-06-10 05:46:32,068 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.25 | Load: 0.5s | Mem Used: 0MB | Speed: 1.20
2025-06-10 05:46:32,075 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,075 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,075 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:46:32,075 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:46:32,075 - scheduler - ERROR - _ingress_loop() - Failed to schedule task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 265, in _ingress_loop
    est = self.predictor.predict(task)
  File "/app/scheduler_service.py", line 69, in predict
    est = float(self._model.predict([self._features(task)])[0])
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 2124, in predict
    return self._raw_predict(X).ravel()
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 961, in _raw_predict
    raw_predictions = self._raw_predict_init(X)
  File "/usr/local/lib/python3.9/site-packages/sklearn/ensemble/_gb.py", line 947, in _raw_predict_init
    X = self.estimators_[0, 0]._validate_X_predict(X, check_input=True)
IndexError: index 0 is out of bounds for axis 0 with size 0
2025-06-10 05:46:32,080 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 05:46:32,081 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-7
2025-06-10 05:46:32,081 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=2.0s | Mem=1024MB | Speed=1.35 | Score=1.47
2025-06-10 05:46:32,081 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:32,201 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:32,585 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:46:32,586 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=210, timestamp=1749534392584, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-7", "status": "DONE", "received_at": "2025-06-10T05:46:32.082716+00:00Z", "started_at": "2025-06-10T05:46:32.082718+00:00Z", "finished_at": "2025-06-10T05:46:32.584165+00:00Z", "cpu_percent_avg": 14.3, "mem_percent_avg": 34.0, "metric_name": "accuracy", "metric_value": 0.8666666666666667}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=368, serialized_header_size=-1)]}
2025-06-10 05:46:32,585 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:32,586 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:46:32,586 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,587 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.8666666666666667], 'y': 0.501447}]
2025-06-10 05:46:32,587 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.47 | Load: 1.0s | Mem Used: 0MB | Speed: 1.35
2025-06-10 05:46:32,587 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=1.5s | Mem=0MB | Speed=1.48 | Score=1.01
2025-06-10 05:46:32,587 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,697 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:32,877 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:46:32,893 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:46:32,896 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-8
2025-06-10 05:46:32,900 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:33,210 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:33,210 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:33,400 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:46:33,400 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.68 | Load: 1.5s | Mem Used: 0MB | Speed: 1.48
2025-06-10 05:46:33,400 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=211, timestamp=1749534393399, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-8", "status": "DONE", "received_at": "2025-06-10T05:46:32.898628+00:00Z", "started_at": "2025-06-10T05:46:32.898630+00:00Z", "finished_at": "2025-06-10T05:46:33.399087+00:00Z", "cpu_percent_avg": 14.4, "mem_percent_avg": 34.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:46:33,400 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:33,401 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:33,401 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:46:33,401 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:46:33,401 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.8666666666666667], 'y': 0.501447}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.500457}]
2025-06-10 05:46:33,402 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:46:33,402 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=2.0s | Mem=0MB | Speed=1.58 | Score=1.26
2025-06-10 05:46:33,403 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-9
2025-06-10 05:46:33,905 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:33,907 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 05:46:33,907 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:33,907 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=212, timestamp=1749534393906, timestamp_type=0, key=None, value='{"worker_id": "2", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-9", "status": "DONE", "received_at": "2025-06-10T05:46:33.404724+00:00Z", "started_at": "2025-06-10T05:46:33.404725+00:00Z", "finished_at": "2025-06-10T05:46:33.906133+00:00Z", "cpu_percent_avg": 15.3, "mem_percent_avg": 34.0, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=353, serialized_header_size=-1)]}
2025-06-10 05:46:33,907 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:33,908 - scheduler - INFO - _status_loop() - Here
2025-06-10 05:46:33,908 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.89 | Load: 2.0s | Mem Used: 0MB | Speed: 1.58
2025-06-10 05:46:33,908 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 285, 0.8666666666666667], 'y': 0.501447}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.500457}, {'x': [0, 0, 0, 1, 1024, 1.5, 285, 1.0], 'y': 0.501408}]
2025-06-10 05:46:33,909 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:33,909 - scheduler - INFO - _status_loop() - Worker 2 updated: Load=2.5s | Mem=0MB | Speed=1.67 | Score=1.49
2025-06-10 05:46:33,909 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:34,410 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 05:46:34,911 - scheduler - INFO - release_worker_id() - Released worker ID: 2
2025-06-10 05:46:34,911 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 05:46:35,173 - scheduler - INFO - unsubscribe_worker() - Worker 2 unsubscribed leaving pool. 2 now free for assignment
2025-06-10 05:46:35,196 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-10
2025-06-10 05:46:35,921 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:35,922 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:36,120 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:36,138 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:36,168 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:36,169 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:36,478 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:36,525 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:36,592 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-11
2025-06-10 05:46:36,711 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:36,915 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:37,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:37,415 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:38,796 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:38,836 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:38,920 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:39,067 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:39,069 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:39,165 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-12
2025-06-10 05:46:39,173 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:39,186 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:39,187 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,195 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,197 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 05:46:39,202 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:39,215 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:39,222 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-13
2025-06-10 05:46:39,248 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:39,250 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:39,253 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,259 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,262 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,271 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:39,280 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:39,326 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-14
2025-06-10 05:46:39,342 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:39,360 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:39,369 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:39,421 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,422 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,575 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:39,612 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:39,637 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-15
2025-06-10 05:46:39,637 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:39,640 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:39,686 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:39,688 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:39,695 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 05:46:39,698 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:39,705 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:39,718 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-16
2025-06-10 05:46:39,923 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:40,426 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:40,927 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:41,429 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:41,429 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:42,433 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:42,937 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:43,322 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:43,636 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:43,689 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-17
2025-06-10 05:46:43,725 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:43,735 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:43,801 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:44,261 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:44,261 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:44,446 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:45,456 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:45,456 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:45,456 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-18
2025-06-10 05:46:45,457 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:46,007 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:46,008 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:46,454 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:46,528 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 05:46:46,537 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:46,545 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:46,556 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-19
2025-06-10 05:46:47,111 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:47,325 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:47,359 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:47,421 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:47,499 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:47,625 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:47,707 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:47,963 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-20
2025-06-10 05:46:48,190 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:48,333 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:48,861 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:48,855 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:48,862 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:49,469 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:49,969 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:50,405 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:50,470 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:50,481 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:50,491 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-21
2025-06-10 05:46:51,361 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:51,514 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:51,542 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:51,590 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:51,601 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 05:46:51,617 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:51,654 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:51,973 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-22
2025-06-10 05:46:53,071 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:53,354 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:54,075 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:46:54,387 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:55,023 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:46:55,023 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:55,329 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:55,329 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:55,329 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:55,330 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-23
2025-06-10 05:46:55,331 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:55,490 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:55,491 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:55,491 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:55,991 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:46:56,413 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:56,996 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:57,012 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:57,501 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-24
2025-06-10 05:46:58,005 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:58,010 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:58,010 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,010 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,013 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 05:46:58,013 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:46:58,013 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:46:58,014 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-25
2025-06-10 05:46:58,014 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:58,112 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:58,121 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,307 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,328 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,377 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:46:58,394 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:46:58,420 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-26
2025-06-10 05:46:58,453 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:58,486 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:46:58,551 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:46:58,612 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,619 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:46:58,862 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:46:59,108 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:46:59,510 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-27
2025-06-10 05:46:59,865 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:46:59,868 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:00,012 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:00,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:00,492 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:00,514 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:01,018 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 05:47:01,139 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:01,142 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:01,157 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-28
2025-06-10 05:47:01,161 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:01,169 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:01,174 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:01,180 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:01,522 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:01,522 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:02,027 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:02,531 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:03,454 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-29
2025-06-10 05:47:03,895 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:04,033 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:04,199 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:04,535 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:05,182 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:05,491 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:05,539 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:05,539 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-30
2025-06-10 05:47:06,541 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:07,042 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:07,545 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:08,046 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:08,836 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 05:47:08,851 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:09,043 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:09,128 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:09,189 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-31
2025-06-10 05:47:09,226 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:09,238 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:09,271 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:09,293 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:09,359 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:09,368 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:09,445 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:09,479 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:09,486 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-32
2025-06-10 05:47:09,502 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:09,528 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:09,545 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:09,548 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:09,875 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:10,229 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:10,234 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:10,249 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:10,256 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-33
2025-06-10 05:47:10,491 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:10,882 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:11,555 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:11,556 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:11,556 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:12,060 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 05:47:12,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:12,422 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:13,269 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:13,460 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:14,360 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:14,396 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-34
2025-06-10 05:47:14,567 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:14,571 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:14,571 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:14,571 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:14,571 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:14,572 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:14,572 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:14,572 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:14,573 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-35
2025-06-10 05:47:14,573 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:15,492 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:15,581 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:16,271 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:17,071 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:17,572 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:17,572 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:17,573 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:18,854 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:19,080 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:19,582 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:19,282 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-36
2025-06-10 05:47:20,083 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:20,096 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:20,117 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:20,129 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:20,214 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 05:47:20,297 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:20,322 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:20,440 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:20,887 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-37
2025-06-10 05:47:20,888 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:20,889 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:20,890 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:21,588 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:22,293 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:23,094 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:24,099 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:24,099 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:24,600 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:25,102 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:25,491 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-38
2025-06-10 05:47:26,608 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:27,109 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:28,112 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:28,655 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:28,683 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:28,834 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:28,842 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:28,872 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:29,117 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:29,117 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:30,889 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-39
2025-06-10 05:47:30,944 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:31,122 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:31,128 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:31,166 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:31,201 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 05:47:31,304 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:31,630 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:31,835 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:31,836 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:32,633 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-40
2025-06-10 05:47:33,622 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:33,635 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:34,138 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:35,146 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:35,648 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:36,129 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:36,140 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:36,155 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:36,165 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:36,174 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:37,085 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-41
2025-06-10 05:47:37,208 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:37,334 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:37,343 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:37,348 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:37,719 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:37,847 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:38,663 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:38,842 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:38,880 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:39,366 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-42
2025-06-10 05:47:39,666 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:40,166 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:41,804 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:41,167 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:41,934 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:42,048 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:42,056 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 05:47:42,088 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:42,122 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:42,168 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:42,174 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-43
2025-06-10 05:47:42,703 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:43,171 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:43,172 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:43,173 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:43,366 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:44,176 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:44,176 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:44,520 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:45,180 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:45,681 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-44
2025-06-10 05:47:45,681 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:45,682 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:46,505 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:46,516 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:46,522 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:46,524 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:46,545 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:46,559 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:46,563 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:46,574 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-45
2025-06-10 05:47:47,119 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:47,119 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:48,192 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:48,448 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:48,693 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:48,838 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 13.00 | Load: 12.0s | Mem Used: 12288MB | Speed: 1.00
2025-06-10 05:47:48,840 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:47:48,842 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:47:48,889 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:49,700 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-46
2025-06-10 05:47:49,700 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:49,701 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:51,206 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:51,709 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:51,999 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:52,843 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:52,897 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:52,934 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:47:52,965 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:47:52,993 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:53,089 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-47
2025-06-10 05:47:53,594 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:53,593 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:47:54,526 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:55,722 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:47:56,224 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:56,224 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:47:56,224 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:47:57,732 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:47:57,734 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:47:58,282 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:47:58,853 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:47:58,875 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-48
2025-06-10 05:47:59,235 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:47:59,235 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:47:59,236 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:00,241 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:00,744 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:00,897 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 14.00 | Load: 13.0s | Mem Used: 13312MB | Speed: 1.00
2025-06-10 05:48:02,249 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:03,253 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:03,293 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:03,735 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:03,754 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-49
2025-06-10 05:48:03,776 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:03,804 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:03,804 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:03,881 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:03,912 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:03,997 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:04,508 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:04,592 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:05,257 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:06,259 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:06,761 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-50
2025-06-10 05:48:08,856 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:08,869 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:09,268 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:09,268 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:09,769 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:10,898 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:11,777 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:12,605 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:12,836 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:13,308 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:13,792 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:14,323 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:14,510 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-51
2025-06-10 05:48:14,646 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:14,647 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:14,647 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:14,651 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:14,652 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 15.00 | Load: 14.0s | Mem Used: 14336MB | Speed: 1.00
2025-06-10 05:48:14,652 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:14,652 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:14,653 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:14,653 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-52
2025-06-10 05:48:14,654 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:14,680 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:14,706 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:14,790 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:14,826 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:14,868 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:14,872 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:15,291 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:15,292 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:16,293 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-53
2025-06-10 05:48:16,796 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:17,018 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:17,373 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:18,562 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:18,850 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:18,860 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:18,876 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:19,207 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:19,695 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:19,898 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-54
2025-06-10 05:48:20,316 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:21,052 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:22,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:22,325 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:22,988 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:23,012 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:23,030 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 16.00 | Load: 15.0s | Mem Used: 15360MB | Speed: 1.00
2025-06-10 05:48:23,040 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:23,057 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:23,830 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:24,644 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-55
2025-06-10 05:48:25,335 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:25,414 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:25,431 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:25,587 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:25,647 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:25,806 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:25,821 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:25,828 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:26,080 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:26,294 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-56
2025-06-10 05:48:26,337 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:26,338 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:26,839 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:27,477 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:28,134 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:28,149 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:28,540 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:28,926 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:29,093 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:29,100 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:29,120 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-57
2025-06-10 05:48:29,904 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:30,491 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:30,908 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:30,909 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:30,910 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:31,853 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 17.00 | Load: 16.0s | Mem Used: 16384MB | Speed: 1.00
2025-06-10 05:48:32,131 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:33,042 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:33,042 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:33,773 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:34,363 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:34,756 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-58
2025-06-10 05:48:35,136 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:35,136 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:35,136 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:35,137 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:35,137 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:35,140 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:35,140 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:35,140 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:35,141 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-59
2025-06-10 05:48:35,141 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:35,517 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:35,869 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:35,878 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:35,893 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:35,903 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:35,920 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:35,924 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:36,129 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-60
2025-06-10 05:48:36,130 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:36,130 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:36,184 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:36,370 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:36,412 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:36,414 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 18.00 | Load: 17.0s | Mem Used: 17408MB | Speed: 1.00
2025-06-10 05:48:36,421 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:36,435 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:36,438 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:36,440 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-61
2025-06-10 05:48:36,508 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:36,549 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:36,604 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:36,703 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:36,871 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:37,371 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:38,861 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:38,861 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:38,871 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:38,871 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-62
2025-06-10 05:48:38,872 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:38,899 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:39,139 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:40,379 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:40,379 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:40,883 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:40,912 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:41,573 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:41,574 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:42,391 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:43,583 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-63
2025-06-10 05:48:44,150 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:44,174 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:44,188 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:44,206 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:44,403 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:44,728 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 19.00 | Load: 18.0s | Mem Used: 18432MB | Speed: 1.00
2025-06-10 05:48:45,909 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:45,909 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:46,410 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:46,510 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:46,528 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-64
2025-06-10 05:48:46,532 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:46,551 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:46,569 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:47,211 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:47,321 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:47,374 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:47,393 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:47,484 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:47,913 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:48,114 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-65
2025-06-10 05:48:48,881 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:48,885 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:48,914 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:49,065 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:49,489 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:49,918 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:49,918 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:50,172 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:50,914 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:50,914 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:50,916 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-66
2025-06-10 05:48:51,093 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:51,423 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:51,924 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:52,722 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:52,927 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 20.00 | Load: 19.0s | Mem Used: 19456MB | Speed: 1.00
2025-06-10 05:48:53,429 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:48:53,644 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 05:48:54,805 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 05:48:54,932 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:55,491 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-67
2025-06-10 05:48:55,934 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:55,935 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:48:55,935 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:56,056 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:48:56,431 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:57,440 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:58,240 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:58,261 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 05:48:58,266 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 05:48:58,294 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 05:48:58,335 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-68
2025-06-10 05:48:58,471 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 05:48:58,507 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 05:48:58,518 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 22.00 | Load: 21.0s | Mem Used: 21504MB | Speed: 1.00
2025-06-10 05:48:58,533 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:58,900 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 21.00 | Load: 20.0s | Mem Used: 20480MB | Speed: 1.00
2025-06-10 05:48:58,945 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 05:48:58,946 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 05:48:59,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:01,462 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:01,963 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:05,716 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:07,476 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:08,477 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:11,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:13,768 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:14,771 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:18,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:19,787 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:19,892 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:24,300 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:24,895 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:26,811 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:29,890 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:30,928 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:33,511 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:36,138 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:36,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:38,606 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:41,204 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:41,724 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:44,146 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:47,389 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:48,081 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:50,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:53,280 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:49:54,787 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:49:55,492 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:49:59,372 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:00,352 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:01,451 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:04,980 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:06,994 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:07,690 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:10,948 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:12,851 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:13,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:16,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:18,097 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:19,029 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:22,378 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:23,422 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:25,428 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:27,933 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:29,545 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:30,996 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:33,274 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:36,137 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:36,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:38,912 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:41,466 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:41,668 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:44,611 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:46,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:47,517 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:50,789 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:51,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:52,796 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:50:56,608 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:50:57,859 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:50:58,864 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:02,380 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:03,888 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:05,393 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:07,421 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:10,896 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:11,451 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:12,954 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:15,963 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:17,976 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:18,478 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:21,609 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:23,615 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:24,452 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:28,182 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:29,965 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:30,540 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:34,057 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:35,977 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:36,170 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:39,496 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:41,190 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:41,554 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:45,130 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:46,575 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:47,159 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:50,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:52,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:53,511 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:51:56,432 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:51:58,193 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:51:59,251 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:03,713 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:03,865 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:05,218 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:08,945 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:08,978 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:11,326 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:14,709 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:14,820 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:17,540 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:19,869 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:20,254 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:22,985 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:25,283 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:26,075 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:28,767 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:30,638 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:31,140 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:34,174 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:36,157 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:36,958 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:39,854 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:41,360 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:42,869 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:45,952 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:47,701 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:48,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:52,220 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:52,840 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:52:54,212 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:52:58,235 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:52:58,806 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:00,714 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:03,942 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:04,977 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:05,951 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:10,484 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:10,681 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:12,132 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:15,713 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:16,071 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:18,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:21,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:21,573 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:23,721 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:26,523 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:26,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:28,975 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:31,775 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:31,930 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:34,108 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:36,899 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:37,153 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:39,917 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:42,487 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:42,733 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:45,567 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:47,827 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:48,585 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:50,706 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:54,287 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:53:54,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:53:56,419 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:53:59,527 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:00,532 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:02,038 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:06,055 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:07,253 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:07,753 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:12,270 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:14,274 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:14,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:18,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:21,062 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:21,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:24,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:26,271 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:27,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:30,071 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:32,654 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:33,658 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:36,153 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:38,756 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:39,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:41,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:44,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:46,307 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:48,037 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:52,172 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:54:54,553 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:54:55,380 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:54:58,250 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:00,044 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:01,720 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:03,264 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:05,312 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:08,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:09,826 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:11,554 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:14,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:15,982 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:17,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:21,335 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:21,706 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:23,326 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:26,604 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:27,653 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:29,022 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:32,419 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:33,519 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:35,312 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:38,009 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:39,021 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:40,526 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:44,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:44,489 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:46,579 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:50,071 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:50,575 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:52,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:55:55,085 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:55:56,280 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:55:58,520 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:01,574 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:02,849 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:05,281 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:07,914 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:08,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:10,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:14,306 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:14,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:16,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:20,280 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:21,283 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:21,569 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:26,352 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:26,592 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:27,055 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:31,771 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:32,099 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:32,100 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:37,735 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:38,149 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:38,279 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:43,517 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:44,100 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:45,022 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:49,179 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:50,816 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:50,977 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:56:55,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:56:56,457 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:56:56,992 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:00,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:02,472 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:02,973 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:06,037 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:08,032 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:09,108 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:11,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:13,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:15,019 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:18,283 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:19,057 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:21,099 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:23,441 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:24,450 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:26,611 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:29,621 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:30,626 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:32,433 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:36,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:36,187 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:38,074 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:42,056 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:42,090 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:43,530 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:47,289 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:48,065 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:48,754 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:53,069 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:53,636 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:57:54,313 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:57:59,067 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:57:59,944 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:00,112 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:05,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:05,392 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:06,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:10,529 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:10,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:12,152 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:16,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:16,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:17,209 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:21,619 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:21,976 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:23,135 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:27,308 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:27,438 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:29,458 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:33,392 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:34,279 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:35,397 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:39,028 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:40,537 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:41,249 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:45,361 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:47,362 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:47,565 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:51,458 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:53,464 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:54,466 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:58:58,075 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:58:59,535 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:58:59,997 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:03,878 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:05,416 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:06,531 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:09,997 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:11,248 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:13,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:15,920 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:17,053 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:19,101 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:22,109 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:22,611 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:25,620 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:27,626 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:28,629 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:32,395 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:33,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:34,926 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:38,921 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:39,608 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:41,114 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:44,189 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:46,034 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:47,051 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:50,164 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:51,076 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:53,046 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 05:59:55,781 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 05:59:56,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 05:59:58,790 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:01,390 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:02,734 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:05,436 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:07,879 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:08,661 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:11,103 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:13,877 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:14,436 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:16,750 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:19,620 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:20,970 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:22,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:25,801 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:27,328 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:28,087 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:31,142 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:32,646 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:34,379 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:37,040 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:40,001 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:41,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:42,866 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:46,037 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:46,513 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:48,117 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:51,161 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:51,812 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:53,822 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:00:56,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:00:57,394 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:00:59,107 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:02,417 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:03,322 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:04,620 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:08,207 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:09,279 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:10,149 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:14,054 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:16,020 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:16,524 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:20,119 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:21,763 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:23,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:25,734 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:26,979 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:28,487 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:31,646 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:33,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:34,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:38,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:38,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:39,797 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:43,670 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:44,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:45,603 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:48,844 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:50,154 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:50,880 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:53,895 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:01:55,401 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:01:57,004 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:01:59,612 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:02,174 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:03,018 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:05,257 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:08,501 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:09,124 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:11,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:14,374 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:16,012 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:16,380 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:20,708 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:22,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:22,250 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:26,144 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:27,372 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:28,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:33,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:33,599 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:34,683 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:38,665 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:39,702 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:41,154 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:44,287 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:46,097 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:48,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:50,307 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:53,870 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:02:54,872 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:02:55,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:02:59,898 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:00,902 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:01,902 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:06,317 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:07,321 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:08,374 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:14,033 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:15,039 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:16,269 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:20,052 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:21,517 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:22,023 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:25,916 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:27,717 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:28,721 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:32,596 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:33,743 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:34,746 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:38,098 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:40,265 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:41,774 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:43,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:46,299 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:47,307 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:49,316 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:52,326 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:52,978 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:03:55,487 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:03:57,994 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:03:59,999 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:01,502 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:04,509 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:05,577 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:07,019 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:10,030 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:11,031 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:12,033 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:16,043 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:16,685 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:18,549 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:21,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:22,639 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:24,371 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:28,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:29,038 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:29,680 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:35,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:35,232 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:36,826 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:41,216 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:41,217 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:42,846 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:47,500 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:48,001 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:49,370 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:54,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:04:54,371 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:04:55,549 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:04:59,060 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:00,229 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:00,561 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:04,232 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:05,737 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:07,243 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:10,700 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:12,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:13,711 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:16,115 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:18,245 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:20,186 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:21,690 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:24,727 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:26,233 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:27,237 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:30,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:32,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:34,017 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:37,670 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:38,548 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:40,555 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:43,648 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:44,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:47,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:49,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:50,207 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:52,747 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:05:55,527 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:05:56,530 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:05:59,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:01,554 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:04,228 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:04,562 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:08,194 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:10,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:11,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:13,708 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:16,217 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:18,725 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:20,695 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:21,688 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:24,548 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:26,276 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:26,778 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:30,553 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:32,768 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:33,771 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:36,769 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:39,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:39,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:42,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:44,328 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:47,061 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:48,942 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:50,114 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:52,753 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:54,064 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:06:56,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:06:58,705 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:06:59,723 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:02,233 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:03,724 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:05,246 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:08,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:08,802 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:10,308 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:13,907 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:15,916 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:16,315 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:20,759 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:22,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:23,768 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:26,603 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:28,071 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:29,583 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:32,283 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:33,888 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:35,903 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:38,531 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:42,007 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:42,285 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:45,072 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:47,788 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:48,291 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:51,391 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:53,794 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:07:54,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:07:57,006 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:07:59,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:01,488 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:05,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:05,346 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:07,359 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:10,375 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:11,379 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:13,388 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:16,391 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:17,862 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:20,059 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:21,528 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:23,747 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:25,251 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:27,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:29,256 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:30,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:32,636 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:35,658 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:36,179 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:38,446 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:40,995 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:41,320 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:44,055 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:46,562 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:48,495 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:50,087 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:53,104 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:08:54,109 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:08:56,484 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:08:59,608 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:00,004 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:03,119 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:05,050 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:05,612 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:09,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:11,055 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:11,312 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:15,570 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:16,501 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:17,505 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:21,350 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:22,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:23,363 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:26,950 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:28,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:29,265 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:09:35,823 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:09:35,824 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:09:35,825 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:09:36,666 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:09:36,666 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:09:36,671 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:09:36,678 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:09:36,678 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:09:36,679 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:10:32,550 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:10:39,847 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:10:39,848 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:10:39,853 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:10:39,858 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:10:39,859 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:10:39,859 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:12:46,867 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:13:29,810 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:13:29,810 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:13:29,818 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:13:30,947 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:13:30,950 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:13:30,958 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:13:35,532 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 06:13:36,436 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.10
2025-06-10 06:13:37,047 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 06:13:37,106 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.12
2025-06-10 06:13:37,155 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 06:13:37,746 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.11
2025-06-10 06:13:37,763 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 06:13:37,777 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.13
2025-06-10 06:13:37,785 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:13:37,807 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:13:37,819 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:13:37,828 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:13:43,122 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:13:43,706 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:13:43,996 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:13:44,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:13:48,732 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:13:49,098 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:13:49,368 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:13:50,237 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:13:56,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:13:57,128 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:13:57,228 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:13:57,233 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:02,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:02,668 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:03,169 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:04,327 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:08,287 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:09,668 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:10,295 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:10,797 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:14,337 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:15,515 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:16,148 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:16,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:19,429 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:14:19,470 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:19,658 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=213, timestamp=1749536059422, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-1", "status": "DONE", "received_at": "2025-06-10T06:13:37.277023+00:00Z", "started_at": "2025-06-10T06:13:37.277028+00:00Z", "finished_at": "2025-06-10T06:14:19.419177+00:00Z", "cpu_percent_avg": 16.338095238095246, "mem_percent_avg": 35.21547619047619, "metric_name": "accuracy", "metric_value": 0.7}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 06:14:20,478 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:14:20,566 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}]
2025-06-10 06:14:20,676 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:14:21,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:22,782 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:23,031 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:26,047 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:27,751 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:28,059 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:29,628 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:32,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:33,155 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:33,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:35,289 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:38,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:38,301 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:39,303 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:41,810 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:43,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:44,363 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:45,868 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:47,128 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:49,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:50,066 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:51,081 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:51,653 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:14:51,731 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=214, timestamp=1749536091651, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-10", "status": "DONE", "received_at": "2025-06-10T06:14:19.530008+00:00Z", "started_at": "2025-06-10T06:14:19.530010+00:00Z", "finished_at": "2025-06-10T06:14:51.651097+00:00Z", "cpu_percent_avg": 14.865624999999994, "mem_percent_avg": 34.443750000000016, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=382, serialized_header_size=-1)]}
2025-06-10 06:14:52,043 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:14:52,044 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}]
2025-06-10 06:14:52,514 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:14:52,783 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:14:55,341 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:14:55,973 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:14:56,474 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:14:59,023 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:01,015 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:01,555 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:03,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:04,288 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:07,129 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:07,553 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:09,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:10,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:12,331 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:14,039 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:14,931 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:16,141 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:17,627 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:21,199 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:21,200 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:21,705 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:23,218 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:23,817 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:15:23,854 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=215, timestamp=1749536123809, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-13", "status": "DONE", "received_at": "2025-06-10T06:14:51.655309+00:00Z", "started_at": "2025-06-10T06:14:51.655311+00:00Z", "finished_at": "2025-06-10T06:15:23.809386+00:00Z", "cpu_percent_avg": 14.887499999999998, "mem_percent_avg": 34.475, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=370, serialized_header_size=-1)]}
2025-06-10 06:15:24,098 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:15:24,265 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.154075}]
2025-06-10 06:15:25,106 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:15:26,522 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:27,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:27,392 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:28,622 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:31,702 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:32,705 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:33,207 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:34,213 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:37,223 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:38,184 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:39,231 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:40,747 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:42,759 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:44,261 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:45,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:46,274 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:48,407 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:50,650 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:51,418 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:51,991 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:54,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:15:56,201 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:15:57,204 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:15:57,775 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:15:59,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:01,814 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:02,318 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:03,323 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:05,648 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:07,178 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:07,822 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:08,991 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:16:09,090 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=216, timestamp=1749536168989, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-16", "status": "DONE", "received_at": "2025-06-10T06:15:23.815106+00:00Z", "started_at": "2025-06-10T06:15:23.815108+00:00Z", "finished_at": "2025-06-10T06:16:08.989292+00:00Z", "cpu_percent_avg": 14.777777777777787, "mem_percent_avg": 34.43444444444449, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 06:16:09,191 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:09,206 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:16:09,876 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.154075}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 45.174184}]
2025-06-10 06:16:10,094 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:16:11,237 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:12,226 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:13,122 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:14,735 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:16,621 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:18,626 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:19,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:20,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:21,673 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:24,422 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:25,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:26,095 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:27,100 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:30,859 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:31,280 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:32,135 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:33,032 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:36,612 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:36,878 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:38,123 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:38,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:42,160 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:43,138 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:43,138 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:16:43,754 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=217, timestamp=1749536203135, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-19", "status": "DONE", "received_at": "2025-06-10T06:16:08.994033+00:00Z", "started_at": "2025-06-10T06:16:08.994035+00:00Z", "finished_at": "2025-06-10T06:16:43.135259+00:00Z", "cpu_percent_avg": 14.819117647058828, "mem_percent_avg": 34.46029411764706, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 06:16:43,755 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:43,837 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:16:43,875 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.154075}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 45.174184}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 34.141224}]
2025-06-10 06:16:43,889 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:16:45,081 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:47,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:48,206 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:49,066 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:51,071 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:53,122 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:16:53,700 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:16:54,673 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:16:56,818 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:16:59,220 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:00,631 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:01,835 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:02,337 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:05,833 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:06,180 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:07,678 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:08,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:11,715 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:12,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:14,213 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:14,980 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:17,403 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:17:17,458 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=218, timestamp=1749536237311, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-22", "status": "DONE", "received_at": "2025-06-10T06:16:43.138658+00:00Z", "started_at": "2025-06-10T06:16:43.138659+00:00Z", "finished_at": "2025-06-10T06:17:17.310884+00:00Z", "cpu_percent_avg": 14.982352941176472, "mem_percent_avg": 34.70882352941179, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 06:17:17,936 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:17:17,936 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:18,108 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.154075}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 45.174184}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 34.141224}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 34.172225}]
2025-06-10 06:17:18,115 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:18,123 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:17:20,319 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:20,920 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:23,575 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:24,076 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:26,655 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:27,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:29,105 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:29,606 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:32,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:33,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:34,664 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:36,735 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:38,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:40,234 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:41,241 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:42,245 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:44,182 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:46,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:46,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:48,286 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:49,445 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:17:49,471 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=219, timestamp=1749536269443, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-25", "status": "DONE", "received_at": "2025-06-10T06:17:17.316080+00:00Z", "started_at": "2025-06-10T06:17:17.316082+00:00Z", "finished_at": "2025-06-10T06:17:49.442938+00:00Z", "cpu_percent_avg": 14.51875000000001, "mem_percent_avg": 34.315625, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=372, serialized_header_size=-1)]}
2025-06-10 06:17:49,524 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:17:49,578 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 788, 0.7], 'y': 42.142149}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.121087}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.154075}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 45.174184}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 34.141224}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 34.172225}, {'x': [0, 0, 0, 1, 1024, 1.5, 788, 1.0], 'y': 32.126856}]
2025-06-10 06:17:49,621 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:17:50,025 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:52,429 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:53,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:54,230 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:17:56,184 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:17:58,207 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:17:59,209 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:17:59,599 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:18:02,223 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:18:04,227 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:18:05,083 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:18:05,220 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:18:07,841 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:18:10,360 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:18:11,238 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:18:11,380 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:18:13,876 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:18:16,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:18:17,720 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:18:19,238 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:18:19,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:18:23,166 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:18:24,285 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:18:30,737 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:18:30,739 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:18:30,740 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:18:30,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:18:31,536 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:18:31,536 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:18:31,542 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:18:31,549 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:18:31,550 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:18:31,550 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:18:32,063 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:18:32,391 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=220, timestamp=1749536309664, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-28", "status": "DONE", "received_at": "2025-06-10T06:17:49.449136+00:00Z", "started_at": "2025-06-10T06:17:49.449139+00:00Z", "finished_at": "2025-06-10T06:18:29.664552+00:00Z", "cpu_percent_avg": 13.461250000000001, "mem_percent_avg": 34.44375, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=372, serialized_header_size=-1)]}
2025-06-10 06:19:00,039 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:19:00,928 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=221, timestamp=1749536339793, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "64f1da57-6561-4e39-b875-bbef7d4899c4-subtask-31", "status": "DONE", "received_at": "2025-06-10T06:18:29.673244+00:00Z", "started_at": "2025-06-10T06:18:29.673248+00:00Z", "finished_at": "2025-06-10T06:18:59.792896+00:00Z", "cpu_percent_avg": 14.805, "mem_percent_avg": 34.46833333333335, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=369, serialized_header_size=-1)]}
2025-06-10 06:19:05,944 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:19:12,833 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:19:12,833 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:19:12,838 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:19:12,844 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:19:12,845 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:19:12,845 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:19:25,269 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:19:32,372 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:19:32,372 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:19:56,650 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:19:56,650 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:23:40,899 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:23:40,900 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:26:57,998 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:26:57,999 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:27:13,218 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:27:13,219 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:27:13,224 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:27:13,231 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:27:13,231 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:27:13,232 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:27:54,615 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:28:01,755 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:28:01,755 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:28:01,761 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:28:01,767 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:28:01,767 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:28:01,768 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:28:05,448 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:28:13,251 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:28:13,251 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:28:13,256 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:28:13,262 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:28:13,262 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:28:13,263 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:29:28,472 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:30:09,787 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:30:09,790 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:30:09,800 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:30:10,675 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:30:10,676 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:30:10,678 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:30:15,621 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 06:30:16,123 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.10
2025-06-10 06:30:17,011 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 06:30:17,591 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.11
2025-06-10 06:30:17,602 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 06:30:17,604 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.13
2025-06-10 06:30:17,644 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 06:30:17,661 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.12
2025-06-10 06:30:17,664 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:17,720 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:17,878 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:18,027 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:23,763 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:24,286 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:25,769 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:26,391 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:29,290 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:31,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:32,254 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:33,306 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:35,259 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:37,104 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:38,524 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:40,622 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:41,526 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:43,662 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:45,979 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:46,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:47,436 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:50,635 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:52,040 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:52,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:30:54,673 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:30:55,853 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:30:58,040 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:30:58,089 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:00,047 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:01,033 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:03,290 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:04,445 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:06,302 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:07,032 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:08,755 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:10,061 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=3): [ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=0, timestamp=1749537070051, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-1", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 06:31:10,320 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:11,119 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-1
2025-06-10 06:31:11,269 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:11,368 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:11,828 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:12,277 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:12,314 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:12,474 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:12,704 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:12,717 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:31:12,752 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:31:12,854 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=0, timestamp=1749537070062, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-8", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=1, timestamp=1749537070065, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-12", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=2, timestamp=1749537070065, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-13", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=3, timestamp=1749537070067, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-15", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=4, timestamp=1749537070068, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-16", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=5, timestamp=1749537070069, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-17", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=6, timestamp=1749537070070, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-19", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=7, timestamp=1749537070072, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-21", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=1): [ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=0, timestamp=1749537070056, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-4", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=1, timestamp=1749537070057, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-5", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=2, timestamp=1749537070058, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-6", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=3, timestamp=1749537070074, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-24", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=2): [ConsumerRecord(topic='tasks', partition=2, leader_epoch=0, offset=0, timestamp=1749537070062, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-9", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=2, leader_epoch=0, offset=1, timestamp=1749537070071, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-20", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=3): [ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=1, timestamp=1749537070052, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-2", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=2, timestamp=1749537070054, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-3", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=3, timestamp=1749537070060, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-7", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=4, timestamp=1749537070063, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-10", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=5, timestamp=1749537070064, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-11", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=6, timestamp=1749537070066, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-14", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=7, timestamp=1749537070070, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-18", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=8, timestamp=1749537070072, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-22", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=9, timestamp=1749537070073, timestamp_type=0, key=None, value='{"subtask_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-23", "job_id": "bbaa1a27-745f-46b2-ac6b-54a43de8b1b6", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 06:31:13,334 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:13,335 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-8
2025-06-10 06:31:13,503 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:13,836 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:14,695 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:14,775 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:14,787 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:14,862 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:14,863 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:15,832 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:31:16,225 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:31:16,309 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:16,347 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-12
2025-06-10 06:31:17,024 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:17,094 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:17,140 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:17,162 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:17,177 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:17,329 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:17,337 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:31:17,519 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:31:17,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:17,929 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-13
2025-06-10 06:31:18,501 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:18,859 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:19,056 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:19,865 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:19,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:19,875 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:20,907 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:20,944 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:31:21,067 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:31:21,269 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:31:21,373 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-15
2025-06-10 06:31:22,242 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:22,242 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:23,217 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:23,493 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:23,693 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:23,698 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:23,708 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:23,731 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:23,838 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:31:23,896 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:31:24,444 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:24,463 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-16
2025-06-10 06:31:24,788 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:25,126 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:25,159 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:25,386 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:26,389 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:27,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:27,042 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:27,395 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:31:27,498 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:31:27,499 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-17
2025-06-10 06:31:27,579 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:27,589 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:27,708 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:27,767 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:27,897 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:28,047 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:28,104 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:28,241 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:31:28,900 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:31:28,900 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:29,064 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-19
2025-06-10 06:31:29,901 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:31,203 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:31,293 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:31,346 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:31,347 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:31,347 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:31,351 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:31:31,374 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:31:31,411 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:31:31,483 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-21
2025-06-10 06:31:32,411 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:33,417 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:33,731 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:34,421 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:34,421 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:34,422 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:34,509 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:34,589 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:34,706 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:34,923 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:31:35,374 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:31:35,512 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-4
2025-06-10 06:31:35,925 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:35,984 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:36,269 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:36,426 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:37,439 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:37,451 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:38,934 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:39,059 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:31:39,334 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:31:39,436 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-5
2025-06-10 06:31:40,248 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:40,440 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:40,441 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:40,442 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:40,685 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:40,941 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:41,269 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:42,106 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:42,362 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:42,442 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:42,784 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:31:42,942 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:31:43,351 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-6
2025-06-10 06:31:44,444 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:44,451 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:45,216 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:45,425 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:45,449 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:45,480 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:45,678 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:31:46,000 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:46,269 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:31:46,641 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:31:46,651 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:31:46,697 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-24
2025-06-10 06:31:47,046 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:47,048 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:47,473 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:47,953 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:48,056 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:48,340 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:48,400 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:48,401 - scheduler - INFO - release_worker_id() - Released worker ID: 1
2025-06-10 06:31:48,836 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:31:48,883 - scheduler - INFO - unsubscribe_worker() - Worker 1 unsubscribed leaving pool. 1 now free for assignment
2025-06-10 06:31:49,065 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:31:50,465 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-9
2025-06-10 06:31:50,967 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:51,269 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:51,971 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:52,456 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:53,179 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,180 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:31:53,180 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,285 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,287 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:31:53,308 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:31:53,313 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-20
2025-06-10 06:31:53,337 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:53,340 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:53,368 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:53,381 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,394 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,417 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:31:53,420 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:31:53,443 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-2
2025-06-10 06:31:53,453 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:53,466 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:53,474 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:53,483 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:53,486 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:31:53,490 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:31:54,010 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:31:54,274 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-3
2025-06-10 06:31:54,315 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:54,482 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:54,826 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:54,909 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:54,919 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:55,480 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:31:55,865 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:31:56,226 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-7
2025-06-10 06:31:56,227 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:56,228 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:56,315 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:31:56,321 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:56,403 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:56,481 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:31:56,481 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:31:56,559 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:31:56,561 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-10
2025-06-10 06:31:56,902 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:56,992 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:31:57,038 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:31:57,039 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:31:57,166 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:31:57,499 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:31:57,678 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:31:57,994 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-11
2025-06-10 06:31:58,495 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:31:58,496 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:31:58,496 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:32:00,001 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:00,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:00,002 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:01,299 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:01,330 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:32:01,358 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:32:01,377 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-14
2025-06-10 06:32:01,384 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:32:01,520 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:32:01,528 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:01,539 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:01,896 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:02,244 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:02,325 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:32:02,332 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:32:02,352 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-18
2025-06-10 06:32:02,407 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:32:02,508 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:32:02,530 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:03,011 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:04,012 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:32:04,226 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:32:04,237 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:32:04,294 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-22
2025-06-10 06:32:04,419 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:32:05,018 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:32:05,164 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:05,164 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:05,177 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:05,182 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:05,586 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:06,021 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:32:06,522 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:32:07,028 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: bbaa1a27-745f-46b2-ac6b-54a43de8b1b6-subtask-23
2025-06-10 06:32:07,035 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:32:07,037 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:32:07,044 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:32:07,058 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:07,064 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:32:07,088 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:32:07,191 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:32:07,232 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:10,565 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:11,594 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:12,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:15,911 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:17,598 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:18,110 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:21,542 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:25,425 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:25,925 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:27,120 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:31,268 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:31,446 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:32,962 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:36,657 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:36,658 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:40,103 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:43,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:43,924 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:45,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:48,486 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:49,489 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:50,842 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:32:54,510 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:32:55,011 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:32:56,015 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:00,533 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:01,537 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:02,034 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:06,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:07,568 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:08,072 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:12,653 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:13,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:14,089 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:18,087 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:19,090 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 5
2025-06-10 06:33:19,129 - scheduler - INFO - subscribe_worker() - Worker 5 registered at 172.18.0.10
2025-06-10 06:33:19,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:20,135 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:21,137 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:23,184 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:24,649 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:25,652 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:26,676 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:29,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:30,943 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:31,443 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:32,794 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:32,815 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=3): [ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=10, timestamp=1749537212800, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-1", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 06:33:32,824 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-1
2025-06-10 06:33:33,448 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:33,816 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:33,950 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:33,990 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:34,436 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:34,437 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:34,590 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:33:34,650 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:34,658 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:34,705 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=8, timestamp=1749537212803, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-4", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=9, timestamp=1749537212808, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-11", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=10, timestamp=1749537212811, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-14", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=11, timestamp=1749537212811, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-15", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=12, timestamp=1749537212819, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-24", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=1): [ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=4, timestamp=1749537212801, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-2", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=5, timestamp=1749537212805, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-7", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=6, timestamp=1749537212807, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-10", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=7, timestamp=1749537212809, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-12", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=8, timestamp=1749537212813, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-18", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=9, timestamp=1749537212814, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-19", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=10, timestamp=1749537212815, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-20", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=11, timestamp=1749537212816, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-21", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=12, timestamp=1749537212817, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-22", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=1, leader_epoch=0, offset=13, timestamp=1749537212818, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-23", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=2): [ConsumerRecord(topic='tasks', partition=2, leader_epoch=0, offset=2, timestamp=1749537212806, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-8", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=2, leader_epoch=0, offset=3, timestamp=1749537212810, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-13", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 2.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=2, leader_epoch=0, offset=4, timestamp=1749537212812, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-17", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 5.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)], TopicPartition(topic='tasks', partition=3): [ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=11, timestamp=1749537212802, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-3", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=12, timestamp=1749537212804, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-5", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=13, timestamp=1749537212804, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-6", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=14, timestamp=1749537212807, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-9", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=3, leader_epoch=0, offset=15, timestamp=1749537212812, timestamp_type=0, key=None, value='{"subtask_id": "463b4734-1730-42c2-a0e3-dc52df721370-subtask-16", "job_id": "463b4734-1730-42c2-a0e3-dc52df721370", "session_id": "a1b766fb-9039-47a1-a848-70f78d418d9a", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 3.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 06:33:34,733 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-4
2025-06-10 06:33:34,749 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:34,954 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:35,489 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:35,575 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:35,578 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:35,660 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:33:35,791 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:35,881 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:36,228 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-11
2025-06-10 06:33:36,460 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:36,887 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:37,049 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:37,085 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:37,462 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:37,893 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:38,466 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:33:38,892 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:38,898 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:39,171 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:39,689 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:40,011 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:40,013 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-14
2025-06-10 06:33:40,385 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:40,978 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:41,269 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:42,485 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:42,792 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:43,489 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:43,990 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:33:44,492 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:44,690 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:45,180 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:45,363 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:45,367 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-15
2025-06-10 06:33:45,538 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:45,539 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:45,539 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:45,584 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:45,620 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:45,625 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:45,693 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:33:45,766 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:45,998 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:46,118 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-24
2025-06-10 06:33:46,500 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:46,500 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:46,645 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:46,650 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:46,658 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:46,674 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:33:46,694 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:46,696 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:46,706 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-2
2025-06-10 06:33:46,731 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:46,955 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:46,956 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:47,065 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:47,085 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:47,928 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:47,942 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:33:47,972 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:33:48,091 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-7
2025-06-10 06:33:48,091 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:49,007 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:49,508 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:50,008 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:50,859 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:51,044 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:51,512 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:51,512 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:33:52,514 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:53,516 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:54,018 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:54,492 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:54,519 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:33:54,916 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-10
2025-06-10 06:33:54,936 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:54,942 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:55,023 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:55,061 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:55,523 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:55,559 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,373 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:33:56,387 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:33:56,391 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-12
2025-06-10 06:33:56,426 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:56,438 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:56,494 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,498 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,527 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,549 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:33:56,610 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:33:56,657 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-18
2025-06-10 06:33:56,702 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:56,718 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:56,792 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,857 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:56,925 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:33:57,023 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:33:57,065 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-19
2025-06-10 06:33:57,086 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:57,201 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:57,294 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:33:57,352 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:33:57,529 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:33:57,948 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:33:57,952 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:33:58,123 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-20
2025-06-10 06:33:58,438 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:58,440 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:58,489 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:33:58,521 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:33:58,531 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:33:58,532 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:33:58,568 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:33:58,589 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:33:59,033 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:33:59,175 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-21
2025-06-10 06:33:59,535 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:33:59,552 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:33:59,596 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:33:59,661 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:33:59,783 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:33:59,938 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:00,035 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:00,060 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:00,254 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:00,761 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:34:01,391 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:34:01,542 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:01,543 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-22
2025-06-10 06:34:01,543 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:02,548 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:03,551 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:04,052 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:34:04,098 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:04,169 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:04,199 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:04,310 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:34:04,324 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:34:04,555 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:04,690 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-23
2025-06-10 06:34:04,691 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:04,690 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:05,556 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:06,114 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:06,114 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:06,562 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:07,059 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,096 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,105 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:34:07,192 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:34:07,209 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:34:07,213 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:07,239 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-8
2025-06-10 06:34:07,348 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:07,362 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:07,381 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,397 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,449 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,507 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,524 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:34:07,527 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:34:07,565 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:07,568 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-13
2025-06-10 06:34:07,697 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:07,717 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:07,739 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:07,984 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:07,984 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:08,054 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:08,067 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:34:08,109 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:34:08,114 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:08,119 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-17
2025-06-10 06:34:08,121 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:08,443 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:08,446 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:09,123 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:09,571 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:34:09,571 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:10,072 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:10,573 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:34:10,573 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:34:11,160 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:11,262 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:12,324 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:12,624 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-3
2025-06-10 06:34:13,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:13,734 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:14,690 - scheduler - INFO - release_worker_id() - Released worker ID: 5
2025-06-10 06:34:15,550 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:16,088 - scheduler - INFO - unsubscribe_worker() - Worker 5 unsubscribed leaving pool. 5 now free for assignment
2025-06-10 06:34:16,267 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:17,593 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:17,593 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:18,236 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:18,259 - scheduler - INFO - _ingress_loop() - Worker 5 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:34:18,289 - scheduler - INFO - _ingress_loop() - Selected Worker: 5
2025-06-10 06:34:18,291 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '5'
2025-06-10 06:34:18,389 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:18,421 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-5
2025-06-10 06:34:19,095 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:19,116 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:19,116 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:19,229 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,117 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,118 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,119 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:20,188 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:34:20,293 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:34:20,295 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:20,305 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-6
2025-06-10 06:34:20,311 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:20,324 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:20,329 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:20,344 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,347 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,353 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:34:20,360 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:34:20,374 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:20,397 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-9
2025-06-10 06:34:20,417 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:20,420 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:20,443 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:20,467 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:20,478 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 11.00 | Load: 10.0s | Mem Used: 10240MB | Speed: 1.00
2025-06-10 06:34:20,484 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:34:20,489 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:34:20,496 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:34:20,796 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 463b4734-1730-42c2-a0e3-dc52df721370-subtask-16
2025-06-10 06:34:21,100 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:34:21,128 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:34:21,602 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:22,610 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:23,126 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 12.00 | Load: 11.0s | Mem Used: 11264MB | Speed: 1.00
2025-06-10 06:34:23,140 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:34:23,144 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:34:23,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:25,731 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:27,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:29,212 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:31,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:32,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:34,708 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:37,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:38,091 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:41,657 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:43,358 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:43,666 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:47,583 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:49,625 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:49,728 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:53,744 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:34:54,750 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:34:55,854 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:34:58,903 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:00,216 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:02,059 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:05,284 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:06,268 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:08,329 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:11,312 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:11,594 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:15,329 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:16,834 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:19,623 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:21,350 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:22,708 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:26,143 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:28,236 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:28,652 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:31,665 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:33,671 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:34,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:37,631 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:39,928 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:40,183 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:43,370 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:45,456 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:45,962 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:48,492 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:50,554 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:52,064 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:35:54,212 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:35:58,589 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:35:59,595 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:36:00,717 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:36:04,632 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:36:06,139 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:36:07,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:36:10,573 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:36:14,057 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:36:15,590 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:36:15,976 - scheduler - INFO - release_worker_id() - Released worker ID: 4
2025-06-10 06:36:15,992 - scheduler - INFO - unsubscribe_worker() - Worker 4 unsubscribed leaving pool. 4 now free for assignment
2025-06-10 06:36:16,024 - scheduler - INFO - release_worker_id() - Released worker ID: 2
2025-06-10 06:36:16,065 - scheduler - INFO - unsubscribe_worker() - Worker 2 unsubscribed leaving pool. 2 now free for assignment
2025-06-10 06:36:16,107 - scheduler - INFO - release_worker_id() - Released worker ID: 3
2025-06-10 06:36:16,131 - scheduler - INFO - unsubscribe_worker() - Worker 3 unsubscribed leaving pool. 3 now free for assignment
2025-06-10 06:36:19,519 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:37:14,802 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:37:14,803 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:37:14,810 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:37:15,399 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:37:15,400 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:37:15,402 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:37:20,475 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 06:37:20,980 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.12
2025-06-10 06:37:21,484 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 06:37:21,986 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.13
2025-06-10 06:37:22,136 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 06:37:22,145 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.11
2025-06-10 06:37:22,349 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 06:37:22,523 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.10
2025-06-10 06:37:22,767 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:22,785 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:22,796 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:22,817 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:28,660 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:28,804 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:29,665 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:30,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:33,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:35,260 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:36,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:37,772 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:39,278 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:41,325 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:41,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:44,299 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:45,035 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:48,057 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:49,187 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:50,692 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:51,657 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:37:54,178 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:37:55,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:37:56,390 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:37:57,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:00,484 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:01,413 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:02,985 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:04,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:06,500 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:06,990 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:09,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:10,004 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:12,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:12,163 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:14,389 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:16,134 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:17,220 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:17,838 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:20,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:21,881 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:22,388 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:23,373 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:27,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:28,797 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:28,973 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:30,579 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:33,673 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:34,281 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:36,289 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:37,028 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:39,305 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:39,567 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:42,140 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:38:42,315 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:38:44,682 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:38:46,185 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:38:46,400 - scheduler - INFO - release_worker_id() - Released worker ID: 3
2025-06-10 06:38:46,444 - scheduler - INFO - unsubscribe_worker() - Worker 3 unsubscribed leaving pool. 3 now free for assignment
2025-06-10 06:38:46,469 - scheduler - INFO - release_worker_id() - Released worker ID: 4
2025-06-10 06:38:46,476 - scheduler - INFO - unsubscribe_worker() - Worker 4 unsubscribed leaving pool. 4 now free for assignment
2025-06-10 06:38:46,502 - scheduler - INFO - release_worker_id() - Released worker ID: 2
2025-06-10 06:38:46,514 - scheduler - INFO - unsubscribe_worker() - Worker 2 unsubscribed leaving pool. 2 now free for assignment
2025-06-10 06:38:46,570 - scheduler - INFO - release_worker_id() - Released worker ID: 1
2025-06-10 06:38:46,582 - scheduler - INFO - unsubscribe_worker() - Worker 1 unsubscribed leaving pool. 1 now free for assignment
2025-06-10 06:38:49,976 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:42:58,384 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:42:58,390 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:42:58,402 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:42:59,171 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:42:59,175 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:42:59,195 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:43:04,169 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 06:43:04,522 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.11
2025-06-10 06:43:05,649 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 06:43:05,659 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.12
2025-06-10 06:43:05,695 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 06:43:05,863 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.10
2025-06-10 06:43:06,255 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 06:43:06,261 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.13
2025-06-10 06:43:06,308 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:06,330 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:06,335 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:06,352 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:11,687 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:11,692 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:13,222 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:13,753 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:17,652 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:18,576 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:18,922 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:20,986 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:23,106 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:24,925 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:25,642 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:26,454 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:28,568 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:30,471 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:31,261 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:32,481 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:33,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:35,780 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:36,801 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:38,101 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:39,103 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:41,105 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:43,113 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:44,168 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:44,619 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:46,645 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:48,871 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:49,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:50,310 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:52,180 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:43:54,083 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:43:55,463 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:43:55,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:43:57,694 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:00,463 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:01,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:02,129 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:03,153 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:05,677 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:06,969 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:08,041 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:10,084 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:11,088 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:12,960 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:13,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:15,948 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:17,941 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:18,310 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:19,154 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:19,577 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=0, timestamp=1749537859543, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-1", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 06:44:20,464 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-1
2025-06-10 06:44:20,591 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:20,680 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:21,170 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:21,170 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:22,164 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:22,862 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:22,868 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:22,918 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:44:23,038 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:44:23,044 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=1, timestamp=1749537859556, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-2", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=2, timestamp=1749537859559, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-3", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=3, timestamp=1749537859559, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-4", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=4, timestamp=1749537859561, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-5", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=5, timestamp=1749537859565, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-6", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=6, timestamp=1749537859566, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-7", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=7, timestamp=1749537859568, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-8", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=8, timestamp=1749537859568, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-9", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=9, timestamp=1749537859569, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-10", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=10, timestamp=1749537859570, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-11", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=11, timestamp=1749537859571, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-12", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=12, timestamp=1749537859572, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-13", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=13, timestamp=1749537859572, timestamp_type=0, key=None, value='{"subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-14", "job_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 06:44:23,101 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-2
2025-06-10 06:44:23,152 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:23,185 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:23,220 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:23,230 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:23,240 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:23,281 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:23,310 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:44:23,322 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:23,327 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:44:23,354 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-3
2025-06-10 06:44:23,433 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:23,434 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:23,435 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:23,435 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:23,453 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:23,497 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:23,505 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:44:23,987 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:23,987 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:44:24,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:24,783 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-4
2025-06-10 06:44:25,679 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:25,690 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:25,697 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:25,722 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:25,753 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:25,843 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:44:25,939 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:44:25,987 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:44:25,989 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-5
2025-06-10 06:44:26,412 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:26,665 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:27,179 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:27,727 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:28,183 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:28,184 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:28,565 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:28,739 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:44:28,739 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:28,771 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:44:29,011 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-6
2025-06-10 06:44:29,040 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:29,128 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:29,688 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:30,190 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:30,190 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:30,679 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:31,194 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:31,267 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:31,649 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:44:32,003 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:44:32,563 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-7
2025-06-10 06:44:33,133 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:33,883 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:33,883 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:33,991 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:33,995 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:34,125 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:34,165 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:34,197 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:34,203 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:44:34,247 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:44:34,352 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-8
2025-06-10 06:44:34,376 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:34,703 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:34,871 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:35,202 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:35,464 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:35,516 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:44:35,663 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:35,684 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:44:36,202 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:44:36,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:37,204 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-9
2025-06-10 06:44:37,832 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:38,008 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:38,236 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:39,363 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:39,710 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:40,213 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:40,213 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:40,463 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:40,758 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:44:41,717 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:44:42,009 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:44:42,218 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-10
2025-06-10 06:44:42,719 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:42,219 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:43,654 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:43,657 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:43,663 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:43,671 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:43,674 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:43,686 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:44:43,698 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:44:44,226 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-11
2025-06-10 06:44:44,337 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:44,648 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:44,727 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:44,879 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:44,884 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:44,912 - scheduler - INFO - release_worker_id() - Released worker ID: 4
2025-06-10 06:44:44,922 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:44:44,956 - scheduler - INFO - unsubscribe_worker() - Worker 4 unsubscribed leaving pool. 4 now free for assignment
2025-06-10 06:44:45,003 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:44:45,113 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:44:45,245 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:45,269 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-12
2025-06-10 06:44:45,288 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:45,458 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:45,675 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:45,750 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:45,751 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:46,075 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:44:46,078 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:46,231 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:44:46,685 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-13
2025-06-10 06:44:46,690 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:46,692 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:46,706 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:44:46,713 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:46,723 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:46,752 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:44:47,234 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:44:47,726 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-14
2025-06-10 06:44:47,726 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:44:47,727 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:44:47,929 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:44:48,236 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:44:48,312 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:44:48,317 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:44:48,322 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:44:48,826 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:50,332 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:51,857 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:54,086 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:44:57,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:44:57,162 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:44:59,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:02,192 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:02,726 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:04,966 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:07,351 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:09,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:11,249 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:13,138 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:15,455 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:16,457 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:18,969 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:21,474 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:22,468 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:24,479 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:27,486 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:28,456 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:30,494 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:33,816 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:34,012 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:36,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:39,214 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:39,534 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:42,226 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:44,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:44,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:48,034 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:50,039 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:51,045 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:53,552 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:45:55,717 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:45:57,067 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:45:59,371 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:01,149 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:02,113 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:05,092 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:06,390 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:08,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:11,891 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:11,943 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:14,627 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:17,138 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:17,640 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:20,871 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:23,041 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:23,813 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:26,500 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:28,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:29,398 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:32,062 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:33,945 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:35,510 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:37,661 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:39,672 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:40,764 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:43,179 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:45,713 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:46,697 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:48,548 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:51,065 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:52,172 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:46:55,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:46:57,082 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:46:58,385 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:01,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:02,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:04,077 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:06,126 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:09,179 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:10,184 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:11,186 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:14,704 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:14,705 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=14, timestamp=1749538034701, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-1", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=15, timestamp=1749538034701, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-2", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 06:47:14,720 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-1
2025-06-10 06:47:14,721 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:15,551 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:15,692 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:15,699 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:15,701 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:15,730 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:15,756 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:47:16,202 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:47:16,691 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-2
2025-06-10 06:47:16,705 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:16,726 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:16,728 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:16,705 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:17,207 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:17,412 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:17,413 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:47:17,456 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:47:17,588 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=16, timestamp=1749538034703, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-3", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=17, timestamp=1749538034705, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-4", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=18, timestamp=1749538034706, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-5", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=19, timestamp=1749538034707, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-6", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=20, timestamp=1749538034708, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-7", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=21, timestamp=1749538034709, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-8", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=22, timestamp=1749538034710, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-9", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=23, timestamp=1749538034711, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-10", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=24, timestamp=1749538034712, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-11", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=25, timestamp=1749538034713, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-12", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=26, timestamp=1749538034714, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-13", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=27, timestamp=1749538034715, timestamp_type=0, key=None, value='{"subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-14", "job_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e", "session_id": "7aa0f2d7-1ee4-45af-9e42-769d38596cc2", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 06:47:17,610 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-3
2025-06-10 06:47:17,776 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:17,795 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:17,805 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:17,815 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:18,712 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:47:19,180 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:47:19,349 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:47:20,217 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:20,448 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-4
2025-06-10 06:47:21,136 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:21,137 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:21,725 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:22,227 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:22,418 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:22,729 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:24,237 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:25,242 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:47:25,742 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:47:25,752 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-5
2025-06-10 06:47:26,099 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:26,244 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:26,244 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:26,734 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:26,776 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:26,914 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:27,244 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:27,767 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:47:27,784 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:47:27,787 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-6
2025-06-10 06:47:28,304 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:28,404 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:28,575 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:28,658 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:28,681 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 6.00 | Load: 5.0s | Mem Used: 5120MB | Speed: 1.00
2025-06-10 06:47:28,706 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:47:28,722 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:47:28,749 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-7
2025-06-10 06:47:28,913 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:29,180 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:29,181 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:29,249 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:29,750 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:31,255 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:31,756 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:31,756 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:47:32,252 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:32,648 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:47:33,766 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-8
2025-06-10 06:47:34,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:34,767 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:35,524 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:35,747 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:35,765 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:35,775 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:36,178 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:47:36,271 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:47:36,781 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-9
2025-06-10 06:47:36,784 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:36,831 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:36,843 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:37,844 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:37,906 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:37,962 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:38,031 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 7.00 | Load: 6.0s | Mem Used: 6144MB | Speed: 1.00
2025-06-10 06:47:38,090 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:47:38,495 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:47:38,528 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-10
2025-06-10 06:47:39,181 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:39,262 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:39,285 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:39,315 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:39,331 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:39,371 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:47:39,393 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:47:39,423 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-11
2025-06-10 06:47:39,436 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:39,702 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:39,704 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:39,786 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:40,082 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:47:40,288 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:47:40,791 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-12
2025-06-10 06:47:40,812 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:40,828 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:40,940 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:40,946 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 8.00 | Load: 7.0s | Mem Used: 7168MB | Speed: 1.00
2025-06-10 06:47:40,985 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:47:41,067 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:47:41,139 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:47:42,296 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-13
2025-06-10 06:47:42,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:43,185 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:43,671 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:43,683 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:43,755 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:47:43,795 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:47:43,902 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:47:43,904 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:47:43,954 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:47:43,986 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 06:47:44,629 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-14
2025-06-10 06:47:44,655 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:47:44,932 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:47:45,002 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 10.00 | Load: 9.0s | Mem Used: 9216MB | Speed: 1.00
2025-06-10 06:47:45,309 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:47:45,740 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 9.00 | Load: 8.0s | Mem Used: 8192MB | Speed: 1.00
2025-06-10 06:47:45,770 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:47:45,863 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:46,661 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:47:48,737 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:48,994 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:52,781 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:47:55,018 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:47:55,034 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:47:58,061 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:00,330 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:01,262 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:03,320 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:06,354 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:06,856 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:09,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:12,083 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:12,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:14,587 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:17,448 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:18,205 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:21,067 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:22,971 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:23,487 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:27,766 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:28,287 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:29,792 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:34,017 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:34,115 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:36,196 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:39,567 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:40,572 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:42,030 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:45,133 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:46,254 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:47,808 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:50,271 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:52,286 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:53,282 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:48:56,288 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:48:57,970 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:48:58,801 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:02,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:03,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:04,641 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:07,553 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:08,459 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:10,075 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:12,748 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:14,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:15,240 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:19,715 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:20,315 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:21,317 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:23,103 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 5
2025-06-10 06:49:23,242 - scheduler - INFO - subscribe_worker() - Worker 5 registered at 172.18.0.13
2025-06-10 06:49:23,860 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:25,720 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:26,364 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:26,865 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:29,454 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:30,829 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:32,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:32,469 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:34,983 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:35,986 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:37,334 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:37,995 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:40,295 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:41,531 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:42,536 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:43,544 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:45,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:47,584 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:50,156 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:50,594 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:50,795 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:54,430 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:49:55,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:49:56,644 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:49:56,671 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:49:59,789 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:02,351 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:03,257 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:04,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:05,794 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:08,448 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:09,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:10,458 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:11,460 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:13,968 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:15,202 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:15,971 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:17,508 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:20,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:20,767 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:21,770 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:22,960 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:25,797 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:27,225 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:27,551 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:28,565 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:30,935 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:32,446 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:33,165 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:34,057 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:36,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:38,433 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:39,517 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:39,529 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:41,415 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:44,137 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:44,640 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:44,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:47,373 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:49,851 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:49,934 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:50,142 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:52,747 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:50:55,502 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:50:55,821 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:50:56,034 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:50:57,873 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:01,187 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:01,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:01,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:03,695 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:06,353 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:06,848 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:07,239 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:09,255 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:11,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:12,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:12,783 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:15,275 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:17,698 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:17,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:18,367 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:20,774 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:23,290 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:24,292 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:24,292 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:26,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:29,381 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:31,256 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:31,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:32,259 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:36,502 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:36,758 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:37,074 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:38,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:42,161 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:43,146 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:43,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:44,185 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:47,698 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:48,326 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:49,205 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:50,207 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:53,218 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:53,719 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:51:55,239 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:51:55,740 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:51:58,847 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:51:59,349 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:00,858 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:01,358 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:04,993 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:05,864 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:06,423 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:06,886 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:11,307 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:11,805 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:12,536 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:12,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:16,883 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:17,641 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:17,888 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:18,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:23,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:23,377 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:23,514 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:23,555 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:28,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:29,275 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:29,495 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:30,201 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:34,317 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:34,546 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:34,906 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:35,718 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:39,883 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:40,889 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:42,374 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:43,008 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:45,954 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:46,748 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:52:52,831 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:52:52,832 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:52:52,832 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:52:52,833 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 5
2025-06-10 06:52:53,603 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:52:53,603 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:52:53,609 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:52:53,615 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:52:53,615 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:52:53,616 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:53:23,560 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
2025-06-10 06:54:03,242 - scheduler - INFO - <module>() - üîß Logger initialized correctly in scheduler_service.py
2025-06-10 06:54:03,243 - scheduler - INFO - create_redis_client() - Redis client created successfully
2025-06-10 06:54:03,253 - scheduler - INFO - __init__() - Runtime model loaded from /mnt/efs/runtime_model.joblib
2025-06-10 06:54:04,026 - scheduler - INFO - _startup() - Scheduler started with workers..... 
2025-06-10 06:54:04,029 - scheduler - INFO - _ingress_loop() - üîÅ Starting _ingress_loop ...
2025-06-10 06:54:04,038 - scheduler - INFO - _heartbeat_monitor_loop() - üì° Starting heartbeat monitor...
2025-06-10 06:54:08,527 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 1
2025-06-10 06:54:08,992 - scheduler - INFO - subscribe_worker() - Worker 1 registered at 172.18.0.11
2025-06-10 06:54:09,778 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 2
2025-06-10 06:54:10,282 - scheduler - INFO - subscribe_worker() - Worker 2 registered at 172.18.0.13
2025-06-10 06:54:10,673 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 3
2025-06-10 06:54:10,678 - scheduler - INFO - subscribe_worker() - Worker 3 registered at 172.18.0.12
2025-06-10 06:54:11,060 - scheduler - INFO - assign_worker_id() - Assigned new worker ID: 4
2025-06-10 06:54:11,062 - scheduler - INFO - subscribe_worker() - Worker 4 registered at 172.18.0.10
2025-06-10 06:54:11,078 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:11,108 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:11,118 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:11,125 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:17,958 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:19,463 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:19,966 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:20,467 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:24,358 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:24,990 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:25,491 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:26,776 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:30,567 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:31,447 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:32,456 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:33,356 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:37,251 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:38,893 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:39,396 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:40,400 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:41,836 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=28, timestamp=1749538481826, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-1", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1)]}
2025-06-10 06:54:42,910 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-1
2025-06-10 06:54:43,915 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:44,233 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:44,416 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:44,417 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:44,424 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:44,527 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:44,603 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:44,783 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:45,169 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:54:45,403 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:54:45,421 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:46,605 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:46,621 - scheduler - INFO - _ingress_loop() - Received Kafka messages: {TopicPartition(topic='tasks', partition=0): [ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=29, timestamp=1749538481828, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-2", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.01, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=30, timestamp=1749538481829, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-3", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=31, timestamp=1749538481830, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-4", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.1, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=32, timestamp=1749538481831, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-5", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=33, timestamp=1749538481831, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-6", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 0.5, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=34, timestamp=1749538481832, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-7", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=705, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=35, timestamp=1749538481834, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-8", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 1.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=701, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=36, timestamp=1749538481834, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-9", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=37, timestamp=1749538481835, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-10", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 10.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=38, timestamp=1749538481836, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-11", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=707, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=39, timestamp=1749538481837, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-12", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 20.0, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=703, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=40, timestamp=1749538481838, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-13", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "liblinear", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=706, serialized_header_size=-1), ConsumerRecord(topic='tasks', partition=0, leader_epoch=0, offset=41, timestamp=1749538481838, timestamp_type=0, key=None, value='{"subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-14", "job_id": "4121a412-f34d-456b-8576-731efa888664", "session_id": "78e8cb0d-df4f-4778-8166-094ee4b4a4ca", "dataset_id": "iris", "model_type": "LogisticRegression", "parameters": {"C": 100, "class_weight": null, "dual": false, "fit_intercept": true, "intercept_scaling": 1, "l1_ratio": null, "max_iter": 100, "multi_class": "deprecated", "n_jobs": null, "penalty": "l2", "random_state": null, "solver": "lbfgs", "tol": 0.0001, "verbose": 0, "warm_start": false}, "train_params": {"cv": 5, "test_size": 0.25, "random_state": 42, "feature_columns": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "target_column": "species"}}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=702, serialized_header_size=-1)]}
2025-06-10 06:54:47,427 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-2
2025-06-10 06:54:47,532 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:47,543 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:47,617 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:47,692 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:47,714 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:48,360 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:48,442 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:54:48,444 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:54:48,462 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-3
2025-06-10 06:54:48,481 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:48,485 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:48,505 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:48,740 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:49,436 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:49,437 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:49,440 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:49,927 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:54:49,893 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:49,977 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:54:50,039 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-4
2025-06-10 06:54:50,160 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:50,194 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:50,267 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:50,410 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:50,415 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:50,427 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:50,434 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:54:50,658 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:54:50,676 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-5
2025-06-10 06:54:50,697 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:50,945 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:51,450 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:51,944 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:54:51,944 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:51,944 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:51,944 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=0, timestamp=1749538491941, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-1", "status": "DONE", "received_at": "2025-06-10T06:54:09.788658+00:00Z", "started_at": "2025-06-10T06:54:09.788666+00:00Z", "finished_at": "2025-06-10T06:54:51.939222+00:00Z", "cpu_percent_avg": 16.310714285714294, "mem_percent_avg": 34.502380952380975, "metric_name": "accuracy", "metric_value": 0.7}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 06:54:51,945 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:51,945 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:51,945 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:54:51,946 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:51,946 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}]
2025-06-10 06:54:51,946 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:54:51,946 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:54:51,947 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:54:52,450 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-6
2025-06-10 06:54:52,456 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:52,496 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:52,505 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 1.00 | Load: 0.0s | Mem Used: 0MB | Speed: 1.00
2025-06-10 06:54:52,530 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:52,560 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:52,580 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:52,695 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:54:52,852 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:54:53,954 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-7
2025-06-10 06:54:54,523 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:54,524 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:54,527 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:54,576 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:54,784 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:54,959 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:55,173 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:54:55,178 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:54:55,203 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:54:55,322 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:54:55,469 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-8
2025-06-10 06:54:55,488 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:55,511 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:55,519 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:54:55,561 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:55,627 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:56,008 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:56,050 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:54:56,064 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:54:56,259 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-9
2025-06-10 06:54:56,965 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:54:57,010 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:54:58,013 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:54:58,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:54:58,031 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:54:58,312 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:54:58,472 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:58,974 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:54:59,476 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:55:00,452 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:55:00,453 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:00,482 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-10
2025-06-10 06:55:00,984 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:55:01,459 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:01,987 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:55:02,811 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:02,812 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:02,992 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:03,997 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:04,499 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:55:05,001 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 2.00 | Load: 1.0s | Mem Used: 1024MB | Speed: 1.00
2025-06-10 06:55:06,052 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:06,053 - scheduler - INFO - _ingress_loop() - Selected Worker: 4
2025-06-10 06:55:06,202 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '4'
2025-06-10 06:55:06,203 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-11
2025-06-10 06:55:06,204 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:55:06,205 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:55:06,206 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:06,232 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:06,272 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:06,294 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:06,298 - scheduler - INFO - _ingress_loop() - Selected Worker: 1
2025-06-10 06:55:06,366 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '1'
2025-06-10 06:55:06,416 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-12
2025-06-10 06:55:06,449 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:55:06,472 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:55:06,506 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:55:07,008 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:07,510 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:07,684 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:07,709 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:08,014 - scheduler - INFO - _ingress_loop() - Selected Worker: 2
2025-06-10 06:55:09,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:10,027 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '2'
2025-06-10 06:55:10,531 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 4
2025-06-10 06:55:10,788 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-13
2025-06-10 06:55:11,266 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:12,037 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:55:13,546 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:55:13,547 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:55:14,551 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:55:15,054 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:15,330 - scheduler - INFO - release_worker_id() - Released worker ID: 4
2025-06-10 06:55:16,561 - scheduler - INFO - _ingress_loop() - Worker 4 ‚Üí Score: 3.00 | Load: 2.0s | Mem Used: 2048MB | Speed: 1.00
2025-06-10 06:55:16,711 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-4 from unsubscribed worker 4
2025-06-10 06:55:17,040 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-4 reassigned to worker 1
2025-06-10 06:55:17,022 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:55:17,086 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-10 from unsubscribed worker 4
2025-06-10 06:55:17,127 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:55:17,134 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-10 reassigned to worker 2
2025-06-10 06:55:17,169 - scheduler - INFO - _ingress_loop() - 
Scheduling Task: 4121a412-f34d-456b-8576-731efa888664-subtask-14
2025-06-10 06:55:17,563 - scheduler - INFO - unsubscribe_worker() - Worker 4 unsubscribed leaving pool. 4 now free for assignment
2025-06-10 06:55:18,067 - scheduler - INFO - _ingress_loop() - Predicted Runtime: 1.00 sec
2025-06-10 06:55:18,690 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:18,718 - scheduler - INFO - _ingress_loop() - Task Memory: 1024 MB
2025-06-10 06:55:18,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:18,792 - scheduler - INFO - _ingress_loop() - Worker 1 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:55:18,822 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:18,823 - scheduler - INFO - _ingress_loop() - Worker 2 ‚Üí Score: 5.00 | Load: 4.0s | Mem Used: 4096MB | Speed: 1.00
2025-06-10 06:55:18,879 - scheduler - INFO - _ingress_loop() - Worker 3 ‚Üí Score: 4.00 | Load: 3.0s | Mem Used: 3072MB | Speed: 1.00
2025-06-10 06:55:18,900 - scheduler - INFO - _ingress_loop() - Selected Worker: 3
2025-06-10 06:55:18,902 - scheduler - INFO - _ingress_loop() - Task sent to topic 'train' with key '3'
2025-06-10 06:55:25,206 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:26,193 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:26,957 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:28,263 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:55:29,214 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=1, timestamp=1749538528202, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-5", "status": "DONE", "received_at": "2025-06-10T06:54:52.045908+00:00Z", "started_at": "2025-06-10T06:54:52.045910+00:00Z", "finished_at": "2025-06-10T06:55:28.202395+00:00Z", "cpu_percent_avg": 14.998611111111112, "mem_percent_avg": 34.28333333333338, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 06:55:29,214 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:55:29,214 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}]
2025-06-10 06:55:29,214 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:55:31,431 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:32,432 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:33,988 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:36,447 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:38,454 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:39,648 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:42,323 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:43,972 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:46,481 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:48,010 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:49,035 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:51,929 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:55:54,497 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:55:55,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:55:58,510 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:00,015 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:01,489 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:03,528 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:05,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:06,875 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:08,366 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:56:08,411 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=2, timestamp=1749538568364, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-9", "status": "DONE", "received_at": "2025-06-10T06:55:28.208963+00:00Z", "started_at": "2025-06-10T06:55:28.208966+00:00Z", "finished_at": "2025-06-10T06:56:08.364474+00:00Z", "cpu_percent_avg": 15.115000000000006, "mem_percent_avg": 33.41750000000004, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 06:56:08,884 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:56:09,385 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}]
2025-06-10 06:56:10,229 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:10,229 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:56:11,392 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:12,392 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:15,856 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:17,252 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:17,862 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:21,474 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:22,504 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:23,610 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:27,630 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:28,825 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:29,829 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:34,527 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:35,029 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:36,533 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:40,197 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:42,008 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:43,014 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:45,861 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:47,870 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:48,443 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:51,886 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:52,889 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:56:53,531 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:56:53,895 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:56:54,398 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=3, timestamp=1749538613530, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "1f198b56-a76a-4466-b772-0444ca8a4d5e-subtask-12", "status": "DONE", "received_at": "2025-06-10T06:56:08.368179+00:00Z", "started_at": "2025-06-10T06:56:08.368181+00:00Z", "finished_at": "2025-06-10T06:56:53.530244+00:00Z", "cpu_percent_avg": 14.79111111111112, "mem_percent_avg": 33.02777777777779, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 06:56:55,227 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:56:55,240 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}]
2025-06-10 06:56:55,246 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:56:57,919 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:56:58,924 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:00,428 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:03,941 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:04,443 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:06,317 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:09,472 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:09,975 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:11,479 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:15,388 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:16,894 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:17,395 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:21,297 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:22,917 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:24,425 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:27,007 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:29,016 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:30,025 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:34,533 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:34,824 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:35,739 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:57:35,739 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:35,769 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=4, timestamp=1749538655737, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-1", "status": "DONE", "received_at": "2025-06-10T06:56:53.533578+00:00Z", "started_at": "2025-06-10T06:56:53.533580+00:00Z", "finished_at": "2025-06-10T06:57:35.737380+00:00Z", "cpu_percent_avg": 14.95714285714286, "mem_percent_avg": 33.16071428571428, "metric_name": "accuracy", "metric_value": 0.7}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=379, serialized_header_size=-1)]}
2025-06-10 06:57:37,745 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:57:38,889 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}]
2025-06-10 06:57:38,921 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:57:39,992 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:40,739 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:42,020 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:45,806 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:46,781 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:49,457 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:51,428 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:52,967 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:57:55,175 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:57:57,692 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:57:59,519 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:00,792 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:05,177 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:06,188 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:06,189 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:11,247 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:11,620 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:11,762 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:16,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:17,783 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:17,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:18,784 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:58:18,817 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=5, timestamp=1749538697909, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-4", "status": "DONE", "received_at": "2025-06-10T06:57:35.741212+00:00Z", "started_at": "2025-06-10T06:57:35.741215+00:00Z", "finished_at": "2025-06-10T06:58:17.909703+00:00Z", "cpu_percent_avg": 14.963095238095244, "mem_percent_avg": 33.198809523809565, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 06:58:19,829 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:58:20,288 - scheduler - INFO - observe() - üì¶ Buffer size: 6 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 42.168488}]
2025-06-10 06:58:20,288 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:58:22,794 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:24,507 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:25,010 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:29,522 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:30,025 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:31,026 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:35,557 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:35,995 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:37,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:41,209 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:42,133 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:43,048 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:46,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:48,195 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:49,456 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:52,070 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:58:54,407 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:58:55,410 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:58:56,414 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:58:57,404 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=6, timestamp=1749538736069, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-7", "status": "DONE", "received_at": "2025-06-10T06:58:17.913338+00:00Z", "started_at": "2025-06-10T06:58:17.913340+00:00Z", "finished_at": "2025-06-10T06:58:56.069395+00:00Z", "cpu_percent_avg": 15.02236842105263, "mem_percent_avg": 33.23552631578946, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=379, serialized_header_size=-1)]}
2025-06-10 06:58:57,922 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:58:58,427 - scheduler - INFO - observe() - üì¶ Buffer size: 7 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 42.168488}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.156055}]
2025-06-10 06:58:58,666 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:58:59,936 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:00,516 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:01,443 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:05,943 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:06,112 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:06,949 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:11,129 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:11,761 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:13,136 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:16,828 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:18,076 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:18,501 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:22,032 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:23,807 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:24,809 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:27,319 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 06:59:27,319 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:27,634 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=7, timestamp=1749538767194, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-10", "status": "DONE", "received_at": "2025-06-10T06:58:56.073257+00:00Z", "started_at": "2025-06-10T06:58:56.073259+00:00Z", "finished_at": "2025-06-10T06:59:27.194629+00:00Z", "cpu_percent_avg": 14.724193548387095, "mem_percent_avg": 33.051612903225816, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=382, serialized_header_size=-1)]}
2025-06-10 06:59:27,759 - scheduler - INFO - _status_loop() - Here
2025-06-10 06:59:27,760 - scheduler - INFO - observe() - üì¶ Buffer size: 8 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 42.168488}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.156055}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.12137}]
2025-06-10 06:59:27,762 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 06:59:30,571 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:31,036 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:32,833 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:36,216 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:38,203 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:38,703 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:42,736 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:43,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:44,243 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:48,490 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:49,450 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:49,593 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 06:59:53,972 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 06:59:54,975 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 06:59:55,751 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:00,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:00,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:01,546 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:03,424 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:00:03,579 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=8, timestamp=1749538803423, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-13", "status": "DONE", "received_at": "2025-06-10T06:59:27.198594+00:00Z", "started_at": "2025-06-10T06:59:27.198597+00:00Z", "finished_at": "2025-06-10T07:00:03.423031+00:00Z", "cpu_percent_avg": 15.55833333333334, "mem_percent_avg": 33.17777777777778, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 07:00:03,580 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:00:04,080 - scheduler - INFO - observe() - üì¶ Buffer size: 9 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 42.168488}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.156055}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.12137}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.224434}]
2025-06-10 07:00:04,474 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 07:00:05,588 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:06,750 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:07,757 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:11,577 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:11,952 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:14,134 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:16,742 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:18,047 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:21,224 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:22,362 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:23,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:27,258 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:27,761 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:29,267 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:32,435 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:33,271 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:35,533 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:38,692 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:39,570 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:42,108 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:44,925 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:45,415 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:00:45,416 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:45,456 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=9, timestamp=1749538845413, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-10", "status": "DONE", "received_at": "2025-06-10T07:00:05.264790+00:00Z", "started_at": "2025-06-10T07:00:05.264793+00:00Z", "finished_at": "2025-06-10T07:00:45.412899+00:00Z", "cpu_percent_avg": 15.620000000000008, "mem_percent_avg": 33.436250000000015, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=382, serialized_header_size=-1)]}
2025-06-10 07:00:46,119 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:00:46,789 - scheduler - INFO - observe() - üì¶ Buffer size: 10 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.150556}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.156485}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.155508}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 45.162063}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 42.2038}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 42.168488}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.156055}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.12137}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.224434}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 40.148106}]
2025-06-10 07:00:47,434 - scheduler - INFO - observe() - Runtime model retrained on 10 samples
2025-06-10 07:00:47,764 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 07:00:48,317 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:50,618 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:50,932 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:53,611 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:00:55,773 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:00:56,775 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:00:58,780 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:02,000 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:02,279 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:04,791 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:07,370 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:07,873 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:10,738 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:12,465 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:13,336 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:16,847 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:18,458 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:19,463 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:22,053 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:01:22,066 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:22,405 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=10, timestamp=1749538881547, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "620d0ff8-3c2c-46ee-9f05-11ba6f78e44e-subtask-13", "status": "DONE", "received_at": "2025-06-10T07:00:45.416726+00:00Z", "started_at": "2025-06-10T07:00:45.416728+00:00Z", "finished_at": "2025-06-10T07:01:21.547811+00:00Z", "cpu_percent_avg": 15.05277777777778, "mem_percent_avg": 34.51805555555558, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 07:01:22,763 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:01:23,572 - scheduler - INFO - observe() - üì¶ Buffer size: 1 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.131083}]
2025-06-10 07:01:23,608 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=1.00 | Score=0.00
2025-06-10 07:01:24,577 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:25,566 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:27,793 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:30,293 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:31,151 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:32,926 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:35,937 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:36,940 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:38,576 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:41,959 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:43,134 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:44,289 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:47,852 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:48,506 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:49,506 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:53,478 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:01:54,481 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:01:55,686 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:01:57,681 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:01:57,682 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=11, timestamp=1749538917680, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-1", "status": "DONE", "received_at": "2025-06-10T07:01:21.551455+00:00Z", "started_at": "2025-06-10T07:01:21.551457+00:00Z", "finished_at": "2025-06-10T07:01:57.680256+00:00Z", "cpu_percent_avg": 15.676388888888884, "mem_percent_avg": 34.48750000000004, "metric_name": "accuracy", "metric_value": 0.7}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 07:01:57,682 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:01:57,683 - scheduler - INFO - observe() - üì¶ Buffer size: 2 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.131083}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 36.128799}]
2025-06-10 07:01:57,782 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=0.81 | Score=0.00
2025-06-10 07:02:00,434 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:00,815 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:02,094 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:05,693 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:07,101 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:08,230 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:12,677 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:15,730 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:16,733 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:17,737 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:22,318 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:23,830 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:24,833 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:27,784 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:28,788 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:02:28,790 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=12, timestamp=1749538948787, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-5", "status": "DONE", "received_at": "2025-06-10T07:01:57.684142+00:00Z", "started_at": "2025-06-10T07:01:57.684144+00:00Z", "finished_at": "2025-06-10T07:02:28.787128+00:00Z", "cpu_percent_avg": 15.182258064516128, "mem_percent_avg": 34.682258064516134, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 07:02:28,791 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:02:29,788 - scheduler - INFO - observe() - üì¶ Buffer size: 3 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.131083}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 36.128799}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.102984}]
2025-06-10 07:02:30,460 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=0.65 | Score=0.00
2025-06-10 07:02:30,631 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:30,812 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:33,545 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:36,935 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:38,442 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:38,741 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:43,461 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:44,052 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:44,931 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:49,075 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:49,576 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:51,011 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:02:54,691 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:02:56,198 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:02:57,975 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:00,713 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:02,127 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:03,132 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:06,763 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:06,928 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:03:07,264 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=13, timestamp=1749538986925, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-6", "status": "DONE", "received_at": "2025-06-10T07:02:28.791389+00:00Z", "started_at": "2025-06-10T07:02:28.791391+00:00Z", "finished_at": "2025-06-10T07:03:06.925053+00:00Z", "cpu_percent_avg": 15.590789473684211, "mem_percent_avg": 34.51447368421052, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=380, serialized_header_size=-1)]}
2025-06-10 07:03:07,765 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:03:07,765 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:07,931 - scheduler - INFO - observe() - üì¶ Buffer size: 4 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.131083}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 36.128799}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.102984}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.133662}]
2025-06-10 07:03:08,268 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=0.53 | Score=0.00
2025-06-10 07:03:09,770 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:12,634 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:13,269 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:15,777 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:17,786 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:19,291 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:21,763 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:25,003 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:25,546 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:27,601 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:30,693 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:32,048 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:33,323 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:36,268 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:37,767 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:39,421 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:42,451 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:44,002 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:44,066 - scheduler - INFO - _status_loop() - ‚úÖ Fetched raw records from metrics:
2025-06-10 07:03:44,106 - scheduler - INFO - _status_loop() - {TopicPartition(topic='metrics', partition=0): [ConsumerRecord(topic='metrics', partition=0, leader_epoch=0, offset=14, timestamp=1749539024063, timestamp_type=0, key=None, value='{"worker_id": "1", "subtask_id": "4121a412-f34d-456b-8576-731efa888664-subtask-7", "status": "DONE", "received_at": "2025-06-10T07:03:06.928914+00:00Z", "started_at": "2025-06-10T07:03:06.928916+00:00Z", "finished_at": "2025-06-10T07:03:44.063627+00:00Z", "cpu_percent_avg": 15.517567567567577, "mem_percent_avg": 34.504054054054066, "metric_name": "accuracy", "metric_value": 1.0}', headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=381, serialized_header_size=-1)]}
2025-06-10 07:03:44,504 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:45,459 - scheduler - INFO - _status_loop() - Here
2025-06-10 07:03:46,009 - scheduler - INFO - observe() - üì¶ Buffer size: 5 | Contents: [{'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 36.131083}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 0.7], 'y': 36.128799}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 31.102984}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 38.133662}, {'x': [0, 0, 0, 1, 1024, 1.5, 74, 1.0], 'y': 37.134711}]
2025-06-10 07:03:46,337 - scheduler - INFO - _status_loop() - Worker 1 updated: Load=0.0s | Mem=0MB | Speed=0.43 | Score=0.00
2025-06-10 07:03:48,013 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:49,442 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:50,669 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:53,679 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:03:54,637 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:03:55,896 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:03:59,664 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:04:00,684 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 1
2025-06-10 07:04:01,253 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 2
2025-06-10 07:04:05,656 - scheduler - INFO - receive_heartbeat() - ‚úÖ Received heartbeat from worker 3
2025-06-10 07:04:05,926 - scheduler - INFO - release_worker_id() - Released worker ID: 3
2025-06-10 07:04:05,944 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-3 from unsubscribed worker 3
2025-06-10 07:04:05,963 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-3 reassigned to worker 2
2025-06-10 07:04:05,981 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-9 from unsubscribed worker 3
2025-06-10 07:04:06,015 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-9 reassigned to worker 2
2025-06-10 07:04:06,029 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-13 from unsubscribed worker 3
2025-06-10 07:04:06,043 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-13 reassigned to worker 1
2025-06-10 07:04:06,063 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-14 from unsubscribed worker 3
2025-06-10 07:04:06,130 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-14 reassigned to worker 2
2025-06-10 07:04:06,152 - scheduler - INFO - unsubscribe_worker() - Worker 3 unsubscribed leaving pool. 3 now free for assignment
2025-06-10 07:04:06,442 - scheduler - INFO - release_worker_id() - Released worker ID: 2
2025-06-10 07:04:06,446 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-2 from unsubscribed worker 2
2025-06-10 07:04:06,798 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-2 reassigned to worker 1
2025-06-10 07:04:07,202 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-8 from unsubscribed worker 2
2025-06-10 07:04:07,708 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-8 reassigned to worker 1
2025-06-10 07:04:07,857 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-12 from unsubscribed worker 2
2025-06-10 07:04:07,869 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-12 reassigned to worker 1
2025-06-10 07:04:07,903 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-10 from unsubscribed worker 2
2025-06-10 07:04:07,921 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-10 reassigned to worker 1
2025-06-10 07:04:07,938 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-3 from unsubscribed worker 2
2025-06-10 07:04:07,966 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-3 reassigned to worker 1
2025-06-10 07:04:08,016 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-9 from unsubscribed worker 2
2025-06-10 07:04:08,041 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-9 reassigned to worker 1
2025-06-10 07:04:08,049 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-14 from unsubscribed worker 2
2025-06-10 07:04:08,063 - scheduler - INFO - _requeue_task() - ‚úÖ Task 4121a412-f34d-456b-8576-731efa888664-subtask-14 reassigned to worker 1
2025-06-10 07:04:08,366 - scheduler - INFO - unsubscribe_worker() - Worker 2 unsubscribed leaving pool. 2 now free for assignment
2025-06-10 07:04:08,383 - scheduler - INFO - release_worker_id() - Released worker ID: 1
2025-06-10 07:04:08,410 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-1 from unsubscribed worker 1
2025-06-10 07:04:08,629 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:08,682 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,352 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-5 from unsubscribed worker 1
2025-06-10 07:04:09,489 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,577 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,578 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-6 from unsubscribed worker 1
2025-06-10 07:04:09,607 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,680 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,699 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-7 from unsubscribed worker 1
2025-06-10 07:04:09,731 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,742 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,754 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-11 from unsubscribed worker 1
2025-06-10 07:04:09,765 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,771 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,777 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-4 from unsubscribed worker 1
2025-06-10 07:04:09,789 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,819 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,829 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-13 from unsubscribed worker 1
2025-06-10 07:04:09,861 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:09,885 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:09,888 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-2 from unsubscribed worker 1
2025-06-10 07:04:09,902 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:10,195 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:10,199 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-8 from unsubscribed worker 1
2025-06-10 07:04:10,222 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:10,689 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:10,697 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-12 from unsubscribed worker 1
2025-06-10 07:04:10,699 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:10,714 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:11,140 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-10 from unsubscribed worker 1
2025-06-10 07:04:11,280 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:11,341 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:11,376 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-3 from unsubscribed worker 1
2025-06-10 07:04:11,583 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:11,604 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:11,619 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-9 from unsubscribed worker 1
2025-06-10 07:04:11,627 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:11,648 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:11,701 - scheduler - INFO - unsubscribe_worker() - ‚ôªÔ∏è Reassigning task 4121a412-f34d-456b-8576-731efa888664-subtask-14 from unsubscribed worker 1
2025-06-10 07:04:11,727 - scheduler - WARNING - _select_worker() - No workers with enough memory; falling back to min effective load
2025-06-10 07:04:11,743 - scheduler - ERROR - _requeue_task() - ‚ùå Failed to reassign task
Traceback (most recent call last):
  File "/app/scheduler_service.py", line 239, in _requeue_task
    worker, _ = self._select_worker(est, mem_mb)
  File "/app/scheduler_service.py", line 195, in _select_worker
    best_worker = min(score_map, key=lambda wid: score_map[wid]["score"])
ValueError: min() arg is an empty sequence
2025-06-10 07:04:11,760 - scheduler - INFO - unsubscribe_worker() - Worker 1 unsubscribed leaving pool. 1 now free for assignment
2025-06-10 07:04:15,830 - scheduler - INFO - _shutdown() - Gracefully Shutting down scheduler 
